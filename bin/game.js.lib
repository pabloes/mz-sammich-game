[
  {
    "path": "node_modules/decentraland-ecs/dist/src/index.js",
    "content": "!function(t,e){for(var n in e)t[n]=e[n]}(this,function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=30)}([function(t,e,n){\"use strict\";var o=this&&this.__assign||function(){return(o=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s},i=this&&this.__read||function(t,e){var n=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},s=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t};Object.defineProperty(e,\"__esModule\",{value:!0}),e.isDisposableComponent=e.ObservableComponent=e.getComponentId=e.getComponentClassId=e.getComponentName=e.DisposableComponent=e.Component=e.DisposableComponentUpdated=e.DisposableComponentRemoved=e.DisposableComponentCreated=void 0;var a=n(1),p=n(8),u=n(18),l=function(){function t(t,e,n){this.componentId=t,this.componentName=e,this.classId=n}return t=r([p.EventConstructor()],t)}();e.DisposableComponentCreated=l;var c=function(){function t(t){this.componentId=t}return t=r([p.EventConstructor()],t)}();e.DisposableComponentRemoved=c;var h=function(){function t(t,e){this.componentId=t,this.component=e}return t=r([p.EventConstructor()],t)}();function d(t,e){return function(n){if(n.isComponent)throw new TypeError(\"You cannot extend a component. Trying to extend \"+n.originalClassName+\" with: \"+t);if(\"number\"!=typeof e||isNaN(e))throw new Error(\"classId: \"+e+\" is an invalid integer\");var o=n,r=function(){if(!d.engine)throw new Error(\"You need to set a DisposableComponent.engine before creating disposable components\");var n=Array.prototype.slice.call(arguments),r=new(o.bind.apply(o,s([void 0],n))),i=a.newId(\"C\");return Object.defineProperty(r,\"__name__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:t}),Object.defineProperty(r,\"__component__id_\",{enumerable:!1,writable:!1,configurable:!1,value:i}),void 0!==e&&Object.defineProperty(r,\"__classId__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:e}),d.engine&&d.engine.registerComponent(r),r};return void 0!==e&&(r.__classId__symbol_=e),r.__name__symbol_=t,r.isComponent=!0,r.isDisposableComponent=!0,r.originalClassName=t,(r.prototype=n.prototype).constructor=n,r}}function f(t){if(!t)throw new TypeError(t+\" is not a component.\");if(t.__component__id_)return t.__component__id_;throw new TypeError(t+\" is not a registered disposable component.\")}e.DisposableComponentUpdated=h,e.Component=function(t,e){return function(n){if(n.isComponent)throw new TypeError(\"You cannot extend a component. Trying to extend \"+n.originalClassName+\" with: \"+t);var o=n,r=function(){var n=Array.prototype.slice.call(arguments),r=new(o.bind.apply(o,s([void 0],n)));return Object.defineProperty(r,\"__name__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:t}),void 0!==e&&Object.defineProperty(r,\"__classId__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:e}),r};return void 0!==e&&(r.__classId__symbol_=e),r.__name__symbol_=t,r.isComponent=!0,r.originalClassName=t,(r.prototype=n.prototype).constructor=n,r}},e.DisposableComponent=d,function(t){t.engine=null}(d=e.DisposableComponent||(e.DisposableComponent={})),e.getComponentName=function(t){if(!t)throw new TypeError(t+\" is not a component.\");if(t.__name__symbol_)return t.__name__symbol_;throw new TypeError(t+\" is not a registered component.\")},e.getComponentClassId=function(t){if(!t)throw new TypeError(t+\" is not a component.\");if(t.__classId__symbol_)return t.__classId__symbol_;if(!t.__name__symbol_)throw new TypeError(t+\" is not a registered component.\");return null},e.getComponentId=f;var y=function(){function t(){this.dirty=!1,this.data={},this.subscriptions=[]}return t.component=function(t,e){if(delete t[e]){var n=e+\"_\"+Math.random();t[n]=void 0,Object.defineProperty(t,n,o(o({},Object.getOwnPropertyDescriptor(t,n)),{enumerable:!1})),Object.defineProperty(t,e.toString(),{get:function(){return this[n]},set:function(t){var o=this[n];if(this.data[e]=t?f(t):null,this[n]=t,t!==o){this.dirty=!0;for(var r=0;r<this.subscriptions.length;r++)this.subscriptions[r](e,t,o)}},enumerable:!0})}},t.field=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){return this.data[e]},set:function(t){var n=this.data[e];if(this.data[e]=t,t!==n){this.dirty=!0;for(var o=0;o<this.subscriptions.length;o++)this.subscriptions[o](e,t,n)}},enumerable:!0})},t.uiValue=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){return this.data[e].toString()},set:function(t){var n=this.data[e],o=new u.UIValue(t);if(this.data[e]=o,o!==n){this.dirty=!0;for(var r=0;r<this.subscriptions.length;r++)this.subscriptions[r](e,o,n)}},enumerable:!0})},t.readonly=function(t,e){delete t[e]&&Object.defineProperty(t,e.toString(),{get:function(){if(e in this.data==!1)throw new Error(\"The field \"+e+\" is uninitialized\");return this.data[e]},set:function(t){if(e in this.data)throw new Error(\"The field \"+e+\" is readonly\");this.data[e]=t,this.dirty=!0},enumerable:!0,configurable:!1})},t.prototype.onChange=function(t){return this.subscriptions.push(t),this},t.prototype.toJSON=function(){return this.data},t}();e.ObservableComponent=y,e.isDisposableComponent=function(t){return\"__component__id_\"in t}},function(t,e,n){\"use strict\";var o=this&&this.__read||function(t,e){var n=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},r=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,\"__esModule\",{value:!0}),e.openNFTDialog=e.openExternalURL=e.buildArray=e.uuid=e.newId=e.error=e.log=void 0;var i=0;e.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];\"undefined\"!=typeof dcl?dcl.log.apply(dcl,r(t)):console.log.apply(console,r([\"DEBUG:\"],t))},e.error=function(t,e){\"undefined\"!=typeof dcl?dcl.error(t,e):console.error(\"ERROR:\",t,e)},e.newId=function(t){if(i++,0===t.length)throw new Error(\"newId(type: string): type cannot be empty\");return t+i.toString(36)},e.uuid=function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return(\"x\"===t?e:3&e|8).toString(16)}))},e.buildArray=function(t,e){for(var n=[],o=0;o<t;++o)n.push(e());return n},e.openExternalURL=function(t){\"undefined\"!=typeof dcl?dcl.openExternalUrl(t):console.error(\"ERROR: openExternalURL dcl is undefined\")},e.openNFTDialog=function(t,e){if(void 0===e&&(e=null),\"undefined\"!=typeof dcl){var n=t.match(/ethereum:\\/\\/(.+)\\/(.+)/);if(!n||n.length<3)return;dcl.openNFTDialog(n[1],n[2],e)}else console.error(\"ERROR: openNFTDialog dcl is undefined\")}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.RAD2DEG=e.DEG2RAD=e.Epsilon=e.ToLinearSpace=e.ToGammaSpace=e.Space=e.Orientation=void 0,function(t){t[t.CW=0]=\"CW\",t[t.CCW=1]=\"CCW\"}(e.Orientation||(e.Orientation={})),function(t){t[t.LOCAL=0]=\"LOCAL\",t[t.WORLD=1]=\"WORLD\",t[t.BONE=2]=\"BONE\"}(e.Space||(e.Space={})),e.ToGammaSpace=1/2.2,e.ToLinearSpace=2.2,e.Epsilon=1e-6,e.DEG2RAD=Math.PI/180,e.RAD2DEG=360/(2*Math.PI)},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Vector3=void 0;var o=n(9),r=n(2),i=n(10),s=n(6),a=function(){function t(t,e,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),this.x=t,this.y=e,this.z=n}return Object.defineProperty(t.prototype,\"isNonUniform\",{get:function(){var t=Math.abs(this.x),e=Math.abs(this.y);if(t!==e)return!0;var n=Math.abs(this.z);return t!==n||e!==n},enumerable:!1,configurable:!0}),t.Add=function(e,n){return new t(e.x,e.y,e.z).addInPlace(n)},t.GetClipFactor=function(e,n,o,r){var i=t.Dot(e,o)-r;return i/(i-(t.Dot(n,o)-r))},t.GetAngleBetweenVectors=function(e,n,r){var i=e.normalizeToRef(o.MathTmp.Vector3[1]),s=n.normalizeToRef(o.MathTmp.Vector3[2]),a=t.Dot(i,s),p=o.MathTmp.Vector3[3];return t.CrossToRef(i,s,p),t.Dot(p,r)>0?Math.acos(a):-Math.acos(a)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2])},t.FromFloatArray=function(e,n){return t.FromArray(e,n)},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1],n.z=t[e+2]},t.FromFloatArrayToRef=function(e,n,o){return t.FromArrayToRef(e,n,o)},t.FromFloatsToRef=function(t,e,n,o){o.copyFromFloats(t,e,n)},t.Zero=function(){return new t(0,0,0)},t.One=function(){return new t(1,1,1)},t.Up=function(){return new t(0,1,0)},t.Down=function(){return new t(0,-1,0)},t.Forward=function(){return new t(0,0,1)},t.Backward=function(){return new t(0,0,-1)},t.Right=function(){return new t(1,0,0)},t.Left=function(){return new t(-1,0,0)},t.TransformCoordinates=function(e,n){var o=t.Zero();return t.TransformCoordinatesToRef(e,n,o),o},t.TransformCoordinatesToRef=function(e,n,o){return t.TransformCoordinatesFromFloatsToRef(e.x,e.y,e.z,n,o)},t.TransformCoordinatesFromFloatsToRef=function(t,e,n,o,r){var i=o.m,s=t*i[0]+e*i[4]+n*i[8]+i[12],a=t*i[1]+e*i[5]+n*i[9]+i[13],p=t*i[2]+e*i[6]+n*i[10]+i[14],u=1/(t*i[3]+e*i[7]+n*i[11]+i[15]);r.x=s*u,r.y=a*u,r.z=p*u},t.TransformNormal=function(e,n){var o=t.Zero();return t.TransformNormalToRef(e,n,o),o},t.TransformNormalToRef=function(t,e,n){this.TransformNormalFromFloatsToRef(t.x,t.y,t.z,e,n)},t.TransformNormalFromFloatsToRef=function(t,e,n,o,r){var i=o.m;r.x=t*i[0]+e*i[4]+n*i[8],r.y=t*i[1]+e*i[5]+n*i[9],r.z=t*i[2]+e*i[6]+n*i[10]},t.CatmullRom=function(e,n,o,r,i){var s=i*i,a=i*s;return new t(.5*(2*n.x+(-e.x+o.x)*i+(2*e.x-5*n.x+4*o.x-r.x)*s+(-e.x+3*n.x-3*o.x+r.x)*a),.5*(2*n.y+(-e.y+o.y)*i+(2*e.y-5*n.y+4*o.y-r.y)*s+(-e.y+3*n.y-3*o.y+r.y)*a),.5*(2*n.z+(-e.z+o.z)*i+(2*e.z-5*n.z+4*o.z-r.z)*s+(-e.z+3*n.z-3*o.z+r.z)*a))},t.Clamp=function(e,n,o){var r=new t;return t.ClampToRef(e,n,o,r),r},t.ClampToRef=function(t,e,n,o){var r=t.x;r=(r=r>n.x?n.x:r)<e.x?e.x:r;var i=t.y;i=(i=i>n.y?n.y:i)<e.y?e.y:i;var s=t.z;s=(s=s>n.z?n.z:s)<e.z?e.z:s,o.copyFromFloats(r,i,s)},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c,e.z*p+o.z*u+n.z*l+r.z*c)},t.Lerp=function(e,n,o){var r=new t(0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.x=t.x+(e.x-t.x)*n,o.y=t.y+(e.y-t.y)*n,o.z=t.z+(e.z-t.z)*n},t.Dot=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z},t.Cross=function(e,n){var o=t.Zero();return t.CrossToRef(e,n,o),o},t.CrossToRef=function(t,e,n){var o=t.y*e.z-t.z*e.y,r=t.z*e.x-t.x*e.z,i=t.x*e.y-t.y*e.x;n.copyFromFloats(o,r,i)},t.Normalize=function(e){var n=t.Zero();return t.NormalizeToRef(e,n),n},t.NormalizeToRef=function(t,e){t.normalizeToRef(e)},t.Minimize=function(e,n){var o=new t(e.x,e.y,e.z);return o.minimizeInPlace(n),o},t.Maximize=function(e,n){var o=new t(e.x,e.y,e.z);return o.maximizeInPlace(n),o},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y,r=t.z-e.z;return n*n+o*o+r*r},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.RotationFromAxis=function(e,n,o){var r=t.Zero();return t.RotationFromAxisToRef(e,n,o,r),r},t.RotationFromAxisToRef=function(t,e,n,r){var s=o.MathTmp.Quaternion[0];i.Quaternion.RotationQuaternionFromAxisToRef(t,e,n,s),r.copyFrom(s.eulerAngles)},t.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},t.prototype.getClassName=function(){return\"Vector3\"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*t^(this.y||0))^(this.z||0)},t.prototype.asArray=function(){var t=[];return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,this},t.prototype.toQuaternion=function(){return i.Quaternion.Identity.setEuler(this.y,this.x,this.z)},t.prototype.addInPlace=function(t){return this.addInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.addInPlaceFromFloats=function(t,e,n){return this.x+=t,this.y+=e,this.z+=n,this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z)},t.prototype.addToRef=function(t,e){return e.copyFromFloats(this.x+t.x,this.y+t.y,this.z+t.z)},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z)},t.prototype.subtractToRef=function(t,e){return this.subtractFromFloatsToRef(t.x,t.y,t.z,e)},t.prototype.subtractFromFloats=function(e,n,o){return new t(this.x-e,this.y-n,this.z-o)},t.prototype.subtractFromFloatsToRef=function(t,e,n,o){return o.copyFromFloats(this.x-t,this.y-e,this.z-n)},t.prototype.applyMatrix4=function(t){this.applyMatrix4ToRef(t,this)},t.prototype.applyMatrix4ToRef=function(t,e){var n=this.x,o=this.y,r=this.z,i=t.m,s=1/(i[3]*n+i[7]*o+i[11]*r+i[15]);return e.x=(i[0]*n+i[4]*o+i[8]*r+i[12])*s,e.y=(i[1]*n+i[5]*o+i[9]*r+i[13])*s,e.z=(i[2]*n+i[6]*o+i[10]*r+i[14])*s,e},t.prototype.rotate=function(t){return this.rotateToRef(t,this)},t.prototype.rotateToRef=function(t,e){var n=this.x,o=this.y,r=this.z,i=t.x,s=t.y,a=t.z,p=t.w,u=p*n+s*r-a*o,l=p*o+a*n-i*r,c=p*r+i*o-s*n,h=-i*n-s*o-a*r;return e.x=u*p+h*-i+l*-a-c*-s,e.y=l*p+h*-s+c*-i-u*-a,e.z=c*p+h*-a+u*-s-l*-i,e},t.prototype.negate=function(){return new t(-this.x,-this.y,-this.z)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e)},t.prototype.scaleToRef=function(t,e){return e.copyFromFloats(this.x*t,this.y*t,this.z*t)},t.prototype.scaleAndAddToRef=function(t,e){return e.addInPlaceFromFloats(this.x*t,this.y*t,this.z*t)},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=r.Epsilon),t&&s.Scalar.WithinEpsilon(this.x,t.x,e)&&s.Scalar.WithinEpsilon(this.y,t.y,e)&&s.Scalar.WithinEpsilon(this.z,t.z,e)},t.prototype.equalsToFloats=function(t,e,n){return this.x===t&&this.y===e&&this.z===n},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this},t.prototype.multiply=function(t){return this.multiplyByFloats(t.x,t.y,t.z)},t.prototype.multiplyToRef=function(t,e){return e.copyFromFloats(this.x*t.x,this.y*t.y,this.z*t.z)},t.prototype.multiplyByFloats=function(e,n,o){return new t(this.x*e,this.y*n,this.z*o)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y,this.z/e.z)},t.prototype.divideToRef=function(t,e){return e.copyFromFloats(this.x/t.x,this.y/t.y,this.z/t.z)},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return this.minimizeInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.maximizeInPlace=function(t){return this.maximizeInPlaceFromFloats(t.x,t.y,t.z)},t.prototype.minimizeInPlaceFromFloats=function(t,e,n){return t<this.x&&(this.x=t),e<this.y&&(this.y=e),n<this.z&&(this.z=n),this},t.prototype.maximizeInPlaceFromFloats=function(t,e,n){return t>this.x&&(this.x=t),e>this.y&&(this.y=e),n>this.z&&(this.z=n),this},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z},t.prototype.normalize=function(){return this.normalizeFromLength(this.length())},t.prototype.normalizeFromLength=function(t){return 0===t||1===t?this:this.scaleInPlace(1/t)},t.prototype.normalizeToNew=function(){var e=new t(0,0,0);return this.normalizeToRef(e),e},t.prototype.normalizeToRef=function(t){var e=this.length();return 0===e||1===e?t.copyFromFloats(this.x,this.y,this.z):this.scaleToRef(1/e,t)},t.prototype.clone=function(){return new t(this.x,this.y,this.z)},t.prototype.copyFrom=function(t){return this.copyFromFloats(t.x,t.y,t.z)},t.prototype.copyFromFloats=function(t,e,n){return this.x=t,this.y=e,this.z=n,this},t.prototype.set=function(t,e,n){return this.copyFromFloats(t,e,n)},t.prototype.setAll=function(t){return this.x=this.y=this.z=t,this},t}();e.Vector3=a},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.VideoTexture=e.VideoClip=e.SmartItem=e.OnAnimationEnd=e.OnPointerLock=e.OnPointerUUIDEvent=e.OnUUIDEvent=e.BasicMaterial=e.Material=e.TransparencyMode=e.TextShape=e.Fonts=e.Font=e.OBJShape=e.Animator=e.Texture=e.NFTShape=e.PictureFrameStyle=e.GLTFShape=e.CylinderShape=e.ConeShape=e.PlaneShape=e.CircleShape=e.SphereShape=e.BoxShape=e.Shape=e.Billboard=e.Transform=e.AvatarModifierArea=e.AvatarModifiers=e.CLASS_ID=void 0;var a,p=n(0),u=n(5),l=n(26),c=n(1),h=n(16);!function(t){t[t.TRANSFORM=1]=\"TRANSFORM\",t[t.UUID_CALLBACK=8]=\"UUID_CALLBACK\",t[t.BOX_SHAPE=16]=\"BOX_SHAPE\",t[t.SPHERE_SHAPE=17]=\"SPHERE_SHAPE\",t[t.PLANE_SHAPE=18]=\"PLANE_SHAPE\",t[t.CONE_SHAPE=19]=\"CONE_SHAPE\",t[t.CYLINDER_SHAPE=20]=\"CYLINDER_SHAPE\",t[t.TEXT_SHAPE=21]=\"TEXT_SHAPE\",t[t.NFT_SHAPE=22]=\"NFT_SHAPE\",t[t.UI_WORLD_SPACE_SHAPE=23]=\"UI_WORLD_SPACE_SHAPE\",t[t.UI_SCREEN_SPACE_SHAPE=24]=\"UI_SCREEN_SPACE_SHAPE\",t[t.UI_CONTAINER_RECT=25]=\"UI_CONTAINER_RECT\",t[t.UI_CONTAINER_STACK=26]=\"UI_CONTAINER_STACK\",t[t.UI_TEXT_SHAPE=27]=\"UI_TEXT_SHAPE\",t[t.UI_INPUT_TEXT_SHAPE=28]=\"UI_INPUT_TEXT_SHAPE\",t[t.UI_IMAGE_SHAPE=29]=\"UI_IMAGE_SHAPE\",t[t.UI_SLIDER_SHAPE=30]=\"UI_SLIDER_SHAPE\",t[t.CIRCLE_SHAPE=31]=\"CIRCLE_SHAPE\",t[t.BILLBOARD=32]=\"BILLBOARD\",t[t.ANIMATION=33]=\"ANIMATION\",t[t.FONT=34]=\"FONT\",t[t.UI_FULLSCREEN_SHAPE=40]=\"UI_FULLSCREEN_SHAPE\",t[t.UI_BUTTON_SHAPE=41]=\"UI_BUTTON_SHAPE\",t[t.GLTF_SHAPE=54]=\"GLTF_SHAPE\",t[t.OBJ_SHAPE=55]=\"OBJ_SHAPE\",t[t.AVATAR_SHAPE=56]=\"AVATAR_SHAPE\",t[t.BASIC_MATERIAL=64]=\"BASIC_MATERIAL\",t[t.PBR_MATERIAL=65]=\"PBR_MATERIAL\",t[t.HIGHLIGHT_ENTITY=66]=\"HIGHLIGHT_ENTITY\",t[t.SOUND=67]=\"SOUND\",t[t.TEXTURE=68]=\"TEXTURE\",t[t.VIDEO_CLIP=70]=\"VIDEO_CLIP\",t[t.VIDEO_TEXTURE=71]=\"VIDEO_TEXTURE\",t[t.AUDIO_CLIP=200]=\"AUDIO_CLIP\",t[t.AUDIO_SOURCE=201]=\"AUDIO_SOURCE\",t[t.AUDIO_STREAM=202]=\"AUDIO_STREAM\",t[t.GIZMOS=203]=\"GIZMOS\",t[t.SMART_ITEM=204]=\"SMART_ITEM\",t[t.AVATAR_MODIFIER_AREA=205]=\"AVATAR_MODIFIER_AREA\",t[t.NAME=300]=\"NAME\"}(a=e.CLASS_ID||(e.CLASS_ID={})),function(t){t.HIDE_AVATARS=\"HIDE_AVATARS\",t.DISABLE_PASSPORTS=\"DISABLE_PASSPORTS\"}(e.AvatarModifiers||(e.AvatarModifiers={}));var d=function(t){function e(e){var n=t.call(this)||this;return n.area=e.area,n.modifiers=e.modifiers,n}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"area\",void 0),s([p.ObservableComponent.field],e.prototype,\"modifiers\",void 0),e=s([p.Component(\"engine.avatarModifierArea\",a.AVATAR_MODIFIER_AREA)],e)}(p.ObservableComponent);e.AvatarModifierArea=d;var f=function(t){function e(e){void 0===e&&(e={});var n=t.call(this)||this;return n.position=e.position||u.Vector3.Zero(),n.rotation=e.rotation||u.Quaternion.Identity,n.scale=e.scale||new u.Vector3(1,1,1),n}return r(e,t),Object.defineProperty(e.prototype,\"eulerAngles\",{get:function(){return this.rotation.eulerAngles},enumerable:!1,configurable:!0}),e.prototype.lookAt=function(t,e){void 0===e&&(e=u.MathTmp.staticUp);var n=new u.Matrix;return u.Matrix.LookAtLHToRef(this.position,t,e,n),n.invert(),u.Quaternion.FromRotationMatrixToRef(n,this.rotation),this},e.prototype.rotate=function(t,e){return this.rotation.multiplyInPlace(this.rotation.angleAxis(e,t)),this},e.prototype.translate=function(t){return this.position.addInPlace(t),this},s([p.ObservableComponent.field],e.prototype,\"position\",void 0),s([p.ObservableComponent.field],e.prototype,\"rotation\",void 0),s([p.ObservableComponent.field],e.prototype,\"scale\",void 0),e=s([p.Component(\"engine.transform\",a.TRANSFORM)],e)}(p.ObservableComponent);e.Transform=f;var y=function(t){function e(e,n,o){void 0===e&&(e=!0),void 0===n&&(n=!0),void 0===o&&(o=!0);var r=t.call(this)||this;return r.x=!0,r.y=!0,r.z=!0,r.x=e,r.y=n,r.z=o,r}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"x\",void 0),s([p.ObservableComponent.field],e.prototype,\"y\",void 0),s([p.ObservableComponent.field],e.prototype,\"z\",void 0),e=s([p.Component(\"engine.billboard\",a.BILLBOARD)],e)}(p.ObservableComponent);e.Billboard=y;var v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.withCollisions=!0,e.isPointerBlocker=!0,e.visible=!0,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"withCollisions\",void 0),s([p.ObservableComponent.field],e.prototype,\"isPointerBlocker\",void 0),s([p.ObservableComponent.field],e.prototype,\"visible\",void 0),e}(p.ObservableComponent);e.Shape=v;var m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.DisposableComponent(\"engine.shape\",a.BOX_SHAPE)],e)}(v);e.BoxShape=m;var b=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.DisposableComponent(\"engine.shape\",a.SPHERE_SHAPE)],e)}(v);e.SphereShape=b;var g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"segments\",void 0),s([p.ObservableComponent.field],e.prototype,\"arc\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.CIRCLE_SHAPE)],e)}(v);e.CircleShape=g;var _=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.width=1,e.height=1,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"width\",void 0),s([p.ObservableComponent.field],e.prototype,\"height\",void 0),s([p.ObservableComponent.field],e.prototype,\"uvs\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.PLANE_SHAPE)],e)}(v);e.PlaneShape=_;var C=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.radiusTop=0,e.radiusBottom=1,e.segmentsHeight=1,e.segmentsRadial=36,e.openEnded=!1,e.radius=null,e.arc=360,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"radiusTop\",void 0),s([p.ObservableComponent.field],e.prototype,\"radiusBottom\",void 0),s([p.ObservableComponent.field],e.prototype,\"segmentsHeight\",void 0),s([p.ObservableComponent.field],e.prototype,\"segmentsRadial\",void 0),s([p.ObservableComponent.field],e.prototype,\"openEnded\",void 0),s([p.ObservableComponent.field],e.prototype,\"radius\",void 0),s([p.ObservableComponent.field],e.prototype,\"arc\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.CONE_SHAPE)],e)}(v);e.ConeShape=C;var O=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.radiusTop=1,e.radiusBottom=1,e.segmentsHeight=1,e.segmentsRadial=36,e.openEnded=!1,e.radius=null,e.arc=360,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"radiusTop\",void 0),s([p.ObservableComponent.field],e.prototype,\"radiusBottom\",void 0),s([p.ObservableComponent.field],e.prototype,\"segmentsHeight\",void 0),s([p.ObservableComponent.field],e.prototype,\"segmentsRadial\",void 0),s([p.ObservableComponent.field],e.prototype,\"openEnded\",void 0),s([p.ObservableComponent.field],e.prototype,\"radius\",void 0),s([p.ObservableComponent.field],e.prototype,\"arc\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.CYLINDER_SHAPE)],e)}(v);e.CylinderShape=O;var x,w=function(t){function e(e){var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([v.readonly],e.prototype,\"src\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.GLTF_SHAPE)],e)}(v);e.GLTFShape=w,function(t){t[t.Classic=0]=\"Classic\",t[t.Baroque_Ornament=1]=\"Baroque_Ornament\",t[t.Diamond_Ornament=2]=\"Diamond_Ornament\",t[t.Minimal_Wide=3]=\"Minimal_Wide\",t[t.Minimal_Grey=4]=\"Minimal_Grey\",t[t.Blocky=5]=\"Blocky\",t[t.Gold_Edges=6]=\"Gold_Edges\",t[t.Gold_Carved=7]=\"Gold_Carved\",t[t.Gold_Wide=8]=\"Gold_Wide\",t[t.Gold_Rounded=9]=\"Gold_Rounded\",t[t.Metal_Medium=10]=\"Metal_Medium\",t[t.Metal_Wide=11]=\"Metal_Wide\",t[t.Metal_Slim=12]=\"Metal_Slim\",t[t.Metal_Rounded=13]=\"Metal_Rounded\",t[t.Pins=14]=\"Pins\",t[t.Minimal_Black=15]=\"Minimal_Black\",t[t.Minimal_White=16]=\"Minimal_White\",t[t.Tape=17]=\"Tape\",t[t.Wood_Slim=18]=\"Wood_Slim\",t[t.Wood_Wide=19]=\"Wood_Wide\",t[t.Wood_Twigs=20]=\"Wood_Twigs\",t[t.Canvas=21]=\"Canvas\"}(x=e.PictureFrameStyle||(e.PictureFrameStyle={}));var T=function(t){function e(e,n){void 0===n&&(n={});var o=t.call(this)||this;o.src=e;var r=new u.Color3(.6404918,.611472,.8584906),i=x.Classic;return n instanceof u.Color3?r=n:null!=n&&(n.color&&(r=n.color),n.style&&(i=n.style)),o.color=r,o.style=i,o}return r(e,t),s([v.readonly],e.prototype,\"src\",void 0),s([v.readonly],e.prototype,\"style\",void 0),s([p.ObservableComponent.field],e.prototype,\"color\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.NFT_SHAPE)],e)}(v);e.NFTShape=T;var R=function(t){function e(e,n){var o=t.call(this)||this;if(o.src=e,n)for(var r in n){o[r]=n[r]}return o}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"src\",void 0),s([p.ObservableComponent.readonly],e.prototype,\"samplingMode\",void 0),s([p.ObservableComponent.readonly],e.prototype,\"wrap\",void 0),s([p.ObservableComponent.readonly],e.prototype,\"hasAlpha\",void 0),e=s([p.DisposableComponent(\"engine.texture\",a.TEXTURE)],e)}(p.ObservableComponent);e.Texture=R;var A=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.states=[],e}return r(e,t),e.prototype.addClip=function(t){var e=this;return this.states.push(t),t.onChange((function(){e.dirty=!0})),this},e.prototype.getClip=function(t){for(var e=0;e<this.states.length;e++){var n=this.states[e];if(n.clip===t)return n}var o=new l.AnimationState(t);return this.addClip(o),o},s([p.ObservableComponent.readonly],e.prototype,\"states\",void 0),e=s([p.Component(\"engine.animator\",a.ANIMATION)],e)}(v);e.Animator=A;var E=function(t){function e(e){var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"src\",void 0),e=s([p.DisposableComponent(\"engine.shape\",a.OBJ_SHAPE)],e)}(v);e.OBJShape=E;var S=function(t){function e(e){void 0===e&&(e=\"\");var n=t.call(this)||this;return n.src=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"src\",void 0),e=s([p.DisposableComponent(\"engine.font\",a.FONT)],e)}(p.ObservableComponent);e.Font=S,function(t){t.SanFrancisco=\"builtin:SF-UI-Text-Regular SDF\",t.SanFrancisco_Heavy=\"builtin:SF-UI-Text-Heavy SDF\",t.SanFrancisco_Semibold=\"builtin:SF-UI-Text-Semibold SDF\",t.LiberationSans=\"builtin:LiberationSans SDF\"}(e.Fonts||(e.Fonts={}));var P,I=function(t){function e(e){var n=t.call(this)||this;return n.outlineWidth=0,n.outlineColor=new u.Color3(1,1,1),n.color=new u.Color3(1,1,1),n.fontSize=10,n.fontWeight=\"normal\",n.opacity=1,n.value=\"\",n.lineSpacing=\"0px\",n.lineCount=0,n.resizeToFit=!1,n.textWrapping=!1,n.shadowBlur=0,n.shadowOffsetX=0,n.shadowOffsetY=0,n.shadowColor=new u.Color3(1,1,1),n.zIndex=0,n.hTextAlign=\"center\",n.vTextAlign=\"center\",n.width=1,n.height=1,n.paddingTop=0,n.paddingRight=0,n.paddingBottom=0,n.paddingLeft=0,n.isPickable=!1,n.billboard=!1,n.visible=!0,e&&(n.value=e),n}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"outlineWidth\",void 0),s([p.ObservableComponent.field],e.prototype,\"outlineColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"color\",void 0),s([p.ObservableComponent.field],e.prototype,\"fontSize\",void 0),s([p.ObservableComponent.field],e.prototype,\"fontWeight\",void 0),s([p.ObservableComponent.component],e.prototype,\"font\",void 0),s([p.ObservableComponent.field],e.prototype,\"opacity\",void 0),s([p.ObservableComponent.field],e.prototype,\"value\",void 0),s([p.ObservableComponent.field],e.prototype,\"lineSpacing\",void 0),s([p.ObservableComponent.field],e.prototype,\"lineCount\",void 0),s([p.ObservableComponent.field],e.prototype,\"resizeToFit\",void 0),s([p.ObservableComponent.field],e.prototype,\"textWrapping\",void 0),s([p.ObservableComponent.field],e.prototype,\"shadowBlur\",void 0),s([p.ObservableComponent.field],e.prototype,\"shadowOffsetX\",void 0),s([p.ObservableComponent.field],e.prototype,\"shadowOffsetY\",void 0),s([p.ObservableComponent.field],e.prototype,\"shadowColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"zIndex\",void 0),s([p.ObservableComponent.field],e.prototype,\"hTextAlign\",void 0),s([p.ObservableComponent.field],e.prototype,\"vTextAlign\",void 0),s([p.ObservableComponent.field],e.prototype,\"width\",void 0),s([p.ObservableComponent.field],e.prototype,\"height\",void 0),s([p.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),s([p.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),s([p.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),s([p.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),s([p.ObservableComponent.field],e.prototype,\"isPickable\",void 0),s([p.ObservableComponent.field],e.prototype,\"billboard\",void 0),s([p.ObservableComponent.field],e.prototype,\"visible\",void 0),e=s([p.Component(\"engine.text\",a.TEXT_SHAPE)],e)}(p.ObservableComponent);e.TextShape=I,function(t){t[t.OPAQUE=0]=\"OPAQUE\",t[t.ALPHA_TEST=1]=\"ALPHA_TEST\",t[t.ALPHA_BLEND=2]=\"ALPHA_BLEND\",t[t.ALPHA_TEST_AND_BLEND=3]=\"ALPHA_TEST_AND_BLEND\",t[t.AUTO=4]=\"AUTO\"}(P=e.TransparencyMode||(e.TransparencyMode={}));var z=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.alphaTest=.5,e.castShadows=!0,e.transparencyMode=P.AUTO,e}return r(e,t),s([p.ObservableComponent.field],e.prototype,\"alphaTest\",void 0),s([p.ObservableComponent.field],e.prototype,\"albedoColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"emissiveColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"metallic\",void 0),s([p.ObservableComponent.field],e.prototype,\"roughness\",void 0),s([p.ObservableComponent.field],e.prototype,\"ambientColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"reflectionColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"reflectivityColor\",void 0),s([p.ObservableComponent.field],e.prototype,\"directIntensity\",void 0),s([p.ObservableComponent.field],e.prototype,\"microSurface\",void 0),s([p.ObservableComponent.field],e.prototype,\"emissiveIntensity\",void 0),s([p.ObservableComponent.field],e.prototype,\"environmentIntensity\",void 0),s([p.ObservableComponent.field],e.prototype,\"specularIntensity\",void 0),s([p.ObservableComponent.component],e.prototype,\"albedoTexture\",void 0),s([p.ObservableComponent.component],e.prototype,\"alphaTexture\",void 0),s([p.ObservableComponent.component],e.prototype,\"emissiveTexture\",void 0),s([p.ObservableComponent.component],e.prototype,\"bumpTexture\",void 0),s([p.ObservableComponent.component],e.prototype,\"refractionTexture\",void 0),s([p.ObservableComponent.field],e.prototype,\"castShadows\",void 0),s([p.ObservableComponent.field],e.prototype,\"transparencyMode\",void 0),e=s([p.DisposableComponent(\"engine.material\",a.PBR_MATERIAL)],e)}(p.ObservableComponent);e.Material=z;var M=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.alphaTest=.5,e.castShadows=!0,e}return r(e,t),s([p.ObservableComponent.component],e.prototype,\"texture\",void 0),s([p.ObservableComponent.field],e.prototype,\"alphaTest\",void 0),s([p.ObservableComponent.field],e.prototype,\"castShadows\",void 0),e=s([p.DisposableComponent(\"engine.material\",a.BASIC_MATERIAL)],e)}(p.ObservableComponent);e.BasicMaterial=M;var D=function(t){function e(e){var n=t.call(this)||this;if(n.uuid=c.newId(\"UUID\"),!e||!(\"apply\"in e)||!(\"call\"in e))throw new Error(\"Callback is not a function\");return n.callback=e,n}return r(e,t),e.uuidEvent=function(t,n){if(delete t[n]){var o=n+\"_\"+Math.random();t[o]=void 0,Object.defineProperty(t,o,i(i({},Object.getOwnPropertyDescriptor(t,o)),{enumerable:!1})),Object.defineProperty(t,n.toString(),{get:function(){return this[o]},set:function(t){var r=this[o];if(t){if(!(t instanceof e))throw new Error(\"value is not an OnUUIDEvent\");this.data[n]=t.uuid}else this.data[n]=null;if(this[o]=t,t!==r){this.dirty=!0;for(var i=0;i<this.subscriptions.length;i++)this.subscriptions[i](n,t,r)}},enumerable:!0})}},e.prototype.toJSON=function(){return{uuid:this.uuid,type:this.type}},s([p.ObservableComponent.field],e.prototype,\"callback\",void 0),e}(p.ObservableComponent);e.OnUUIDEvent=D;var F=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.button=h.ActionButton.ANY,e.hoverText=\"Interact\",e.distance=10,e.showFeedback=!0,e}return r(e,t),e.prototype.toJSON=function(){return{uuid:this.uuid,type:this.type,button:this.button,hoverText:this.hoverText,distance:this.distance,showFeedback:this.showFeedback}},s([p.ObservableComponent.field],e.prototype,\"button\",void 0),s([p.ObservableComponent.field],e.prototype,\"hoverText\",void 0),s([p.ObservableComponent.field],e.prototype,\"distance\",void 0),s([p.ObservableComponent.field],e.prototype,\"showFeedback\",void 0),e}(D);e.OnPointerUUIDEvent=F;var U=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type=\"onPointerLock\",e}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=s([p.Component(\"engine.onPointerLock\",a.UUID_CALLBACK)],e)}(D);e.OnPointerLock=U;var L=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type=\"onAnimationEnd\",e}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=s([p.Component(\"engine.onAnimationEnd\",a.UUID_CALLBACK)],e)}(D);e.OnAnimationEnd=L;var N=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([p.Component(\"engine.smartItem\",a.SMART_ITEM)],e)}(p.ObservableComponent);e.SmartItem=N;var V=function(t){function e(e){var n=t.call(this)||this;return n.url=e,n}return r(e,t),s([p.ObservableComponent.readonly],e.prototype,\"url\",void 0),e=s([p.DisposableComponent(\"engine.VideoClip\",a.VIDEO_CLIP)],e)}(p.ObservableComponent);e.VideoClip=V;var j=function(t){function e(e,n){var o=t.call(this)||this;if(o.volume=1,o.playbackRate=1,o.loop=!1,o.seek=-1,o.playing=!1,!(e instanceof V))throw new Error(\"Trying to create VideoTexture(VideoClip) with an invalid VideoClip\");if(o.videoClipId=p.getComponentId(e),n)for(var r in n){o[r]=n[r]}return o}return r(e,t),e.prototype.play=function(){this.playing=!0},e.prototype.pause=function(){this.playing=!1},e.prototype.reset=function(){this.seekTime(0)},e.prototype.seekTime=function(t){this.seek=t,this.dirty=!0,this.data.nonce=Math.random()},e.prototype.toJSON=function(){if(this.seek<0)return t.prototype.toJSON.call(this);var e=JSON.parse(JSON.stringify(t.prototype.toJSON.call(this)));return this.seek=-1,e},s([p.ObservableComponent.readonly],e.prototype,\"videoClipId\",void 0),s([p.ObservableComponent.readonly],e.prototype,\"samplingMode\",void 0),s([p.ObservableComponent.readonly],e.prototype,\"wrap\",void 0),s([p.ObservableComponent.field],e.prototype,\"volume\",void 0),s([p.ObservableComponent.field],e.prototype,\"playbackRate\",void 0),s([p.ObservableComponent.field],e.prototype,\"loop\",void 0),s([p.ObservableComponent.field],e.prototype,\"seek\",void 0),s([p.ObservableComponent.field],e.prototype,\"playing\",void 0),e=s([p.DisposableComponent(\"engine.VideoTexture\",a.VIDEO_TEXTURE)],e)}(p.ObservableComponent);e.VideoTexture=j},function(t,e,n){\"use strict\";var o=this&&this.__createBinding||(Object.create?function(t,e,n,o){void 0===o&&(o=n),Object.defineProperty(t,o,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,o){void 0===o&&(o=n),t[o]=e[n]}),r=this&&this.__exportStar||function(t,e){for(var n in t)\"default\"===n||Object.prototype.hasOwnProperty.call(e,n)||o(e,t,n)};Object.defineProperty(e,\"__esModule\",{value:!0}),r(n(2),e),r(n(9),e),r(n(22),e),r(n(23),e),r(n(35),e),r(n(36),e),r(n(37),e),r(n(24),e),r(n(38),e),r(n(39),e),r(n(11),e),r(n(40),e),r(n(41),e),r(n(25),e),r(n(10),e),r(n(6),e),r(n(42),e),r(n(15),e),r(n(3),e),r(n(21),e),r(n(5),e)},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Scalar=void 0;var o=function(){function t(){}return t.WithinEpsilon=function(t,e,n){void 0===n&&(n=1401298e-51);var o=t-e;return-n<=o&&o<=n},t.ToHex=function(t){var e=t.toString(16);return t<=15?(\"0\"+e).toUpperCase():e.toUpperCase()},t.Sign=function(t){var e=+t;return 0===e||isNaN(e)?e:e>0?1:-1},t.Clamp=function(t,e,n){return void 0===e&&(e=0),void 0===n&&(n=1),Math.min(n,Math.max(e,t))},t.Log2=function(t){return Math.log(t)*Math.LOG2E},t.Repeat=function(t,e){return t-Math.floor(t/e)*e},t.Normalize=function(t,e,n){return(t-e)/(n-e)},t.Denormalize=function(t,e,n){return t*(n-e)+e},t.DeltaAngle=function(e,n){var o=t.Repeat(n-e,360);return o>180&&(o-=360),o},t.PingPong=function(e,n){var o=t.Repeat(e,2*n);return n-Math.abs(o-n)},t.SmoothStep=function(e,n,o){var r=t.Clamp(o);return n*(r=-2*r*r*r+3*r*r)+e*(1-r)},t.MoveTowards=function(e,n,o){return Math.abs(n-e)<=o?n:e+t.Sign(n-e)*o},t.MoveTowardsAngle=function(e,n,o){var r=t.DeltaAngle(e,n);return-o<r&&r<o?n:t.MoveTowards(e,e+r,o)},t.Lerp=function(t,e,n){return t+(e-t)*n},t.LerpAngle=function(e,n,o){var r=t.Repeat(n-e,360);return r>180&&(r-=360),e+r*t.Clamp(o)},t.InverseLerp=function(e,n,o){return e!==n?t.Clamp((o-e)/(n-e)):0},t.Hermite=function(t,e,n,o,r){var i=r*r,s=r*i;return t*(2*s-3*i+1)+n*(-2*s+3*i)+e*(s-2*i+r)+o*(s-i)},t.RandomRange=function(t,e){return t===e?t:Math.random()*(e-t)+t},t.RangeToPercent=function(t,e,n){return(t-e)/(n-e)},t.PercentToRange=function(t,e,n){return(n-e)*t+e},t.NormalizeRadians=function(e){return e-t.TwoPi*Math.floor((e+Math.PI)/t.TwoPi)},t.TwoPi=2*Math.PI,t}();e.Scalar=o},function(t,e,n){\"use strict\";var o=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.ParentChanged=e.ComponentAdded=e.ComponentRemoved=void 0;var r=n(8),i=function(){function t(t,e,n){this.entity=t,this.componentName=e,this.component=n}return t=o([r.EventConstructor()],t)}();e.ComponentRemoved=i;var s=function(){function t(t,e,n){this.entity=t,this.componentName=e,this.classId=n}return t=o([r.EventConstructor()],t)}();e.ComponentAdded=s;var a=function(){function t(t,e){this.entity=t,this.parent=e}return t=o([r.EventConstructor()],t)}();e.ParentChanged=a},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.EventConstructor=e.EventManager=void 0;var o=n(1),r=[];function i(t){if(!(\"__event_name__\"in t)||\"string\"!=typeof t.__event_name__)throw new Error(\"The EventConstructor is not registered\");return t.__event_name__}var s=function(){function t(){this.listeners={}}return t.prototype.addListener=function(t,e,n){if(!t||\"function\"!=typeof t)throw new Error(\"Invalid EventConstructor\");var o=i(t),r=this.listeners[o];r||(r=this.listeners[o]=[]);for(var s=0;s<r.length;s++){if(r[s].listener===e)throw new Error(\"The provided listener is already registered\")}return r.push({listener:e,fn:n}),this},t.prototype.removeListener=function(t,e){if(!e||\"function\"!=typeof e)throw new Error(\"Invalid EventConstructor\");var n=i(e),o=this.listeners[n];if(!o)return!1;for(var r=0;r<o.length;r++){if(o[r].listener===t)return o.splice(r,1),!0}return!1},t.prototype.fireEvent=function(t){var e=i(t.constructor),n=this.listeners[e];if(n)for(var r=0;r<n.length;r++)try{var s=n[r];s.fn.call(s.listener,t)}catch(t){o.error(t)}return this},t}();e.EventManager=s,e.EventConstructor=function(){var t=o.newId(\"EV\");if(-1!==r.indexOf(t))throw new Error(\"The event name \"+t+\" is already taken\");return r.push(t),function(e){return e.__event_name__=t,e}}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.MathTmp=void 0;var o=n(1),r=n(3),i=n(10),s=n(11);e.MathTmp={Vector3:o.buildArray(6,r.Vector3.Zero),Matrix:o.buildArray(2,s.Matrix.Identity),Quaternion:o.buildArray(3,i.Quaternion.Zero),staticUp:r.Vector3.Up(),tmpMatrix:s.Matrix.Zero()}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Quaternion=void 0;var o=n(11),r=n(3),i=n(9),s=n(2),a=function(){function t(t,e,n,o){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===o&&(o=1),this.x=t,this.y=e,this.z=n,this.w=o}return t.FromRotationMatrix=function(e){var n=new t;return t.FromRotationMatrixToRef(e,n),n},t.FromRotationMatrixToRef=function(t,e){var n,o=t.m,r=o[0],i=o[4],s=o[8],a=o[1],p=o[5],u=o[9],l=o[2],c=o[6],h=o[10],d=r+p+h;d>0?(n=.5/Math.sqrt(d+1),e.w=.25/n,e.x=(c-u)*n,e.y=(s-l)*n,e.z=(a-i)*n):r>p&&r>h?(n=2*Math.sqrt(1+r-p-h),e.w=(c-u)/n,e.x=.25*n,e.y=(i+a)/n,e.z=(s+l)/n):p>h?(n=2*Math.sqrt(1+p-r-h),e.w=(s-l)/n,e.x=(i+a)/n,e.y=.25*n,e.z=(u+c)/n):(n=2*Math.sqrt(1+h-r-p),e.w=(a-i)/n,e.x=(s+l)/n,e.y=(u+c)/n,e.z=.25*n)},t.Dot=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w},t.AreClose=function(e,n){return t.Dot(e,n)>=0},t.Zero=function(){return new t(0,0,0,0)},t.Inverse=function(e){return new t(-e.x,-e.y,-e.z,e.w)},t.IsIdentity=function(t){return t&&0===t.x&&0===t.y&&0===t.z&&1===t.w},t.RotationAxis=function(e,n){var o=n*s.DEG2RAD;return t.RotationAxisToRef(e,o,new t)},t.RotationAxisToRef=function(t,e,n){var o=e*s.DEG2RAD,r=Math.sin(o/2);return t.normalize(),n.w=Math.cos(o/2),n.x=t.x*r,n.y=t.y*r,n.z=t.z*r,n},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromEulerAnglesRef=function(e,n,o,r){return t.RotationYawPitchRollToRef(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD,r)},t.RotationYawPitchRoll=function(e,n,o){var r=new t;return t.RotationYawPitchRollToRef(e,n,o,r),r},t.RotationYawPitchRollToRef=function(t,e,n,o){var r=.5*n,i=.5*e,s=.5*t,a=Math.cos(i),p=Math.cos(s),u=Math.cos(r),l=Math.sin(i),c=Math.sin(s),h=Math.sin(r);o.x=l*p*u+a*c*h,o.y=a*c*u-l*p*h,o.z=a*p*h+l*c*u,o.w=a*p*u-l*c*h},t.RotationAlphaBetaGamma=function(e,n,o){var r=new t;return t.RotationAlphaBetaGammaToRef(e,n,o,r),r},t.RotationAlphaBetaGammaToRef=function(t,e,n,o){var r=.5*(n+t),i=.5*(n-t),s=.5*e;o.x=Math.cos(i)*Math.sin(s),o.y=Math.sin(i)*Math.sin(s),o.z=Math.sin(r)*Math.cos(s),o.w=Math.cos(r)*Math.cos(s)},t.RotationQuaternionFromAxis=function(e,n,o){var r=new t(0,0,0,0);return t.RotationQuaternionFromAxisToRef(e,n,o,r),r},t.RotationQuaternionFromAxisToRef=function(e,n,r,s){var a=i.MathTmp.Matrix[0];o.Matrix.FromXYZAxesToRef(e.normalize(),n.normalize(),r.normalize(),a),t.FromRotationMatrixToRef(a,s)},t.Slerp=function(e,n,o){var r=t.Identity;return t.SlerpToRef(e,n,o,r),r},t.SlerpToRef=function(t,e,n,o){var r,i,s=t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w,a=!1;if(s<0&&(a=!0,s=-s),s>.999999)i=1-n,r=a?-n:n;else{var p=Math.acos(s),u=1/Math.sin(p);i=Math.sin((1-n)*p)*u,r=a?-Math.sin(n*p)*u:Math.sin(n*p)*u}o.x=i*t.x+r*e.x,o.y=i*t.y+r*e.y,o.z=i*t.z+r*e.z,o.w=i*t.w+r*e.w},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c,e.z*p+o.z*u+n.z*l+r.z*c,e.w*p+o.w*u+n.w*l+r.w*c)},Object.defineProperty(t,\"Identity\",{get:function(){return new t(0,0,0,1)},enumerable:!1,configurable:!0}),t.Angle=function(e,n){var o=t.Dot(e,n);return 2*Math.acos(Math.min(Math.abs(o),1))*s.RAD2DEG},t.Euler=function(e,n,o){return t.RotationYawPitchRoll(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD)},t.LookRotation=function(e,n){void 0===n&&(n=i.MathTmp.staticUp);var o=r.Vector3.Normalize(e),s=r.Vector3.Normalize(r.Vector3.Cross(n,o)),a=r.Vector3.Cross(o,s),p=s.x,u=s.y,l=s.z,c=a.x,h=a.y,d=a.z,f=o.x,y=o.y,v=o.z,m=p+h+v,b=new t;if(m>0){var g=Math.sqrt(m+1);return b.w=.5*g,g=.5/g,b.x=(d-y)*g,b.y=(f-l)*g,b.z=(u-c)*g,b}if(p>=h&&p>=v){var _=Math.sqrt(1+p-h-v),C=.5/_;return b.x=.5*_,b.y=(u+c)*C,b.z=(l+f)*C,b.w=(d-y)*C,b}if(h>v){var O=Math.sqrt(1+h-p-v),x=.5/O;return b.x=(c+u)*x,b.y=.5*O,b.z=(y+d)*x,b.w=(f-l)*x,b}var w=Math.sqrt(1+v-p-h),T=.5/w;return b.x=(f+l)*T,b.y=(y+d)*T,b.z=.5*w,b.w=(u-c)*T,b},t.RotateTowards=function(e,n,o){var r=t.Angle(e,n);if(0===r)return n;var i=Math.min(1,o/r);return t.Slerp(e,n,i)},t.FromToRotation=function(e,n){var o=new t,i=e.normalize(),a=n.normalize(),p=r.Vector3.Dot(i,a);if(p>-1+s.Epsilon){var u=Math.sqrt(2*(1+p)),l=1/u,c=r.Vector3.Cross(i,a).scaleInPlace(l);o.set(c.x,c.y,c.z,.5*u)}else{if(p>1-s.Epsilon)return new t(0,0,0,1);var h=r.Vector3.Cross(r.Vector3.Right(),i);h.lengthSquared()<s.Epsilon&&(h=r.Vector3.Cross(r.Vector3.Forward(),i)),o.set(h.x,h.y,h.z,0)}return o.normalize()},Object.defineProperty(t.prototype,\"normalized\",{get:function(){return this.normalize()},enumerable:!1,configurable:!0}),t.prototype.setFromToRotation=function(e,n,r){void 0===r&&(r=i.MathTmp.staticUp),i.MathTmp.tmpMatrix=o.Matrix.Zero(),o.Matrix.LookAtLHToRef(e,n,r,i.MathTmp.tmpMatrix),i.MathTmp.tmpMatrix.invert(),t.FromRotationMatrixToRef(i.MathTmp.tmpMatrix,this)},Object.defineProperty(t.prototype,\"eulerAngles\",{get:function(){var t=new r.Vector3,e=new o.Matrix;this.toRotationMatrix(e);var n=o.Matrix.GetAsMatrix3x3(e);return t.y=s.RAD2DEG*Math.asin(Math.max(-1,Math.min(1,n[6]))),Math.abs(n[6])<.99999?(t.x=s.RAD2DEG*Math.atan2(-n[7],n[8]),t.z=s.RAD2DEG*Math.atan2(-n[3],n[0])):(t.x=s.RAD2DEG*Math.atan2(n[5],n[4]),t.z=0),t},set:function(t){this.setEuler(t.x,t.y,t.z)},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\", \"+this.w+\")\"},Object.defineProperty(t.prototype,\"length\",{get:function(){return Math.sqrt(this.lengthSquared)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"lengthSquared\",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},enumerable:!1,configurable:!0}),t.prototype.getClassName=function(){return\"Quaternion\"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*(t=397*t^(this.y||0))^(this.z||0))^(this.w||0)},t.prototype.asArray=function(){return[this.x,this.y,this.z,this.w]},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w},t.prototype.clone=function(){return new t(this.x,this.y,this.z,this.w)},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.x=t,this.y=e,this.z=n,this.w=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.setEuler=function(e,n,o){return t.RotationYawPitchRollToRef(n*s.DEG2RAD,e*s.DEG2RAD,o*s.DEG2RAD,this),this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,this},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,e.z+=this.z*t,e.w+=this.w*t,this},t.prototype.multiply=function(e){var n=new t(0,0,0,1);return this.multiplyToRef(e,n),n},t.prototype.multiplyToRef=function(t,e){var n=this.x*t.w+this.y*t.z-this.z*t.y+this.w*t.x,o=-this.x*t.z+this.y*t.w+this.z*t.x+this.w*t.y,r=this.x*t.y-this.y*t.x+this.z*t.w+this.w*t.z,i=-this.x*t.x-this.y*t.y-this.z*t.z+this.w*t.w;return e.copyFromFloats(n,o,r,i),this},t.prototype.multiplyInPlace=function(t){return this.multiplyToRef(t,this),this},t.prototype.conjugateToRef=function(t){return t.copyFromFloats(-this.x,-this.y,-this.z,this.w),this},t.prototype.conjugateInPlace=function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},t.prototype.conjugate=function(){return new t(-this.x,-this.y,-this.z,this.w)},t.prototype.normalize=function(){var t=1/this.length;return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.angleAxis=function(e,n){if(0===n.lengthSquared())return t.Identity;var o=t.Identity,r=e*s.DEG2RAD;r*=.5;var i=n.normalize();return i=n.scaleInPlace(Math.sin(r)),o.x=i.x,o.y=i.y,o.z=i.z,o.w=Math.cos(r),o.normalize()},t.prototype.toRotationMatrix=function(t){return o.Matrix.FromQuaternionToRef(this,t),this},t.prototype.fromRotationMatrix=function(e){return t.FromRotationMatrixToRef(e,this),this},t}();e.Quaternion=a},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Matrix=void 0;var o=n(3),r=n(10),i=n(9),s=n(21),a=function(){function t(){this._isIdentity=!1,this._isIdentityDirty=!0,this._isIdentity3x2=!0,this._isIdentity3x2Dirty=!0,this._m=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this._updateIdentityStatus(!1)}return Object.defineProperty(t.prototype,\"m\",{get:function(){return this._m},enumerable:!1,configurable:!0}),Object.defineProperty(t,\"IdentityReadOnly\",{get:function(){return t._identityReadOnly},enumerable:!1,configurable:!0}),t.FromArray=function(e,n){void 0===n&&(n=0);var o=new t;return t.FromArrayToRef(e,n,o),o},t.FromArrayToRef=function(t,e,n){for(var o=0;o<16;o++)n._m[o]=t[o+e];n._markAsUpdated()},t.FromFloatArrayToRefScaled=function(t,e,n,o){for(var r=0;r<16;r++)o._m[r]=t[r+e]*n;o._markAsUpdated()},t.FromValuesToRef=function(t,e,n,o,r,i,s,a,p,u,l,c,h,d,f,y,v){var m=v._m;m[0]=t,m[1]=e,m[2]=n,m[3]=o,m[4]=r,m[5]=i,m[6]=s,m[7]=a,m[8]=p,m[9]=u,m[10]=l,m[11]=c,m[12]=h,m[13]=d,m[14]=f,m[15]=y,v._markAsUpdated()},t.FromValues=function(e,n,o,r,i,s,a,p,u,l,c,h,d,f,y,v){var m=new t,b=m._m;return b[0]=e,b[1]=n,b[2]=o,b[3]=r,b[4]=i,b[5]=s,b[6]=a,b[7]=p,b[8]=u,b[9]=l,b[10]=c,b[11]=h,b[12]=d,b[13]=f,b[14]=y,b[15]=v,m._markAsUpdated(),m},t.Compose=function(e,n,o){var r=new t;return t.ComposeToRef(e,n,o,r),r},t.ComposeToRef=function(e,n,o,r){t.ScalingToRef(e.x,e.y,e.z,i.MathTmp.Matrix[1]),n.toRotationMatrix(i.MathTmp.Matrix[0]),i.MathTmp.Matrix[1].multiplyToRef(i.MathTmp.Matrix[0],r),r.setTranslation(o)},t.Identity=function(){var e=t.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return e._updateIdentityStatus(!0),e},t.IdentityToRef=function(e){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,e),e._updateIdentityStatus(!0)},t.Zero=function(){var e=t.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return e._updateIdentityStatus(!1),e},t.RotationX=function(e){var n=new t;return t.RotationXToRef(e,n),n},t.Invert=function(e){var n=new t;return e.invertToRef(n),n},t.RotationXToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(1,0,0,0,0,r,o,0,0,-o,r,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationY=function(e){var n=new t;return t.RotationYToRef(e,n),n},t.RotationYToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(r,0,-o,0,0,1,0,0,o,0,r,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationZ=function(e){var n=new t;return t.RotationZToRef(e,n),n},t.RotationZToRef=function(e,n){var o=Math.sin(e),r=Math.cos(e);t.FromValuesToRef(r,o,0,0,-o,r,0,0,0,0,1,0,0,0,0,1,n),n._updateIdentityStatus(1===r&&0===o)},t.RotationAxis=function(e,n){var o=new t;return t.RotationAxisToRef(e,n,o),o},t.RotationAxisToRef=function(t,e,n){var o=Math.sin(-e),r=Math.cos(-e),i=1-r;t.normalize();var s=n._m;s[0]=t.x*t.x*i+r,s[1]=t.x*t.y*i-t.z*o,s[2]=t.x*t.z*i+t.y*o,s[3]=0,s[4]=t.y*t.x*i+t.z*o,s[5]=t.y*t.y*i+r,s[6]=t.y*t.z*i-t.x*o,s[7]=0,s[8]=t.z*t.x*i-t.y*o,s[9]=t.z*t.y*i+t.x*o,s[10]=t.z*t.z*i+r,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,n._markAsUpdated()},t.RotationYawPitchRoll=function(e,n,o){var r=new t;return t.RotationYawPitchRollToRef(e,n,o,r),r},t.RotationYawPitchRollToRef=function(t,e,n,o){r.Quaternion.RotationYawPitchRollToRef(t,e,n,i.MathTmp.Quaternion[0]),i.MathTmp.Quaternion[0].toRotationMatrix(o)},t.Scaling=function(e,n,o){var r=new t;return t.ScalingToRef(e,n,o,r),r},t.ScalingToRef=function(e,n,o,r){t.FromValuesToRef(e,0,0,0,0,n,0,0,0,0,o,0,0,0,0,1,r),r._updateIdentityStatus(1===e&&1===n&&1===o)},t.Translation=function(e,n,o){var r=new t;return t.TranslationToRef(e,n,o,r),r},t.TranslationToRef=function(e,n,o,r){t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e,n,o,1,r),r._updateIdentityStatus(0===e&&0===n&&0===o)},t.Lerp=function(e,n,o){var r=new t;return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){for(var r=0;r<16;r++)o._m[r]=t._m[r]*(1-n)+e._m[r]*n;o._markAsUpdated()},t.DecomposeLerp=function(e,n,o){var r=new t;return t.DecomposeLerpToRef(e,n,o,r),r},t.DecomposeLerpToRef=function(e,n,s,a){var p=i.MathTmp.Vector3[0],u=i.MathTmp.Quaternion[0],l=i.MathTmp.Vector3[1];e.decompose(p,u,l);var c=i.MathTmp.Vector3[2],h=i.MathTmp.Quaternion[1],d=i.MathTmp.Vector3[3];n.decompose(c,h,d);var f=i.MathTmp.Vector3[4];o.Vector3.LerpToRef(p,c,s,f);var y=i.MathTmp.Quaternion[2];r.Quaternion.SlerpToRef(u,h,s,y);var v=i.MathTmp.Vector3[5];o.Vector3.LerpToRef(l,d,s,v),t.ComposeToRef(f,y,v,a)},t.LookAtLH=function(e,n,o){var r=new t;return t.LookAtLHToRef(e,n,o,r),r},t.LookAtLHToRef=function(e,n,r,s){var a=i.MathTmp.Vector3[0],p=i.MathTmp.Vector3[1],u=i.MathTmp.Vector3[2];n.subtractToRef(e,u),u.normalize(),o.Vector3.CrossToRef(r,u,a);var l=a.lengthSquared();0===l?a.x=1:a.normalizeFromLength(Math.sqrt(l)),o.Vector3.CrossToRef(u,a,p),p.normalize();var c=-o.Vector3.Dot(a,e),h=-o.Vector3.Dot(p,e),d=-o.Vector3.Dot(u,e);t.FromValuesToRef(a.x,p.x,u.x,0,a.y,p.y,u.y,0,a.z,p.z,u.z,0,c,h,d,1,s)},t.LookAtRH=function(e,n,o){var r=new t;return t.LookAtRHToRef(e,n,o,r),r},t.LookAtRHToRef=function(e,n,r,s){var a=i.MathTmp.Vector3[0],p=i.MathTmp.Vector3[1],u=i.MathTmp.Vector3[2];e.subtractToRef(n,u),u.normalize(),o.Vector3.CrossToRef(r,u,a);var l=a.lengthSquared();0===l?a.x=1:a.normalizeFromLength(Math.sqrt(l)),o.Vector3.CrossToRef(u,a,p),p.normalize();var c=-o.Vector3.Dot(a,e),h=-o.Vector3.Dot(p,e),d=-o.Vector3.Dot(u,e);t.FromValuesToRef(a.x,p.x,u.x,0,a.y,p.y,u.y,0,a.z,p.z,u.z,0,c,h,d,1,s)},t.OrthoLH=function(e,n,o,r){var i=new t;return t.OrthoLHToRef(e,n,o,r,i),i},t.OrthoLHToRef=function(e,n,o,r,i){var s=2/e,a=2/n,p=2/(r-o),u=-(r+o)/(r-o);t.FromValuesToRef(s,0,0,0,0,a,0,0,0,0,p,0,0,0,u,1,i),i._updateIdentityStatus(1===s&&1===a&&1===p&&0===u)},t.OrthoOffCenterLH=function(e,n,o,r,i,s){var a=new t;return t.OrthoOffCenterLHToRef(e,n,o,r,i,s,a),a},t.OrthoOffCenterLHToRef=function(e,n,o,r,i,s,a){var p=2/(n-e),u=2/(r-o),l=2/(s-i),c=-(s+i)/(s-i),h=(e+n)/(e-n),d=(r+o)/(o-r);t.FromValuesToRef(p,0,0,0,0,u,0,0,0,0,l,0,h,d,c,1,a),a._markAsUpdated()},t.OrthoOffCenterRH=function(e,n,o,r,i,s){var a=new t;return t.OrthoOffCenterRHToRef(e,n,o,r,i,s,a),a},t.OrthoOffCenterRHToRef=function(e,n,o,r,i,s,a){t.OrthoOffCenterLHToRef(e,n,o,r,i,s,a),a._m[10]*=-1},t.PerspectiveLH=function(e,n,o,r){var i=new t,s=2*o/e,a=2*o/n,p=(r+o)/(r-o),u=-2*r*o/(r-o);return t.FromValuesToRef(s,0,0,0,0,a,0,0,0,0,p,1,0,0,u,0,i),i._updateIdentityStatus(!1),i},t.PerspectiveFovLH=function(e,n,o,r){var i=new t;return t.PerspectiveFovLHToRef(e,n,o,r,i),i},t.PerspectiveFovLHToRef=function(e,n,o,r,i,s){void 0===s&&(s=!0);var a=o,p=r,u=1/Math.tan(.5*e),l=s?u/n:u,c=s?u:u*n,h=(p+a)/(p-a),d=-2*p*a/(p-a);t.FromValuesToRef(l,0,0,0,0,c,0,0,0,0,h,1,0,0,d,0,i),i._updateIdentityStatus(!1)},t.PerspectiveFovRH=function(e,n,o,r){var i=new t;return t.PerspectiveFovRHToRef(e,n,o,r,i),i},t.PerspectiveFovRHToRef=function(e,n,o,r,i,s){void 0===s&&(s=!0);var a=o,p=r,u=1/Math.tan(.5*e),l=s?u/n:u,c=s?u:u*n,h=-(p+a)/(p-a),d=-2*p*a/(p-a);t.FromValuesToRef(l,0,0,0,0,c,0,0,0,0,h,-1,0,0,d,0,i),i._updateIdentityStatus(!1)},t.PerspectiveFovWebVRToRef=function(t,e,n,o,r){void 0===r&&(r=!1);var i=r?-1:1,s=Math.tan(t.upDegrees*Math.PI/180),a=Math.tan(t.downDegrees*Math.PI/180),p=Math.tan(t.leftDegrees*Math.PI/180),u=Math.tan(t.rightDegrees*Math.PI/180),l=2/(p+u),c=2/(s+a),h=o._m;h[0]=l,h[1]=h[2]=h[3]=h[4]=0,h[5]=c,h[6]=h[7]=0,h[8]=(p-u)*l*.5,h[9]=-(s-a)*c*.5,h[10]=-n/(e-n),h[11]=1*i,h[12]=h[13]=h[15]=0,h[14]=-2*n*e/(n-e),o._markAsUpdated()},t.GetAsMatrix2x2=function(t){return[t._m[0],t._m[1],t._m[4],t._m[5]]},t.GetAsMatrix3x3=function(t){return[t._m[0],t._m[1],t._m[2],t._m[4],t._m[5],t._m[6],t._m[8],t._m[9],t._m[10]]},t.Transpose=function(e){var n=new t;return t.TransposeToRef(e,n),n},t.TransposeToRef=function(t,e){var n=e._m,o=t._m;n[0]=o[0],n[1]=o[4],n[2]=o[8],n[3]=o[12],n[4]=o[1],n[5]=o[5],n[6]=o[9],n[7]=o[13],n[8]=o[2],n[9]=o[6],n[10]=o[10],n[11]=o[14],n[12]=o[3],n[13]=o[7],n[14]=o[11],n[15]=o[15],e._updateIdentityStatus(t._isIdentity,t._isIdentityDirty)},t.Reflection=function(e){var n=new t;return t.ReflectionToRef(e,n),n},t.ReflectionToRef=function(e,n){e.normalize();var o=e.normal.x,r=e.normal.y,i=e.normal.z,s=-2*o,a=-2*r,p=-2*i;t.FromValuesToRef(s*o+1,a*o,p*o,0,s*r,a*r+1,p*r,0,s*i,a*i,p*i+1,0,s*e.d,a*e.d,p*e.d,1,n)},t.FromXYZAxesToRef=function(e,n,o,r){t.FromValuesToRef(e.x,e.y,e.z,0,n.x,n.y,n.z,0,o.x,o.y,o.z,0,0,0,0,1,r)},t.FromQuaternionToRef=function(t,e){var n=t.x*t.x,o=t.y*t.y,r=t.z*t.z,i=t.x*t.y,s=t.z*t.w,a=t.z*t.x,p=t.y*t.w,u=t.y*t.z,l=t.x*t.w;e._m[0]=1-2*(o+r),e._m[1]=2*(i+s),e._m[2]=2*(a-p),e._m[3]=0,e._m[4]=2*(i-s),e._m[5]=1-2*(r+n),e._m[6]=2*(u+l),e._m[7]=0,e._m[8]=2*(a+p),e._m[9]=2*(u-l),e._m[10]=1-2*(o+n),e._m[11]=0,e._m[12]=0,e._m[13]=0,e._m[14]=0,e._m[15]=1,e._markAsUpdated()},t.prototype._markAsUpdated=function(){this.updateFlag=t._updateFlagSeed++,this._isIdentity=!1,this._isIdentity3x2=!1,this._isIdentityDirty=!0,this._isIdentity3x2Dirty=!0},t.prototype.isIdentity=function(){if(this._isIdentityDirty){this._isIdentityDirty=!1;var t=this._m;this._isIdentity=1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&0===t[12]&&0===t[13]&&0===t[14]&&1===t[15]}return this._isIdentity},t.prototype.isIdentityAs3x2=function(){return this._isIdentity3x2Dirty&&(this._isIdentity3x2Dirty=!1,1!==this._m[0]||1!==this._m[5]||1!==this._m[15]||0!==this._m[1]||0!==this._m[2]||0!==this._m[3]||0!==this._m[4]||0!==this._m[6]||0!==this._m[7]||0!==this._m[8]||0!==this._m[9]||0!==this._m[10]||0!==this._m[11]||0!==this._m[12]||0!==this._m[13]||0!==this._m[14]?this._isIdentity3x2=!1:this._isIdentity3x2=!0),this._isIdentity3x2},t.prototype.determinant=function(){if(!0===this._isIdentity)return 1;var t=this._m,e=t[0],n=t[1],o=t[2],r=t[3],i=t[4],s=t[5],a=t[6],p=t[7],u=t[8],l=t[9],c=t[10],h=t[11],d=t[12],f=t[13],y=t[14],v=t[15],m=c*v-y*h,b=l*v-f*h,g=l*y-f*c,_=u*v-d*h,C=u*y-c*d,O=u*f-d*l;return e*+(s*m-a*b+p*g)+n*-(i*m-a*_+p*C)+o*+(i*b-s*_+p*O)+r*-(i*g-s*C+a*O)},t.prototype.toArray=function(){return this._m},t.prototype.asArray=function(){return this._m},t.prototype.invert=function(){return this.invertToRef(this),this},t.prototype.reset=function(){return t.FromValuesToRef(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,this),this._updateIdentityStatus(!1),this},t.prototype.add=function(e){var n=new t;return this.addToRef(e,n),n},t.prototype.addToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]=this._m[n]+t._m[n];return e._markAsUpdated(),this},t.prototype.addToSelf=function(t){for(var e=0;e<16;e++)this._m[e]+=t._m[e];return this._markAsUpdated(),this},t.prototype.invertToRef=function(e){if(!0===this._isIdentity)return t.IdentityToRef(e),this;var n=this._m,o=n[0],r=n[1],i=n[2],s=n[3],a=n[4],p=n[5],u=n[6],l=n[7],c=n[8],h=n[9],d=n[10],f=n[11],y=n[12],v=n[13],m=n[14],b=n[15],g=d*b-m*f,_=h*b-v*f,C=h*m-v*d,O=c*b-y*f,x=c*m-d*y,w=c*v-y*h,T=+(p*g-u*_+l*C),R=-(a*g-u*O+l*x),A=+(a*_-p*O+l*w),E=-(a*C-p*x+u*w),S=o*T+r*R+i*A+s*E;if(0===S)return e.copyFrom(this),this;var P=1/S,I=u*b-m*l,z=p*b-v*l,M=p*m-v*u,D=a*b-y*l,F=a*m-y*u,U=a*v-y*p,L=u*f-d*l,N=p*f-h*l,V=p*d-h*u,j=a*f-c*l,H=a*d-c*u,B=a*h-c*p,k=-(r*g-i*_+s*C),G=+(o*g-i*O+s*x),W=-(o*_-r*O+s*w),q=+(o*C-r*x+i*w),Y=+(r*I-i*z+s*M),X=-(o*I-i*D+s*F),Z=+(o*z-r*D+s*U),Q=-(o*M-r*F+i*U),J=-(r*L-i*N+s*V),K=+(o*L-i*j+s*H),$=-(o*N-r*j+s*B),tt=+(o*V-r*H+i*B);return t.FromValuesToRef(T*P,k*P,Y*P,J*P,R*P,G*P,X*P,K*P,A*P,W*P,Z*P,$*P,E*P,q*P,Q*P,tt*P,e),this},t.prototype.addAtIndex=function(t,e){return this._m[t]+=e,this._markAsUpdated(),this},t.prototype.multiplyAtIndex=function(t,e){return this._m[t]*=e,this._markAsUpdated(),this},t.prototype.setTranslationFromFloats=function(t,e,n){return this._m[12]=t,this._m[13]=e,this._m[14]=n,this._markAsUpdated(),this},t.prototype.setTranslation=function(t){return this.setTranslationFromFloats(t.x,t.y,t.z)},t.prototype.getTranslation=function(){return new o.Vector3(this._m[12],this._m[13],this._m[14])},t.prototype.getTranslationToRef=function(t){return t.x=this._m[12],t.y=this._m[13],t.z=this._m[14],this},t.prototype.removeRotationAndScaling=function(){var e=this.m;return t.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e[12],e[13],e[14],e[15],this),this._updateIdentityStatus(0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]),this},t.prototype.multiply=function(e){var n=new t;return this.multiplyToRef(e,n),n},t.prototype.copyFrom=function(t){t.copyToArray(this._m);var e=t;return this._updateIdentityStatus(e._isIdentity,e._isIdentityDirty,e._isIdentity3x2,e._isIdentity3x2Dirty),this},t.prototype.copyToArray=function(t,e){void 0===e&&(e=0);for(var n=0;n<16;n++)t[e+n]=this._m[n];return this},t.prototype.multiplyToRef=function(t,e){return this._isIdentity?(e.copyFrom(t),this):t._isIdentity?(e.copyFrom(this),this):(this.multiplyToArray(t,e._m,0),e._markAsUpdated(),this)},t.prototype.multiplyToArray=function(t,e,n){var o=this._m,r=t.m,i=o[0],s=o[1],a=o[2],p=o[3],u=o[4],l=o[5],c=o[6],h=o[7],d=o[8],f=o[9],y=o[10],v=o[11],m=o[12],b=o[13],g=o[14],_=o[15],C=r[0],O=r[1],x=r[2],w=r[3],T=r[4],R=r[5],A=r[6],E=r[7],S=r[8],P=r[9],I=r[10],z=r[11],M=r[12],D=r[13],F=r[14],U=r[15];return e[n]=i*C+s*T+a*S+p*M,e[n+1]=i*O+s*R+a*P+p*D,e[n+2]=i*x+s*A+a*I+p*F,e[n+3]=i*w+s*E+a*z+p*U,e[n+4]=u*C+l*T+c*S+h*M,e[n+5]=u*O+l*R+c*P+h*D,e[n+6]=u*x+l*A+c*I+h*F,e[n+7]=u*w+l*E+c*z+h*U,e[n+8]=d*C+f*T+y*S+v*M,e[n+9]=d*O+f*R+y*P+v*D,e[n+10]=d*x+f*A+y*I+v*F,e[n+11]=d*w+f*E+y*z+v*U,e[n+12]=m*C+b*T+g*S+_*M,e[n+13]=m*O+b*R+g*P+_*D,e[n+14]=m*x+b*A+g*I+_*F,e[n+15]=m*w+b*E+g*z+_*U,this},t.prototype.equals=function(t){var e=t;if(!e)return!1;if((this._isIdentity||e._isIdentity)&&!this._isIdentityDirty&&!e._isIdentityDirty)return this._isIdentity&&e._isIdentity;var n=this.m,o=e.m;return n[0]===o[0]&&n[1]===o[1]&&n[2]===o[2]&&n[3]===o[3]&&n[4]===o[4]&&n[5]===o[5]&&n[6]===o[6]&&n[7]===o[7]&&n[8]===o[8]&&n[9]===o[9]&&n[10]===o[10]&&n[11]===o[11]&&n[12]===o[12]&&n[13]===o[13]&&n[14]===o[14]&&n[15]===o[15]},t.prototype.clone=function(){var e=new t;return e.copyFrom(this),e},t.prototype.getClassName=function(){return\"Matrix\"},t.prototype.getHashCode=function(){for(var t=this._m[0]||0,e=1;e<16;e++)t=397*t^(this._m[e]||0);return t},t.prototype.decompose=function(e,n,o){if(this._isIdentity)return o&&o.setAll(0),e&&e.setAll(1),n&&n.copyFromFloats(0,0,0,1),!0;var s=this._m;o&&o.copyFromFloats(s[12],s[13],s[14]);var a=e||i.MathTmp.Vector3[0];if(a.x=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]),a.y=Math.sqrt(s[4]*s[4]+s[5]*s[5]+s[6]*s[6]),a.z=Math.sqrt(s[8]*s[8]+s[9]*s[9]+s[10]*s[10]),this.determinant()<=0&&(a.y*=-1),0===a.x||0===a.y||0===a.z)return n&&n.copyFromFloats(0,0,0,1),!1;if(n){var p=1/a.x,u=1/a.y,l=1/a.z;t.FromValuesToRef(s[0]*p,s[1]*p,s[2]*p,0,s[4]*u,s[5]*u,s[6]*u,0,s[8]*l,s[9]*l,s[10]*l,0,0,0,0,1,i.MathTmp.Matrix[0]),r.Quaternion.FromRotationMatrixToRef(i.MathTmp.Matrix[0],n)}return!0},t.prototype.getRow=function(t){if(t<0||t>3)return null;var e=4*t;return new s.Vector4(this._m[e+0],this._m[e+1],this._m[e+2],this._m[e+3])},t.prototype.setRow=function(t,e){return this.setRowFromFloats(t,e.x,e.y,e.z,e.w)},t.prototype.transpose=function(){return t.Transpose(this)},t.prototype.transposeToRef=function(e){return t.TransposeToRef(this,e),this},t.prototype.setRowFromFloats=function(t,e,n,o,r){if(t<0||t>3)return this;var i=4*t;return this._m[i+0]=e,this._m[i+1]=n,this._m[i+2]=o,this._m[i+3]=r,this._markAsUpdated(),this},t.prototype.scale=function(e){var n=new t;return this.scaleToRef(e,n),n},t.prototype.scaleToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]=this._m[n]*t;return e._markAsUpdated(),this},t.prototype.scaleAndAddToRef=function(t,e){for(var n=0;n<16;n++)e._m[n]+=this._m[n]*t;return e._markAsUpdated(),this},t.prototype.toNormalMatrix=function(e){var n=i.MathTmp.Matrix[0];this.invertToRef(n),n.transposeToRef(e);var o=e._m;t.FromValuesToRef(o[0],o[1],o[2],0,o[4],o[5],o[6],0,o[8],o[9],o[10],0,0,0,0,1,e)},t.prototype.getRotationMatrix=function(){var e=new t;return this.getRotationMatrixToRef(e),e},t.prototype.getRotationMatrixToRef=function(e){var n=i.MathTmp.Vector3[0];if(!this.decompose(n))return t.IdentityToRef(e),this;var o=this._m,r=1/n.x,s=1/n.y,a=1/n.z;return t.FromValuesToRef(o[0]*r,o[1]*r,o[2]*r,0,o[4]*s,o[5]*s,o[6]*s,0,o[8]*a,o[9]*a,o[10]*a,0,0,0,0,1,e),this},t.prototype.toggleModelMatrixHandInPlace=function(){var t=this._m;t[2]*=-1,t[6]*=-1,t[8]*=-1,t[9]*=-1,t[14]*=-1,this._markAsUpdated()},t.prototype.toggleProjectionMatrixHandInPlace=function(){var t=this._m;t[8]*=-1,t[9]*=-1,t[10]*=-1,t[11]*=-1,this._markAsUpdated()},t.prototype._updateIdentityStatus=function(e,n,o,r){void 0===n&&(n=!1),void 0===o&&(o=!1),void 0===r&&(r=!0),this.updateFlag=t._updateFlagSeed++,this._isIdentity=e,this._isIdentity3x2=e||o,this._isIdentityDirty=!this._isIdentity&&n,this._isIdentity3x2Dirty=!this._isIdentity3x2&&r},t._updateFlagSeed=0,t._identityReadOnly=t.Identity(),t}();e.Matrix=a},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Entity=void 0;var o=n(0),r=n(7),i=n(1),s=function(){function t(t){this.name=t,this.children={},this.eventManager=null,this.alive=!1,this.uuid=i.newId(\"E\"),this.components={},this.engine=null,this._parent=null}return t.prototype.addComponentOrReplace=function(t){if(\"function\"==typeof t)throw new Error(\"You passed a function or class as a component, an instance of component is expected\");if(\"object\"!=typeof t)throw new Error(\"You passed a \"+typeof t+\", an instance of component is expected\");var e=o.getComponentName(t);if(this.components[e]){if(this.components[e]===t)return t;this.removeComponent(this.components[e],!1)}return this.addComponent(t)},t.prototype.hasComponent=function(t){var e=typeof t;if(\"string\"!==e&&\"object\"!==e&&\"function\"!==e)throw new Error(\"Entity#has(component): component is not a class, name or instance\");if(null==t)return!1;var n=\"string\"===e?t:o.getComponentName(t),r=this.components[n];return!!r&&(\"object\"===e?r===t:\"function\"!==e||r instanceof t)},t.prototype.getComponent=function(t){var e=typeof t;if(\"string\"!==e&&\"function\"!==e)throw new Error(\"Entity#get(component): component is not a class or name\");var n=\"string\"===e?t:o.getComponentName(t),r=this.components[n];if(!r)throw new Error('Can not get component \"'+n+'\" from entity \"'+this.identifier+'\"');if(\"function\"===e){if(r instanceof t)return r;throw new Error('Can not get component \"'+n+'\" from entity \"'+this.identifier+'\" (by instance)')}return r},t.prototype.getComponentOrNull=function(t){var e=typeof t;if(\"string\"!==e&&\"function\"!==e)throw new Error(\"Entity#getOrNull(component): component is not a class or name\");var n=\"string\"===e?t:o.getComponentName(t),r=this.components[n];return r?\"function\"===e?r instanceof t?r:null:r:null},t.prototype.getComponentOrCreate=function(t){if(\"function\"!=typeof t)throw new Error(\"Entity#getOrCreate(component): component is not a class\");var e=this.getComponentOrNull(t);return e||(e=new t,o.getComponentName(e),this.addComponentOrReplace(e)),e},t.prototype.addComponent=function(t){if(\"object\"!=typeof t)throw new Error(\"Entity#add(component): You passed a function or class as a component, an instance of component is expected\");var e=o.getComponentName(t),n=o.getComponentClassId(t);if(this.components[e])throw new Error('A component of type \"'+e+'\" is already present in entity \"'+this.identifier+'\"');this.components[e]=t,this.eventManager&&this.eventManager.fireEvent(new r.ComponentAdded(this,e,n));var i=t;return\"function\"==typeof i.addedToEntity&&i.addedToEntity(this),t},t.prototype.removeComponent=function(t,e){void 0===e&&(e=!0);var n=typeof t;if(\"string\"!==n&&\"function\"!==n&&\"object\"!==n)throw new Error(\"Entity#remove(component): component is not a class, class or name\");var s=\"string\"===n?t:o.getComponentName(t),a=this.components[s];if(a){if(\"function\"===n)return a instanceof t?(delete this.components[s],void(a&&(e&&this.eventManager&&this.eventManager.fireEvent(new r.ComponentRemoved(this,s,a)),\"function\"==typeof a.removedFromEntity&&a.removedFromEntity(this)))):void i.log('Entity Warning: Trying to remove wrong (by constructor) component \"'+s+'\" from entity \"'+this.identifier+'\"');delete this.components[s],a&&(e&&this.eventManager&&this.eventManager.fireEvent(new r.ComponentRemoved(this,s,a)),\"function\"==typeof a.removedFromEntity&&a.removedFromEntity(this))}else i.log('Entity Warning: Trying to remove inexisting component \"'+s+'\" from entity \"'+this.identifier+'\"')},t.prototype.isAddedToEngine=function(){return!(!this.engine||!(this.uuid in this.engine.entities)&&this.engine.rootEntity!==this)},t.prototype.setParent=function(t){var e;if(t&&\"getEntityRepresentation\"in t){if(!this.engine)throw new Error(\"In order to set an attachable as parent, you first need to add the entity to the engine.\");e=t.getEntityRepresentation(this.engine)}else e=!t&&this.engine?this.engine.rootEntity:t;var n=this.getParent();if(e===this)throw new Error('Failed to set parent for entity \"'+this.identifier+\"\\\": An entity can't set itself as a its own parent\");if(e===n)return this;var o=this.getCircularAncestor(e);if(o)throw new Error('Failed to set parent for entity \"'+this.identifier+'\": Circular parent references are not allowed (See entity \"'+o+'\")');return n&&delete n.children[this.uuid],null!==e&&\"0\"!==e.uuid&&(!e.isAddedToEngine()&&this.isAddedToEngine()&&this.engine.removeEntity(this),e.isAddedToEngine()&&!this.isAddedToEngine()&&e.engine.addEntity(this)),this._parent=e||null,this.registerAsChild(),this.eventManager&&this.engine&&this.eventManager.fireEvent(new r.ParentChanged(this,e)),this},t.prototype.getParent=function(){return this._parent},Object.defineProperty(t.prototype,\"identifier\",{get:function(){return this.name||this.uuid},enumerable:!1,configurable:!0}),t.prototype.getCircularAncestor=function(t){for(var e=this.engine?this.engine.rootEntity:null,n=t;n&&n!==e;){var o=n.getParent();if(o===this)return n.uuid;n=o}return null},t.prototype.registerAsChild=function(){var t=this.getParent();this.uuid&&t&&(t.children[this.uuid]=this)},t}();e.Entity=s},function(t,e,n){\"use strict\";var o=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.PointerEvent=e.RaycastResponse=e.UUIDEvent=void 0;var r=n(8),i=function(){function t(t,e){this.uuid=t,this.payload=e}return t=o([r.EventConstructor()],t)}();e.UUIDEvent=i;var s=function(){function t(t){this.payload=t}return t=o([r.EventConstructor()],t)}();e.RaycastResponse=s;var a=function(){function t(t){this.payload=t}return t=o([r.EventConstructor()],t)}();e.PointerEvent=a},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.uuidEventSystem=e.UUIDEventSystem=e.pointerEventSystem=e.PointerEventSystem=e.raycastEventSystem=e.RaycastEventSystem=void 0;var o=n(13),r=n(4),i=n(7),s=n(16),a=n(28),p=function(){function t(){}return t.prototype.activate=function(t){t.eventManager.addListener(o.RaycastResponse,this,(function(t){\"HitFirst\"===t.payload.queryType?a.PhysicsCast.instance.handleRaycastHitFirstResponse(t):\"HitAll\"===t.payload.queryType&&a.PhysicsCast.instance.handleRaycastHitAllResponse(t)})),\"undefined\"!=typeof dcl&&dcl.subscribe(\"raycastResponse\")},t.prototype.deactivate=function(){\"undefined\"!=typeof dcl&&dcl.unsubscribe(\"raycastResponse\")},t}();e.RaycastEventSystem=p,e.raycastEventSystem=new p;var u=function(){function t(){}return t.prototype.activate=function(t){t.eventManager.addListener(o.PointerEvent,this,(function(t){s.Input.instance.handlePointerEvent(t.payload)})),\"undefined\"!=typeof dcl&&(dcl.subscribe(\"pointerUp\"),dcl.subscribe(\"pointerDown\"),dcl.subscribe(\"pointerEvent\"))},t.prototype.deactivate=function(){\"undefined\"!=typeof dcl&&(dcl.unsubscribe(\"pointerUp\"),dcl.unsubscribe(\"pointerDown\"),dcl.unsubscribe(\"pointerEvent\"))},t}();e.PointerEventSystem=u,e.pointerEventSystem=new u;var l=function(){function t(){this.handlerMap={}}return t.prototype.activate=function(t){t.eventManager.addListener(o.UUIDEvent,this,this.handleEvent),t.eventManager.addListener(i.ComponentAdded,this,this.componentAdded),t.eventManager.addListener(i.ComponentRemoved,this,this.componentRemoved),\"undefined\"!=typeof dcl&&dcl.subscribe(\"uuidEvent\")},t.prototype.deactivate=function(){\"undefined\"!=typeof dcl&&dcl.unsubscribe(\"uuidEvent\")},t.prototype.onAddEntity=function(t){for(var e in t.components){var n=t.components[e];n instanceof r.OnUUIDEvent&&(this.handlerMap[n.uuid]=n)}},t.prototype.onRemoveEntity=function(t){for(var e in t.components){var n=t.components[e];n instanceof r.OnUUIDEvent&&delete this.handlerMap[n.uuid]}},t.prototype.componentAdded=function(t){if(t.entity.isAddedToEngine()){var e=t.entity.components[t.componentName];e instanceof r.OnUUIDEvent&&(this.handlerMap[e.uuid]=e)}},t.prototype.componentRemoved=function(t){t.entity.isAddedToEngine()&&t.component instanceof r.OnUUIDEvent&&delete this.handlerMap[t.component.uuid]},t.prototype.handleEvent=function(t){if(t.uuid in this.handlerMap){var e=this.handlerMap[t.uuid];e&&e.callback&&\"call\"in e.callback&&e.callback(t.payload)}},t}();e.UUIDEventSystem=l,e.uuidEventSystem=new l},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Vector2=void 0;var o=n(2),r=n(6),i=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.Zero=function(){return new t(0,0)},t.One=function(){return new t(1,1)},t.Add=function(e,n){return new t(e.x,e.y).addInPlace(n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1])},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1]},t.CatmullRom=function(e,n,o,r,i){var s=i*i,a=i*s;return new t(.5*(2*n.x+(-e.x+o.x)*i+(2*e.x-5*n.x+4*o.x-r.x)*s+(-e.x+3*n.x-3*o.x+r.x)*a),.5*(2*n.y+(-e.y+o.y)*i+(2*e.y-5*n.y+4*o.y-r.y)*s+(-e.y+3*n.y-3*o.y+r.y)*a))},t.Clamp=function(e,n,o){var r=e.x;r=(r=r>o.x?o.x:r)<n.x?n.x:r;var i=e.y;return new t(r,i=(i=i>o.y?o.y:i)<n.y?n.y:i)},t.Hermite=function(e,n,o,r,i){var s=i*i,a=i*s,p=2*a-3*s+1,u=-2*a+3*s,l=a-2*s+i,c=a-s;return new t(e.x*p+o.x*u+n.x*l+r.x*c,e.y*p+o.y*u+n.y*l+r.y*c)},t.Lerp=function(e,n,o){return new t(e.x+(n.x-e.x)*o,e.y+(n.y-e.y)*o)},t.Dot=function(t,e){return t.x*e.x+t.y*e.y},t.Normalize=function(e){var n=new t(e.x,e.y);return n.normalize(),n},t.Minimize=function(e,n){return new t(e.x<n.x?e.x:n.x,e.y<n.y?e.y:n.y)},t.Maximize=function(e,n){return new t(e.x>n.x?e.x:n.x,e.y>n.y?e.y:n.y)},t.Transform=function(e,n){var o=t.Zero();return t.TransformToRef(e,n,o),o},t.TransformToRef=function(t,e,n){var o=e.m,r=t.x*o[0]+t.y*o[4]+o[12],i=t.x*o[1]+t.y*o[5]+o[13];n.x=r,n.y=i},t.PointInTriangle=function(t,e,n,o){var r=.5*(-n.y*o.x+e.y*(-n.x+o.x)+e.x*(n.y-o.y)+n.x*o.y),i=r<0?-1:1,s=(e.y*o.x-e.x*o.y+(o.y-e.y)*t.x+(e.x-o.x)*t.y)*i,a=(e.x*n.y-e.y*n.x+(e.y-n.y)*t.x+(n.x-e.x)*t.y)*i;return s>0&&a>0&&s+a<2*r*i},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y;return n*n+o*o},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.DistanceOfPointFromSegment=function(e,n,o){var r=t.DistanceSquared(n,o);if(0===r)return t.Distance(e,n);var i=o.subtract(n),s=Math.max(0,Math.min(1,t.Dot(e.subtract(n),i)/r)),a=n.add(i.multiplyByFloats(s,s));return t.Distance(e,a)},t.prototype.toString=function(){return\"{X: \"+this.x+\" Y:\"+this.y+\"}\"},t.prototype.getClassName=function(){return\"Vector2\"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*t^(this.y||0)},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,this},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this},t.prototype.copyFromFloats=function(t,e){return this.x=t,this.y=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this},t.prototype.addVector3=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,this},t.prototype.multiplyByFloats=function(e,n){return new t(this.x*e,this.y*n)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.negate=function(){return new t(-this.x,-this.y)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this},t.prototype.scale=function(e){var n=new t(0,0);return this.scaleToRef(e,n),n},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=o.Epsilon),t&&r.Scalar.WithinEpsilon(this.x,t.x,e)&&r.Scalar.WithinEpsilon(this.y,t.y,e)},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y},t.prototype.normalize=function(){var t=this.length();if(0===t)return this;var e=1/t;return this.x*=e,this.y*=e,this},t.prototype.clone=function(){return new t(this.x,this.y)},t}();e.Vector2=i},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.Input=e.GlobalPointerUp=e.GlobalPointerDown=e.PointerEventComponent=e.ActionButton=void 0;var a,p=n(27),u=n(5),l=n(0);!function(t){t.POINTER=\"POINTER\",t.PRIMARY=\"PRIMARY\",t.SECONDARY=\"SECONDARY\",t.ANY=\"ANY\"}(a=e.ActionButton||(e.ActionButton={}));var c=function(t){if(this.callback=t,!t||!(\"apply\"in t)||!(\"call\"in t))throw new Error(\"Callback is not a function\");y.ensureInstance()};e.PointerEventComponent=c;var h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([l.Component(\"pointerDown\")],e)}(c);e.GlobalPointerDown=h;var d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e=s([l.Component(\"pointerUp\")],e)}(c);e.GlobalPointerUp=d;var f=function(t,e){this.fn=t,this.useRaycast=e},y=function(){function t(){var t,e;this.subscriptions=((t={})[a.POINTER]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.PRIMARY]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.SECONDARY]={BUTTON_DOWN:[],BUTTON_UP:[]},t[a.ANY]={BUTTON_DOWN:[],BUTTON_UP:[]},t),this.internalState=((e={})[a.POINTER]={BUTTON_DOWN:!1},e[a.PRIMARY]={BUTTON_DOWN:!1},e[a.SECONDARY]={BUTTON_DOWN:!1},e[a.ANY]={BUTTON_DOWN:!1},e)}return Object.defineProperty(t,\"instance\",{get:function(){return t.ensureInstance(),t._instance},enumerable:!1,configurable:!0}),t.ensureInstance=function(){t._instance||(t._instance=new t)},t.prototype.isButtonPressed=function(t){return this.internalState[t]},t.prototype.subscribe=function(t,e,n,o){var r=this;return this.subscriptions[e][t].push(new f(o,n)),function(){return r.unsubscribe(t,e,o)}},t.prototype.unsubscribe=function(t,e,n){var o=this.getSubscriptionId(t,e,n);return o>-1&&this.subscriptions[e][t].splice(o,1)},t.prototype.handlePointerEvent=function(t){var e=this.getPointerById(t.buttonId),n=i(i({},t),{button:e,direction:(new u.Vector3).copyFrom(t.direction),origin:(new u.Vector3).copyFrom(t.origin),hit:void 0}),o=t.hit?i(i({},t.hit),{hitPoint:(new u.Vector3).copyFrom(t.hit.hitPoint),normal:(new u.Vector3).copyFrom(t.hit.normal),worldNormal:(new u.Vector3).copyFrom(t.hit.worldNormal)}):void 0;if(t.type===p.InputEventType.DOWN){this.internalState[e].BUTTON_DOWN=!0;for(var r=0;r<this.subscriptions[e].BUTTON_DOWN.length;r++){(s=this.subscriptions[e].BUTTON_DOWN[r]).useRaycast?n.hit=o:n.hit=void 0,s.fn(n)}if(o&&o.entityId&&l.DisposableComponent.engine)(c=(a=l.DisposableComponent.engine.entities[o.entityId])&&a.getComponentOrNull(h))&&(n.hit=o,c.callback(n))}else{this.internalState[e].BUTTON_DOWN=!1;for(r=0;r<this.subscriptions[e].BUTTON_UP.length;r++){var s;(s=this.subscriptions[e].BUTTON_UP[r]).useRaycast?n.hit=o:n.hit=void 0,s.fn(n)}var a,c;if(o&&o.entityId&&l.DisposableComponent.engine)(c=(a=l.DisposableComponent.engine.entities[o.entityId])&&a.getComponentOrNull(d))&&(n.hit=o,c.callback(n))}},t.prototype.getSubscriptionId=function(t,e,n){for(var o=0;o<this.subscriptions[e][t].length;o++)if(this.subscriptions[e][t][o].fn===n)return o;return-1},t.prototype.getPointerById=function(t){return 0===t?a.POINTER:1===t?a.PRIMARY:a.SECONDARY},t}();e.Input=y},function(t,e,n){\"use strict\";var o=this&&this.__read||function(t,e){var n=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(o=i.next()).done;)s.push(o.value)}catch(t){r={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}return s},r=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(o(arguments[e]));return t};Object.defineProperty(e,\"__esModule\",{value:!0}),e.Engine=void 0;var i=n(7),s=n(0),a=n(8),p=n(32),u=n(1),l=n(12),c=function(){function t(t){this.eventManager=new a.EventManager,this.systems=[],this.entityLists={},this.addedSystems=[],this._entities={},this._disposableComponents={},this._componentGroups={},this.simpleSystems=[],this.eventManager.addListener(i.ComponentAdded,this,this.componentAddedHandler),this.eventManager.addListener(i.ComponentRemoved,this,this.componentRemovedHandler),this.rootEntity=t,this.firstPersonCameraEntity=new l.Entity,this.firstPersonCameraEntity.uuid=\"FirstPersonCameraEntityReference\",this.addEntity(this.firstPersonCameraEntity),this.avatarEntity=new l.Entity,this.avatarEntity.uuid=\"AvatarEntityReference\",this.addEntity(this.avatarEntity)}return Object.defineProperty(t.prototype,\"entities\",{get:function(){return this._entities},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"disposableComponents\",{get:function(){return this._disposableComponents},enumerable:!1,configurable:!0}),t.prototype.addEntity=function(t){var e=t.getParent();if(t.isAddedToEngine())return t;for(var n in t.eventManager=this.eventManager,t.engine=this,this._entities[t.uuid]=t,this.checkRequirementsAndAdd(t),e?e.isAddedToEngine()||e===this.rootEntity||u.log(\"Engine: warning, added an entity with a parent not present in the engine. Parent id: \"+e.uuid):t.setParent(this.rootEntity),t.alive=!0,t.children){var o=t.children[n];o&&(o.isAddedToEngine()||this.addEntity(o))}return t},t.prototype.removeEntity=function(t){var e=t.uuid;if(t.isAddedToEngine()){for(var n in t.components){var o=this._componentGroups[n];if(o)for(var r in o)o[r].removeEntity(t);delete this.entityLists[n][e]}for(var i=0;i<this.simpleSystems.length;i++){var s=this.simpleSystems[i];s.onRemoveEntity&&s.onRemoveEntity(t)}for(var i in t.children){var a=t.children[i];a&&this.removeEntity(a)}return t.alive=!1,t.eventManager=null,delete this._entities[e],!0}for(var n in u.log(\"Engine: Trying to remove non existent entity from engine.\"),t.isAddedToEngine()?u.log(\"Engine: Entity id: \"+e):u.log('Engine: Entity \"'+t.uuid+'\" has not been added to any engine yet.'),u.log(\"Engine: Entity's components:\"),t.components)u.log(n);return!1},t.prototype.addSystem=function(t,e){if(void 0===e&&(e=0),-1!==this.addedSystems.indexOf(t))return u.log(\"Engine: Trying to add a system that is already added. Aborting\"),t;if(this.systems.length>0)for(var n=0;n<this.systems.length;n++){var o=this.systems[n],r=n===this.systems.length-1;if(o.priority>e){this.addedSystems.push(t),this.systems.splice(n,0,{system:t,priority:e});break}if(r){this.addedSystems.push(t),this.systems.splice(n+1,0,{system:t,priority:e});break}}else this.addedSystems.push(t),this.systems.splice(1,0,{system:t,priority:e});return this.registerSystem(t),t},t.prototype.removeSystem=function(t){var e=this.addedSystems.indexOf(t);if(-1!==e){t.active=!1,t.deactivate&&t.deactivate(),this.addedSystems.splice(e,1);for(var n=0;n<this.systems.length;n++){this.systems[n].system===t&&this.systems.splice(n,1)}return!0}return!1},t.prototype.update=function(t){for(var e in this.systems){var n=this.systems[e].system;if(n.active&&n.update)try{n.update(t)}catch(t){u.error(t)}}return this},t.prototype.getEntitiesWithComponent=function(t){var e=\"string\"==typeof t?t:s.getComponentName(t);return e in this.entityLists?this.entityLists[e]:this.entityLists[e]={}},t.prototype.registerComponent=function(t){var e=s.getComponentId(t),n=s.getComponentName(t),o=s.getComponentClassId(t);this._disposableComponents[e]=t,null!==o&&(this.eventManager.fireEvent(new s.DisposableComponentCreated(e,n,o)),this.eventManager.fireEvent(new s.DisposableComponentUpdated(e,t)))},t.prototype.disposeComponent=function(t){var e=s.getComponentId(t);return delete this._disposableComponents[e]&&(this.eventManager.fireEvent(new s.DisposableComponentRemoved(e)),t.onDispose&&t.onDispose(),!0)},t.prototype.updateComponent=function(t){this.eventManager.fireEvent(new s.DisposableComponentUpdated(s.getComponentId(t),t))},t.prototype.getComponentGroup=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=void 0;if(t.length>0&&(c=this._componentGroups[s.getComponentName(t[0])]))for(var o=t.slice(),i=0;i<c.length;i++){var a=c[i];if(o.length===a.requires.length){for(var u=0;u<o.length&&-1!==a.requires.indexOf(o[u]);u++)u===o.length-1&&(n=a);if(n)break}}if(n)return n;(n=new(p.ComponentGroup.bind.apply(p.ComponentGroup,r([void 0],t)))).active=!0;var l=n.requiresNames;for(i=0;i<l.length;i++){var c,h=l[i];(c=this._componentGroups[h])||(this._componentGroups[h]=c=[]),-1===c.indexOf(n)&&c.push(n)}for(var d in this._entities)this.checkRequirements(this._entities[d],n);return n},t.prototype.removeComponentGroup=function(t){if(t.active){t.active=!1;for(var e=t.requiresNames,n=0;n<e.length;n++){var o=e[n],r=this._componentGroups[o];if(r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}return!0}return!1},t.prototype.registerSystem=function(t){t.active=!0,t.activate&&t.activate(this),this.simpleSystems.push(t)},t.prototype.checkRequirementsAndAdd=function(t){if(t.isAddedToEngine()){for(var e in t.components){e in this.entityLists||(this.entityLists[e]={}),this.entityLists[e][t.uuid]=t;var n=this._componentGroups[e];if(n)for(var o in n)this.checkRequirements(t,n[o])}for(var r=0;r<this.simpleSystems.length;r++){var i=this.simpleSystems[r];i.onAddEntity&&i.onAddEntity(t)}}},t.prototype.checkRequirements=function(t,e){e.meetsRequirements(t)?e.hasEntity(t)||e.addEntity(t):e.hasEntity(t)&&e.removeEntity(t)},t.prototype.componentAddedHandler=function(t){var e,n=t.entity,o=t.componentName;if(n.isAddedToEngine()){this.entityLists[o]?this.entityLists[o][n.uuid]=n:this.entityLists[o]=((e={})[n.uuid]=n,e);var r=this._componentGroups[o];if(r)for(var i in r)this.checkRequirements(n,r[i])}},t.prototype.componentRemovedHandler=function(t){var e=t.entity,n=t.componentName;if(e.isAddedToEngine()){delete this.entityLists[n][e.uuid];var o=this._componentGroups[n];if(o)for(var r in o)this.checkRequirements(e,o[r])}},t}();e.Engine=c},function(t,e,n){\"use strict\";var o;Object.defineProperty(e,\"__esModule\",{value:!0}),e.UIValue=e.UIValueType=void 0,function(t){t[t.PERCENT=0]=\"PERCENT\",t[t.PIXELS=1]=\"PIXELS\"}(o=e.UIValueType||(e.UIValueType={}));var r=function(){function t(t){if(this.type=o.PIXELS,\"string\"==typeof t){var e=t;e.indexOf(\"px\")>-1?this.type=o.PIXELS:e.indexOf(\"%\")>-1&&(this.type=o.PERCENT),this.value=parseFloat(e)}else this.value=t}return t.prototype.toString=function(){var t=this.value.toString();return this.type===o.PERCENT?t+=\"%\":t+=\"px\",t},t}();e.UIValue=r},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.executeTask=void 0;var o=n(1),r=Promise.resolve().then.bind(Promise.resolve());e.executeTask=function(t){var e=r(t);return e.isComplete=!1,e.then((function(t){e.isComplete=!0,e.result=t,e.didFail=!1})).catch((function(t){e.isComplete=!0,e.error=t,e.didFail=!0,o.error(\"executeTask: FAILED \"+t.toString(),t)})),e}},function(t,e,n){\"use strict\";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{p(o.next(t))}catch(t){i(t)}}function a(t){try{p(o.throw(t))}catch(t){i(t)}}function p(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}p((o=o.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=s.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},i=this&&this.__values||function(t){var e=\"function\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],o=0;if(n)return n.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&o>=t.length&&(t=void 0),{value:t&&t[o++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")};Object.defineProperty(e,\"__esModule\",{value:!0}),e.Observable=e.MultiObserver=e.Observer=e.ObserverEventState=void 0;var s=n(19),a=function(){function t(t,e,n,o){void 0===e&&(e=!1),this.initalize(t,e,n,o)}return t.prototype.initalize=function(t,e,n,o){return void 0===e&&(e=!1),this.mask=t,this.skipNextObservers=e,this.target=n,this.currentTarget=o,this},t}();e.ObserverEventState=a;var p=function(t,e,n){void 0===n&&(n=null),this.callback=t,this.mask=e,this.scope=n,this.unregisterOnNextCall=!1,this._willBeUnregistered=!1};e.Observer=p;var u=function(){function t(){this._observers=null,this._observables=null}return t.Watch=function(e,n,o,r){var s,a;void 0===o&&(o=-1),void 0===r&&(r=null);var p=new t;p._observers=new Array,p._observables=e;try{for(var u=i(e),l=u.next();!l.done;l=u.next()){var c=l.value.add(n,o,!1,r);c&&p._observers.push(c)}}catch(t){s={error:t}}finally{try{l&&!l.done&&(a=u.return)&&a.call(u)}finally{if(s)throw s.error}}return p},t.prototype.dispose=function(){if(this._observers&&this._observables)for(var t=0;t<this._observers.length;t++)this._observables[t].remove(this._observers[t]);this._observers=null,this._observables=null},t}();e.MultiObserver=u;var l=function(){function t(t){this._observers=new Array,this._onObserverAdded=null,this._eventState=new a(0),t&&(this._onObserverAdded=t)}return t.prototype.add=function(t,e,n,o,r){if(void 0===e&&(e=-1),void 0===n&&(n=!1),void 0===o&&(o=null),void 0===r&&(r=!1),!t)return null;var i=new p(t,e,o);return i.unregisterOnNextCall=r,n?this._observers.unshift(i):this._observers.push(i),this._onObserverAdded&&this._onObserverAdded(i),i},t.prototype.addOnce=function(t){return this.add(t,void 0,void 0,void 0,!0)},t.prototype.remove=function(t){return!!t&&(-1!==this._observers.indexOf(t)&&(this._deferUnregister(t),!0))},t.prototype.removeCallback=function(t,e){for(var n=0;n<this._observers.length;n++)if(this._observers[n].callback===t&&(!e||e===this._observers[n].scope))return this._deferUnregister(this._observers[n]),!0;return!1},t.prototype.notifyObservers=function(t,e,n,o){var r,s;if(void 0===e&&(e=-1),!this._observers.length)return!0;var a=this._eventState;a.mask=e,a.target=n,a.currentTarget=o,a.skipNextObservers=!1,a.lastReturnValue=t;try{for(var p=i(this._observers),u=p.next();!u.done;u=p.next()){var l=u.value;if(!l._willBeUnregistered&&(l.mask&e&&(l.scope?a.lastReturnValue=l.callback.apply(l.scope,[t,a]):a.lastReturnValue=l.callback(t,a),l.unregisterOnNextCall&&this._deferUnregister(l)),a.skipNextObservers))return!1}}catch(t){r={error:t}}finally{try{u&&!u.done&&(s=p.return)&&s.call(p)}finally{if(r)throw r.error}}return!0},t.prototype.notifyObserversWithPromise=function(t,e,n,o){var r=this;void 0===e&&(e=-1);var i=Promise.resolve(t);if(!this._observers.length)return i;var s=this._eventState;return s.mask=e,s.target=n,s.currentTarget=o,s.skipNextObservers=!1,this._observers.forEach((function(n){s.skipNextObservers||n._willBeUnregistered||n.mask&e&&(i=n.scope?i.then((function(e){return s.lastReturnValue=e,n.callback.apply(n.scope,[t,s])})):i.then((function(e){return s.lastReturnValue=e,n.callback(t,s)})),n.unregisterOnNextCall&&r._deferUnregister(n))})),i.then((function(){return t}))},t.prototype.notifyObserver=function(t,e,n){void 0===n&&(n=-1);var o=this._eventState;o.mask=n,o.skipNextObservers=!1,t.callback(e,o)},t.prototype.hasObservers=function(){return this._observers.length>0},t.prototype.clear=function(){this._observers=new Array,this._onObserverAdded=null},t.prototype.clone=function(){var e=new t;return e._observers=this._observers.slice(0),e},t.prototype.hasSpecificMask=function(t){var e,n;void 0===t&&(t=-1);try{for(var o=i(this._observers),r=o.next();!r.done;r=o.next()){var s=r.value;if(s.mask&t||s.mask===t)return!0}}catch(t){e={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return!1},t.prototype._deferUnregister=function(t){var e=this;t.unregisterOnNextCall=!1,t._willBeUnregistered=!0,s.executeTask((function(){return o(e,void 0,void 0,(function(){return r(this,(function(e){return[2,this._remove(t)]}))}))}))},t.prototype._remove=function(t){if(!t)return!1;var e=this._observers.indexOf(t);return-1!==e&&(this._observers.splice(e,1),!0)},t}();e.Observable=l},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Vector4=void 0;var o=n(2),r=n(6),i=n(3),s=function(){function t(t,e,n,o){this.x=t,this.y=e,this.z=n,this.w=o}return t.Add=function(e,n){return new t(e.x,e.y,e.z,e.w).addInPlace(n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromArrayToRef=function(t,e,n){n.x=t[e],n.y=t[e+1],n.z=t[e+2],n.w=t[e+3]},t.FromFloatArrayToRef=function(e,n,o){t.FromArrayToRef(e,n,o)},t.FromFloatsToRef=function(t,e,n,o,r){r.x=t,r.y=e,r.z=n,r.w=o},t.Zero=function(){return new t(0,0,0,0)},t.One=function(){return new t(1,1,1,1)},t.Normalize=function(e){var n=t.Zero();return t.NormalizeToRef(e,n),n},t.NormalizeToRef=function(t,e){e.copyFrom(t),e.normalize()},t.Minimize=function(e,n){var o=new t(e.x,e.y,e.z,e.w);return o.minimizeInPlace(n),o},t.Maximize=function(e,n){var o=new t(e.x,e.y,e.z,e.w);return o.maximizeInPlace(n),o},t.Distance=function(e,n){return Math.sqrt(t.DistanceSquared(e,n))},t.DistanceSquared=function(t,e){var n=t.x-e.x,o=t.y-e.y,r=t.z-e.z,i=t.w-e.w;return n*n+o*o+r*r+i*i},t.Center=function(e,n){var o=t.Add(e,n);return o.scaleInPlace(.5),o},t.TransformNormal=function(e,n){var o=t.Zero();return t.TransformNormalToRef(e,n,o),o},t.TransformNormalToRef=function(t,e,n){var o=e.m,r=t.x*o[0]+t.y*o[4]+t.z*o[8],i=t.x*o[1]+t.y*o[5]+t.z*o[9],s=t.x*o[2]+t.y*o[6]+t.z*o[10];n.x=r,n.y=i,n.z=s,n.w=t.w},t.TransformNormalFromFloatsToRef=function(t,e,n,o,r,i){var s=r.m;i.x=t*s[0]+e*s[4]+n*s[8],i.y=t*s[1]+e*s[5]+n*s[9],i.z=t*s[2]+e*s[6]+n*s[10],i.w=o},t.prototype.toString=function(){return\"{X: \"+this.x+\" Y:\"+this.y+\" Z:\"+this.z+\" W:\"+this.w+\"}\"},t.prototype.getClassName=function(){return\"Vector4\"},t.prototype.getHashCode=function(){var t=this.x||0;return t=397*(t=397*(t=397*t^(this.y||0))^(this.z||0))^(this.w||0)},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,this},t.prototype.addInPlace=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.addToRef=function(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e.w=this.w+t.w,this},t.prototype.subtractInPlace=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},t.prototype.subtractToRef=function(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e.w=this.w-t.w,this},t.prototype.subtractFromFloats=function(e,n,o,r){return new t(this.x-e,this.y-n,this.z-o,this.w-r)},t.prototype.subtractFromFloatsToRef=function(t,e,n,o,r){return r.x=this.x-t,r.y=this.y-e,r.z=this.z-n,r.w=this.w-o,this},t.prototype.negate=function(){return new t(-this.x,-this.y,-this.z,-this.w)},t.prototype.scaleInPlace=function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},t.prototype.scale=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.scaleToRef=function(t,e){return e.x=this.x*t,e.y=this.y*t,e.z=this.z*t,e.w=this.w*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.x+=this.x*t,e.y+=this.y*t,e.z+=this.z*t,e.w+=this.w*t,this},t.prototype.equals=function(t){return t&&this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w},t.prototype.equalsWithEpsilon=function(t,e){return void 0===e&&(e=o.Epsilon),t&&r.Scalar.WithinEpsilon(this.x,t.x,e)&&r.Scalar.WithinEpsilon(this.y,t.y,e)&&r.Scalar.WithinEpsilon(this.z,t.z,e)&&r.Scalar.WithinEpsilon(this.w,t.w,e)},t.prototype.equalsToFloats=function(t,e,n,o){return this.x===t&&this.y===e&&this.z===n&&this.w===o},t.prototype.multiplyInPlace=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this},t.prototype.multiply=function(e){return new t(this.x*e.x,this.y*e.y,this.z*e.z,this.w*e.w)},t.prototype.multiplyToRef=function(t,e){return e.x=this.x*t.x,e.y=this.y*t.y,e.z=this.z*t.z,e.w=this.w*t.w,this},t.prototype.multiplyByFloats=function(e,n,o,r){return new t(this.x*e,this.y*n,this.z*o,this.w*r)},t.prototype.divide=function(e){return new t(this.x/e.x,this.y/e.y,this.z/e.z,this.w/e.w)},t.prototype.divideToRef=function(t,e){return e.x=this.x/t.x,e.y=this.y/t.y,e.z=this.z/t.z,e.w=this.w/t.w,this},t.prototype.divideInPlace=function(t){return this.divideToRef(t,this)},t.prototype.minimizeInPlace=function(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this},t.prototype.maximizeInPlace=function(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this},t.prototype.floor=function(){return new t(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z),Math.floor(this.w))},t.prototype.fract=function(){return new t(this.x-Math.floor(this.x),this.y-Math.floor(this.y),this.z-Math.floor(this.z),this.w-Math.floor(this.w))},t.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},t.prototype.lengthSquared=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t.prototype.normalize=function(){var t=this.length();return 0===t?this:this.scaleInPlace(1/t)},t.prototype.toVector3=function(){return new i.Vector3(this.x,this.y,this.z)},t.prototype.clone=function(){return new t(this.x,this.y,this.z,this.w)},t.prototype.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.x=t,this.y=e,this.z=n,this.w=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.setAll=function(t){return this.x=this.y=this.z=this.w=t,this},t}();e.Vector4=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Angle=void 0;var o=function(){function t(t){this._radians=t,this._radians<0&&(this._radians+=2*Math.PI)}return t.BetweenTwoPoints=function(e,n){var o=n.subtract(e);return new t(Math.atan2(o.y,o.x))},t.FromRadians=function(e){return new t(e)},t.FromDegrees=function(e){return new t(e*Math.PI/180)},t.prototype.degrees=function(){return 180*this._radians/Math.PI},t.prototype.radians=function(){return this._radians},t}();e.Angle=o},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Arc2=void 0;var o=n(22),r=n(15),i=n(2),s=function(t,e,n){this.startPoint=t,this.midPoint=e,this.endPoint=n;var s=Math.pow(e.x,2)+Math.pow(e.y,2),a=(Math.pow(t.x,2)+Math.pow(t.y,2)-s)/2,p=(s-Math.pow(n.x,2)-Math.pow(n.y,2))/2,u=(t.x-e.x)*(e.y-n.y)-(e.x-n.x)*(t.y-e.y);this.centerPoint=new r.Vector2((a*(e.y-n.y)-p*(t.y-e.y))/u,((t.x-e.x)*p-(e.x-n.x)*a)/u),this.radius=this.centerPoint.subtract(this.startPoint).length(),this.startAngle=o.Angle.BetweenTwoPoints(this.centerPoint,this.startPoint);var l=this.startAngle.degrees(),c=o.Angle.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),h=o.Angle.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();c-l>180&&(c-=360),c-l<-180&&(c+=360),h-c>180&&(h-=360),h-c<-180&&(h+=360),this.orientation=c-l<0?i.Orientation.CW:i.Orientation.CCW,this.angle=o.Angle.FromDegrees(this.orientation===i.Orientation.CW?l-h:h-l)};e.Arc2=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Color4=void 0;var o=n(6),r=n(2),i=function(){function t(t,e,n,o){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===o&&(o=1),this.r=t,this.g=e,this.b=n,this.a=o}return t.FromHexString=function(e){if(\"#\"!==e.substring(0,1)||9!==e.length)return new t(0,0,0,0);var n=parseInt(e.substring(1,3),16),o=parseInt(e.substring(3,5),16),r=parseInt(e.substring(5,7),16),i=parseInt(e.substring(7,9),16);return t.FromInts(n,o,r,i)},t.Lerp=function(e,n,o){var r=new t(0,0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.r=t.r+(e.r-t.r)*n,o.g=t.g+(e.g-t.g)*n,o.b=t.b+(e.b-t.b)*n,o.a=t.a+(e.a-t.a)*n},t.Red=function(){return new t(1,0,0,1)},t.Green=function(){return new t(0,1,0,1)},t.Blue=function(){return new t(0,0,1,1)},t.Black=function(){return new t(0,0,0,1)},t.White=function(){return new t(1,1,1,1)},t.Purple=function(){return new t(.5,0,.5,1)},t.Magenta=function(){return new t(1,0,1,1)},t.Yellow=function(){return new t(1,1,0,1)},t.Gray=function(){return new t(.5,.5,.5,1)},t.Teal=function(){return new t(0,1,1,1)},t.Clear=function(){return new t(0,0,0,0)},t.FromColor3=function(e,n){return void 0===n&&(n=1),new t(e.r,e.g,e.b,n)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2],e[n+3])},t.FromInts=function(e,n,o,r){return new t(e/255,n/255,o/255,r/255)},t.CheckColors4=function(t,e){if(t.length===3*e){for(var n=[],o=0;o<t.length;o+=3){var r=o/3*4;n[r]=t[o],n[r+1]=t[o+1],n[r+2]=t[o+2],n[r+3]=1}return n}return t},t.prototype.addInPlace=function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this.a+=t.a,this},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t[e+3]=this.a,this},t.prototype.add=function(e){return new t(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)},t.prototype.subtract=function(e){return new t(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)},t.prototype.subtractToRef=function(t,e){return e.r=this.r-t.r,e.g=this.g-t.g,e.b=this.b-t.b,e.a=this.a-t.a,this},t.prototype.scale=function(e){return new t(this.r*e,this.g*e,this.b*e,this.a*e)},t.prototype.scaleToRef=function(t,e){return e.r=this.r*t,e.g=this.g*t,e.b=this.b*t,e.a=this.a*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.r+=this.r*t,e.g+=this.g*t,e.b+=this.b*t,e.a+=this.a*t,this},t.prototype.clampToRef=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=1),n.r=o.Scalar.Clamp(this.r,t,e),n.g=o.Scalar.Clamp(this.g,t,e),n.b=o.Scalar.Clamp(this.b,t,e),n.a=o.Scalar.Clamp(this.a,t,e),this},t.prototype.multiply=function(e){return new t(this.r*e.r,this.g*e.g,this.b*e.b,this.a*e.a)},t.prototype.multiplyToRef=function(t,e){return e.r=this.r*t.r,e.g=this.g*t.g,e.b=this.b*t.b,e.a=this.a*t.a,e},t.prototype.toString=function(){return\"{R: \"+this.r+\" G:\"+this.g+\" B:\"+this.b+\" A:\"+this.a+\"}\"},t.prototype.getClassName=function(){return\"Color4\"},t.prototype.getHashCode=function(){var t=this.r||0;return t=397*(t=397*(t=397*t^(this.g||0))^(this.b||0))^(this.a||0)},t.prototype.clone=function(){return new t(this.r,this.g,this.b,this.a)},t.prototype.copyFrom=function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this},t.prototype.copyFromFloats=function(t,e,n,o){return this.r=t,this.g=e,this.b=n,this.a=o,this},t.prototype.set=function(t,e,n,o){return this.copyFromFloats(t,e,n,o)},t.prototype.toHexString=function(){var t=255*this.r|0,e=255*this.g|0,n=255*this.b|0,r=255*this.a|0;return\"#\"+o.Scalar.ToHex(t)+o.Scalar.ToHex(e)+o.Scalar.ToHex(n)+o.Scalar.ToHex(r)},t.prototype.toLinearSpace=function(){var e=new t;return this.toLinearSpaceToRef(e),e},t.prototype.toLinearSpaceToRef=function(t){return t.r=Math.pow(this.r,r.ToLinearSpace),t.g=Math.pow(this.g,r.ToLinearSpace),t.b=Math.pow(this.b,r.ToLinearSpace),t.a=this.a,this},t.prototype.toGammaSpace=function(){var e=new t;return this.toGammaSpaceToRef(e),e},t.prototype.toGammaSpaceToRef=function(t){return t.r=Math.pow(this.r,r.ToGammaSpace),t.g=Math.pow(this.g,r.ToGammaSpace),t.b=Math.pow(this.b,r.ToGammaSpace),t.a=this.a,this},t}();e.Color4=i},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Plane=void 0;var o=n(3),r=n(11),i=n(9),s=function(){function t(t,e,n,r){this.normal=new o.Vector3(t,e,n),this.d=r}return t.FromArray=function(e){return new t(e[0],e[1],e[2],e[3])},t.FromPoints=function(e,n,o){var r=new t(0,0,0,0);return r.copyFromPoints(e,n,o),r},t.FromPositionAndNormal=function(e,n){var o=new t(0,0,0,0);return n.normalize(),o.normal=n,o.d=-(n.x*e.x+n.y*e.y+n.z*e.z),o},t.SignedDistanceToPlaneFromPositionAndNormal=function(t,e,n){var r=-(e.x*t.x+e.y*t.y+e.z*t.z);return o.Vector3.Dot(n,e)+r},t.prototype.asArray=function(){return[this.normal.x,this.normal.y,this.normal.z,this.d]},t.prototype.clone=function(){return new t(this.normal.x,this.normal.y,this.normal.z,this.d)},t.prototype.getClassName=function(){return\"Plane\"},t.prototype.getHashCode=function(){var t=this.normal.getHashCode();return t=397*t^(this.d||0)},t.prototype.normalize=function(){var t=Math.sqrt(this.normal.x*this.normal.x+this.normal.y*this.normal.y+this.normal.z*this.normal.z),e=0;return 0!==t&&(e=1/t),this.normal.x*=e,this.normal.y*=e,this.normal.z*=e,this.d*=e,this},t.prototype.transform=function(e){var n=i.MathTmp.Matrix[0];r.Matrix.TransposeToRef(e,n);var o=n.m,s=this.normal.x,a=this.normal.y,p=this.normal.z,u=this.d;return new t(s*o[0]+a*o[1]+p*o[2]+u*o[3],s*o[4]+a*o[5]+p*o[6]+u*o[7],s*o[8]+a*o[9]+p*o[10]+u*o[11],s*o[12]+a*o[13]+p*o[14]+u*o[15])},t.prototype.dotCoordinate=function(t){return this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.d},t.prototype.copyFromPoints=function(t,e,n){var o,r=e.x-t.x,i=e.y-t.y,s=e.z-t.z,a=n.x-t.x,p=n.y-t.y,u=n.z-t.z,l=i*u-s*p,c=s*a-r*u,h=r*p-i*a,d=Math.sqrt(l*l+c*c+h*h);return o=0!==d?1/d:0,this.normal.x=l*o,this.normal.y=c*o,this.normal.z=h*o,this.d=-(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z),this},t.prototype.isFrontFacingTo=function(t,e){return o.Vector3.Dot(this.normal,t)<=e},t.prototype.signedDistanceTo=function(t){return o.Vector3.Dot(t,this.normal)+this.d},t}();e.Plane=s},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},s=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.AnimationState=void 0;var a=n(0),p=n(1),u={looping:!0,speed:1,weight:1},l=function(t){function e(e,n){void 0===n&&(n=u);var o=t.call(this)||this;return o.isAnimationClip=!0,o.looping=u.looping,o.weight=u.weight,o.playing=!1,o.shouldReset=!1,o.speed=u.speed,o.name=p.newId(\"AnimClip\"),o.clip=e,o.setParams(i({},n)),o}return r(e,t),e.prototype.setParams=function(t){return this.looping=void 0!==t.looping?t.looping:this.looping,this.speed=t.speed||this.speed,this},e.prototype.toJSON=function(){var e=JSON.parse(JSON.stringify(t.prototype.toJSON.call(this)));return this.shouldReset&&(this.shouldReset=!1),e},e.prototype.play=function(){this.playing=!0},e.prototype.pause=function(){this.playing=!1},e.prototype.reset=function(){this.shouldReset=!0},e.prototype.stop=function(){this.reset(),this.pause()},s([a.ObservableComponent.readonly],e.prototype,\"clip\",void 0),s([a.ObservableComponent.field],e.prototype,\"looping\",void 0),s([a.ObservableComponent.field],e.prototype,\"weight\",void 0),s([a.ObservableComponent.field],e.prototype,\"playing\",void 0),s([a.ObservableComponent.field],e.prototype,\"shouldReset\",void 0),s([a.ObservableComponent.field],e.prototype,\"speed\",void 0),s([a.ObservableComponent.readonly],e.prototype,\"name\",void 0),e}(a.ObservableComponent);e.AnimationState=l},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.AVATAR_OBSERVABLE=e.InputEventType=void 0,function(t){t[t.DOWN=0]=\"DOWN\",t[t.UP=1]=\"UP\"}(e.InputEventType||(e.InputEventType={})),e.AVATAR_OBSERVABLE=\"AVATAR_OBSERVABLE\"},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.PhysicsCast=void 0;var o,r=n(5),i=n(1),s=n(29);!function(t){t.HitFirst=\"rqhf\",t.HitAll=\"rqha\"}(o||(o={}));var a=function(){function t(){this.queries={}}return Object.defineProperty(t,\"instance\",{get:function(){return t.ensureInstance(),t._instance},enumerable:!1,configurable:!0}),t.ensureInstance=function(){t._instance||(t._instance=new t)},t.prototype.getRayFromCamera=function(t){var e=s.Camera.instance.rotation,n=r.Matrix.Identity();e.toRotationMatrix(n);var o=r.Vector3.TransformCoordinates(r.Vector3.Forward(),n);return{origin:s.Camera.instance.position,direction:o,distance:t}},t.prototype.getRayFromPositions=function(t,e){var n=e.subtract(t),o=n.length();return{origin:t,direction:n.normalize(),distance:o}},t.prototype.hitFirst=function(t,e,n){var r=\"number\"==typeof n?o.HitFirst+n:i.uuid();this.queries[r]=e,dcl&&dcl.query(\"raycast\",{queryId:r,queryType:\"HitFirst\",ray:t})},t.prototype.hitAll=function(t,e,n){var r=\"number\"==typeof n?o.HitAll+n:i.uuid();this.queries[r]=e,dcl&&dcl.query(\"raycast\",{queryId:r,queryType:\"HitAll\",ray:t})},t.prototype.hitFirstAvatar=function(t,e){i.log(\"not implemented yet\")},t.prototype.hitAllAvatars=function(t,e){i.log(\"not implemented yet\")},t.prototype.handleRaycastHitFirstResponse=function(t){this.queries[t.payload.queryId](t.payload.payload),delete this.queries[t.payload.queryId]},t.prototype.handleRaycastHitAllResponse=function(t){this.queries[t.payload.queryId](t.payload.payload),delete this.queries[t.payload.queryId]},t}();e.PhysicsCast=a},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Camera=void 0;var o=n(5),r=function(){function t(){var t=this;this.position=new o.Vector3,this.rotation=new o.Quaternion,this.feetPosition=new o.Vector3,this.worldPosition=new o.Vector3,this.lastEventPosition={x:0,y:0,z:0},this.lastEventWorldPosition={x:0,y:0,z:0},this.lastEventRotation={x:0,y:0,z:0,w:1},this._playerHeight=1.6,\"undefined\"!=typeof dcl&&(dcl.subscribe(\"positionChanged\"),dcl.subscribe(\"rotationChanged\"),dcl.onEvent((function(e){switch(e.type){case\"positionChanged\":t.positionChanged(e.data);break;case\"rotationChanged\":t.rotationChanged(e.data)}}))),Object.defineProperty(this.position,\"x\",{get:function(){return t.lastEventPosition.x}}),Object.defineProperty(this.position,\"y\",{get:function(){return t.lastEventPosition.y}}),Object.defineProperty(this.position,\"z\",{get:function(){return t.lastEventPosition.z}}),Object.defineProperty(this.worldPosition,\"x\",{get:function(){return t.lastEventWorldPosition.x}}),Object.defineProperty(this.worldPosition,\"y\",{get:function(){return t.lastEventWorldPosition.y}}),Object.defineProperty(this.worldPosition,\"z\",{get:function(){return t.lastEventWorldPosition.z}}),Object.defineProperty(this.feetPosition,\"x\",{get:function(){return t.lastEventPosition.x}}),Object.defineProperty(this.feetPosition,\"y\",{get:function(){return t.lastEventPosition.y-t.playerHeight}}),Object.defineProperty(this.feetPosition,\"z\",{get:function(){return t.lastEventPosition.z}}),Object.defineProperty(this.rotation,\"x\",{get:function(){return t.lastEventRotation.x}}),Object.defineProperty(this.rotation,\"y\",{get:function(){return t.lastEventRotation.y}}),Object.defineProperty(this.rotation,\"z\",{get:function(){return t.lastEventRotation.z}}),Object.defineProperty(this.rotation,\"w\",{get:function(){return t.lastEventRotation.w}})}return Object.defineProperty(t,\"instance\",{get:function(){return t._instance||(t._instance=new t),t._instance},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"playerHeight\",{get:function(){return this._playerHeight},enumerable:!1,configurable:!0}),t.prototype.positionChanged=function(t){this.lastEventPosition=t.position,this.lastEventWorldPosition=t.cameraPosition,this._playerHeight=t.playerHeight},t.prototype.rotationChanged=function(t){this.lastEventRotation=t.quaternion},t}();e.Camera=r},function(t,e,n){\"use strict\";var o=this&&this.__createBinding||(Object.create?function(t,e,n,o){void 0===o&&(o=n),Object.defineProperty(t,o,{enumerable:!0,get:function(){return e[n]}})}:function(t,e,n,o){void 0===o&&(o=n),t[o]=e[n]}),r=this&&this.__exportStar||function(t,e){for(var n in t)\"default\"===n||Object.prototype.hasOwnProperty.call(e,n)||o(e,t,n)};Object.defineProperty(e,\"__esModule\",{value:!0}),e.engine=void 0,r(n(31),e),r(n(17),e),r(n(0),e),r(n(12),e),r(n(7),e),r(n(19),e),r(n(1),e),r(n(20),e),r(n(18),e),r(n(8),e),r(n(33),e);var i=n(34),s=n(17),a=new(n(12).Entity)(\"scene\");a.uuid=\"0\";var p=new s.Engine(a);e.engine=p,n(0).DisposableComponent.engine=p,\"undefined\"!=typeof dcl&&p.addSystem(new i.DecentralandSynchronizationSystem(dcl),1/0);var u=n(14);p.addSystem(u.uuidEventSystem),p.addSystem(u.pointerEventSystem),p.addSystem(u.raycastEventSystem),r(n(27),e),r(n(4),e),r(n(14),e),r(n(13),e),r(n(29),e),r(n(5),e),r(n(26),e),r(n(16),e),r(n(43),e),r(n(44),e),r(n(45),e),r(n(46),e),r(n(47),e),r(n(48),e),r(n(28),e)},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Attachable=void 0;var o=function(){function t(){}return t.AVATAR={getEntityRepresentation:function(t){return t.avatarEntity}},t.FIRST_PERSON_CAMERA={getEntityRepresentation:function(t){return t.firstPersonCameraEntity}},t}();e.Attachable=o},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.ComponentGroup=void 0;var o=n(0),r=function(){function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(this.entities=[],this.active=!1,this._requiresNames=[],!t)throw new Error(\"ComponentGroup: Could not load the requires list\");if(!(t instanceof Array))throw new Error(\"ComponentGroup: requires list is not an Array\");Object.defineProperty(this,\"requires\",{get:function(){return t.slice()}}),Object.defineProperty(this,\"requiresNames\",{get:function(){return this._requiresNames.slice()}});for(var n=function(e){var n=t[e],i=null;if(!n)throw new Error(\"ComponentGroup: the required component at location \"+e+\" is invalid\");try{i=o.getComponentName(n)}catch(t){throw new Error(\"ComponentGroup: the required component at location \"+e+\" is not registered as a @Component. Remember to provide the class of the component, not the name\")}if(r._requiresNames.some((function(t){return t===i})))throw new Error(\"ComponentGroup: the required component list has a repeated name \"+i);r._requiresNames.push(i)},r=this,i=0;i<t.length;i++)n(i)}return t.prototype.hasEntity=function(t){return!!t.isAddedToEngine()&&-1!==this.entities.indexOf(t)},t.prototype.addEntity=function(t){if(!t.isAddedToEngine())throw new TypeError(\"ComponentGroup: Cannot add a entity that is not added to the engine\");-1===this.entities.indexOf(t)&&this.entities.push(t)},t.prototype.removeEntity=function(t){var e=this.entities.indexOf(t);-1!==e&&this.entities.splice(e,1)},t.prototype.componentRemoved=function(t,e){-1!==this._requiresNames.indexOf(e)&&this.removeEntity(t)},t.prototype.meetsRequirements=function(t){for(var e=0;e<this._requiresNames.length;e++){if(!(this._requiresNames[e]in t.components))return!1}return!0},t}();e.ComponentGroup=r},function(t,e,n){\"use strict\";var o;Object.defineProperty(e,\"__esModule\",{value:!0}),e.teleportTo=void 0,e.teleportTo=function(t){var e,n;e=\"requestTeleport\",n=[t],void 0===o&&\"undefined\"!=typeof dcl&&(o=dcl.loadModule(\"@decentraland/UserActionModule\")),void 0!==o&&\"undefined\"!=typeof dcl&&o.then((function(t){dcl.callRpc(t.rpcHandle,e,n)}))}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.DecentralandSynchronizationSystem=void 0;var o=n(0),r=n(7),i=n(13),s=function(){function t(t){this.dcl=t,this.cachedComponents={}}return t.prototype.activate=function(t){var e=this;this.engine=t,t.eventManager.addListener(r.ComponentAdded,this,this.componentAdded),t.eventManager.addListener(r.ComponentRemoved,this,this.componentRemoved),t.eventManager.addListener(o.DisposableComponentCreated,this,this.disposableComponentCreated),t.eventManager.addListener(o.DisposableComponentRemoved,this,this.disposableComponentRemoved),t.eventManager.addListener(o.DisposableComponentUpdated,this,this.disposableComponentUpdated),t.eventManager.addListener(r.ParentChanged,this,this.parentChanged);var n=t.rootEntity.uuid;this.dcl.addEntity(n),this.dcl.onUpdate((function(n){t.update(n),e.presentEntities()})),this.dcl.onEvent((function(e){var n=e.data;switch(e.type){case\"uuidEvent\":t.eventManager.fireEvent(new i.UUIDEvent(n.uuid,n.payload));break;case\"raycastResponse\":(\"HitFirst\"===n.queryType||\"HitAll\"===n.queryType)&&t.eventManager.fireEvent(new i.RaycastResponse(n));break;case\"pointerEvent\":t.eventManager.fireEvent(new i.PointerEvent(n.payload))}}))},t.prototype.onAddEntity=function(t){if(t&&t.isAddedToEngine()){var e=t.uuid,n=t.getParent();for(var r in this.dcl.addEntity(e),n&&this.dcl.setParent(e,n.uuid),this.cachedComponents[e]={},t.components){var i=t.components[r],s=o.getComponentClassId(i);if(null!==s)if(o.isDisposableComponent(i))this.dcl.attachEntityComponent(t.uuid,r,o.getComponentId(i));else{var a=JSON.stringify(i);this.dcl.updateEntityComponent(e,r,s,a),this.cachedComponents[e][r]=a}}}},t.prototype.onRemoveEntity=function(t){if(t.isAddedToEngine()){var e=t.uuid;this.dcl.removeEntity(e),delete this.cachedComponents[e]}},t.prototype.presentEntities=function(){for(var t in this.engine.entities){var e=this.engine.entities[t];for(var n in e.components){var r=e.components[n],i=o.getComponentClassId(r);if(null!==i&&!o.isDisposableComponent(r)){var s=this.getJsonIfDirty(e.uuid,n,r);s&&(this.dcl.updateEntityComponent(e.uuid,n,i,s),this.clearDirty(e.uuid,n,r,s))}}}for(var a in this.engine.disposableComponents){(r=this.engine.disposableComponents[a])instanceof o.ObservableComponent&&r.dirty&&(this.dcl.componentUpdated(a,JSON.stringify(r)),r.dirty=!1)}},t.prototype.componentAdded=function(t){if(t.entity.isAddedToEngine()){var e=t.entity.components[t.componentName];if(o.isDisposableComponent(e))this.dcl.attachEntityComponent(t.entity.uuid,t.componentName,o.getComponentId(e));else if(null!==t.classId){var n=JSON.stringify(e);this.dcl.updateEntityComponent(t.entity.uuid,t.componentName,t.classId,n),this.cachedComponents[t.entity.uuid][t.componentName]=n}}},t.prototype.componentRemoved=function(t){t.entity.isAddedToEngine()&&(this.dcl.removeEntityComponent(t.entity.uuid,t.componentName),delete this.cachedComponents[t.entity.uuid][t.componentName])},t.prototype.disposableComponentCreated=function(t){this.dcl.componentCreated(t.componentId,t.componentName,t.classId)},t.prototype.disposableComponentRemoved=function(t){this.dcl.componentDisposed(t.componentId)},t.prototype.disposableComponentUpdated=function(t){this.dcl.componentUpdated(t.componentId,JSON.stringify(t.component))},t.prototype.parentChanged=function(t){this.dcl.setParent(t.entity.uuid,t.parent?t.parent.uuid:\"0\")},t.prototype.getJsonIfDirty=function(t,e,n){var o=JSON.stringify(n);return o!==this.cachedComponents[t][e]&&o},t.prototype.clearDirty=function(t,e,n,o){this.cachedComponents[t][e]=o},t}();e.DecentralandSynchronizationSystem=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Axis=void 0;var o=n(3),r=function(){function t(){}return t.X=new o.Vector3(1,0,0),t.Y=new o.Vector3(0,1,0),t.Z=new o.Vector3(0,0,1),t}();e.Axis=r},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.BezierCurve=void 0;var o=function(){function t(){}return t.Interpolate=function(t,e,n,o,r){for(var i=1-3*o+3*e,s=3*o-6*e,a=3*e,p=t,u=0;u<5;u++){var l=p*p;p-=(i*(l*p)+s*l+a*p-t)*(1/(3*i*l+2*s*p+a)),p=Math.min(1,Math.max(0,p))}return 3*Math.pow(1-p,2)*p*n+3*(1-p)*Math.pow(p,2)*r+Math.pow(p,3)},t}();e.BezierCurve=o},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Color3=void 0;var o=n(2),r=n(24),i=n(6),s=function(){function t(t,e,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),this.r=t,this.g=e,this.b=n}return t.FromHexString=function(e){if(\"#\"!==e.substring(0,1)||7!==e.length)return new t(0,0,0);var n=parseInt(e.substring(1,3),16),o=parseInt(e.substring(3,5),16),r=parseInt(e.substring(5,7),16);return t.FromInts(n,o,r)},t.FromArray=function(e,n){return void 0===n&&(n=0),new t(e[n],e[n+1],e[n+2])},t.FromInts=function(e,n,o){return new t(e/255,n/255,o/255)},t.Lerp=function(e,n,o){var r=new t(0,0,0);return t.LerpToRef(e,n,o,r),r},t.LerpToRef=function(t,e,n,o){o.r=t.r+(e.r-t.r)*n,o.g=t.g+(e.g-t.g)*n,o.b=t.b+(e.b-t.b)*n},t.Red=function(){return new t(1,0,0)},t.Green=function(){return new t(0,1,0)},t.Blue=function(){return new t(0,0,1)},t.Black=function(){return new t(0,0,0)},t.White=function(){return new t(1,1,1)},t.Purple=function(){return new t(.5,0,.5)},t.Magenta=function(){return new t(1,0,1)},t.Yellow=function(){return new t(1,1,0)},t.Gray=function(){return new t(.5,.5,.5)},t.Teal=function(){return new t(0,1,1)},t.Random=function(){return new t(Math.random(),Math.random(),Math.random())},t.prototype.toString=function(){return\"{R: \"+this.r+\" G:\"+this.g+\" B:\"+this.b+\"}\"},t.prototype.getClassName=function(){return\"Color3\"},t.prototype.getHashCode=function(){var t=this.r||0;return t=397*(t=397*t^(this.g||0))^(this.b||0)},t.prototype.toArray=function(t,e){return void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,this},t.prototype.toColor4=function(t){return void 0===t&&(t=1),new r.Color4(this.r,this.g,this.b,t)},t.prototype.asArray=function(){var t=new Array;return this.toArray(t,0),t},t.prototype.toLuminance=function(){return.3*this.r+.59*this.g+.11*this.b},t.prototype.multiply=function(e){return new t(this.r*e.r,this.g*e.g,this.b*e.b)},t.prototype.multiplyToRef=function(t,e){return e.r=this.r*t.r,e.g=this.g*t.g,e.b=this.b*t.b,this},t.prototype.equals=function(t){return t&&this.r===t.r&&this.g===t.g&&this.b===t.b},t.prototype.equalsFloats=function(t,e,n){return this.r===t&&this.g===e&&this.b===n},t.prototype.scale=function(e){return new t(this.r*e,this.g*e,this.b*e)},t.prototype.scaleToRef=function(t,e){return e.r=this.r*t,e.g=this.g*t,e.b=this.b*t,this},t.prototype.scaleAndAddToRef=function(t,e){return e.r+=this.r*t,e.g+=this.g*t,e.b+=this.b*t,this},t.prototype.clampToRef=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=1),n.r=i.Scalar.Clamp(this.r,t,e),n.g=i.Scalar.Clamp(this.g,t,e),n.b=i.Scalar.Clamp(this.b,t,e),this},t.prototype.add=function(e){return new t(this.r+e.r,this.g+e.g,this.b+e.b)},t.prototype.addToRef=function(t,e){return e.r=this.r+t.r,e.g=this.g+t.g,e.b=this.b+t.b,this},t.prototype.subtract=function(e){return new t(this.r-e.r,this.g-e.g,this.b-e.b)},t.prototype.subtractToRef=function(t,e){return e.r=this.r-t.r,e.g=this.g-t.g,e.b=this.b-t.b,this},t.prototype.clone=function(){return new t(this.r,this.g,this.b)},t.prototype.copyFrom=function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},t.prototype.copyFromFloats=function(t,e,n){return this.r=t,this.g=e,this.b=n,this},t.prototype.set=function(t,e,n){return this.copyFromFloats(t,e,n)},t.prototype.toHexString=function(){var t=255*this.r|0,e=255*this.g|0,n=255*this.b|0;return\"#\"+i.Scalar.ToHex(t)+i.Scalar.ToHex(e)+i.Scalar.ToHex(n)},t.prototype.toLinearSpace=function(){var e=new t;return this.toLinearSpaceToRef(e),e},t.prototype.toLinearSpaceToRef=function(t){return t.r=Math.pow(this.r,o.ToLinearSpace),t.g=Math.pow(this.g,o.ToLinearSpace),t.b=Math.pow(this.b,o.ToLinearSpace),this},t.prototype.toGammaSpace=function(){var e=new t;return this.toGammaSpaceToRef(e),e},t.prototype.toGammaSpaceToRef=function(t){return t.r=Math.pow(this.r,o.ToGammaSpace),t.g=Math.pow(this.g,o.ToGammaSpace),t.b=Math.pow(this.b,o.ToGammaSpace),this},t.prototype.toJSON=function(){return{r:this.r,g:this.g,b:this.b}},t}();e.Color3=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Curve3=void 0;var o=n(3),r=function(){function t(t){this._length=0,this._points=t,this._length=this._computeLength(t)}return t.CreateQuadraticBezier=function(e,n,r,i){i=i>2?i:3;for(var s=new Array,a=function(t,e,n,o){return(1-t)*(1-t)*e+2*t*(1-t)*n+t*t*o},p=0;p<=i;p++)s.push(new o.Vector3(a(p/i,e.x,n.x,r.x),a(p/i,e.y,n.y,r.y),a(p/i,e.z,n.z,r.z)));return new t(s)},t.CreateCubicBezier=function(e,n,r,i,s){s=s>3?s:4;for(var a=new Array,p=function(t,e,n,o,r){return(1-t)*(1-t)*(1-t)*e+3*t*(1-t)*(1-t)*n+3*t*t*(1-t)*o+t*t*t*r},u=0;u<=s;u++)a.push(new o.Vector3(p(u/s,e.x,n.x,r.x,i.x),p(u/s,e.y,n.y,r.y,i.y),p(u/s,e.z,n.z,r.z,i.z)));return new t(a)},t.CreateHermiteSpline=function(e,n,r,i,s){for(var a=new Array,p=1/s,u=0;u<=s;u++)a.push(o.Vector3.Hermite(e,n,r,i,u*p));return new t(a)},t.CreateCatmullRomSpline=function(e,n,r){var i=new Array,s=1/n,a=0;if(r){for(var p=e.length,u=0;u<p;u++){a=0;for(var l=0;l<n;l++)i.push(o.Vector3.CatmullRom(e[u%p],e[(u+1)%p],e[(u+2)%p],e[(u+3)%p],a)),a+=s}i.push(i[0])}else{var c=new Array;c.push(e[0].clone()),Array.prototype.push.apply(c,e),c.push(e[e.length-1].clone());u=0;for(u=0;u<c.length-3;u++){a=0;for(l=0;l<n;l++)i.push(o.Vector3.CatmullRom(c[u],c[u+1],c[u+2],c[u+3],a)),a+=s}u--,i.push(o.Vector3.CatmullRom(c[u],c[u+1],c[u+2],c[u+3],a))}return new t(i)},t.prototype.getPoints=function(){return this._points},t.prototype.length=function(){return this._length},t.prototype.continue=function(e){for(var n=this._points[this._points.length-1],o=this._points.slice(),r=e.getPoints(),i=1;i<r.length;i++)o.push(r[i].subtract(r[0]).add(n));return new t(o)},t.prototype._computeLength=function(t){for(var e=0,n=1;n<t.length;n++)e+=t[n].subtract(t[n-1]).length();return e},t}();e.Curve3=r},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Frustum=void 0;var o=n(25),r=function(){function t(){}return t.GetPlanes=function(e){for(var n=[],r=0;r<6;r++)n.push(new o.Plane(0,0,0,0));return t.GetPlanesToRef(e,n),n},t.GetNearPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[2],e.normal.y=n[7]+n[6],e.normal.z=n[11]+n[10],e.d=n[15]+n[14],e.normalize()},t.GetFarPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[2],e.normal.y=n[7]-n[6],e.normal.z=n[11]-n[10],e.d=n[15]-n[14],e.normalize()},t.GetLeftPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[0],e.normal.y=n[7]+n[4],e.normal.z=n[11]+n[8],e.d=n[15]+n[12],e.normalize()},t.GetRightPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[0],e.normal.y=n[7]-n[4],e.normal.z=n[11]-n[8],e.d=n[15]-n[12],e.normalize()},t.GetTopPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]-n[1],e.normal.y=n[7]-n[5],e.normal.z=n[11]-n[9],e.d=n[15]-n[13],e.normalize()},t.GetBottomPlaneToRef=function(t,e){var n=t.m;e.normal.x=n[3]+n[1],e.normal.y=n[7]+n[5],e.normal.z=n[11]+n[9],e.d=n[15]+n[13],e.normalize()},t.GetPlanesToRef=function(e,n){t.GetNearPlaneToRef(e,n[0]),t.GetFarPlaneToRef(e,n[1]),t.GetLeftPlaneToRef(e,n[2]),t.GetRightPlaneToRef(e,n[3]),t.GetTopPlaneToRef(e,n[4]),t.GetBottomPlaneToRef(e,n[5])},t}();e.Frustum=r},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Path2=void 0;var o=n(15),r=n(23),i=n(2),s=function(){function t(t,e){this.closed=!1,this._points=new Array,this._length=0,this._points.push(new o.Vector2(t,e))}return t.StartingAt=function(e,n){return new t(e,n)},t.prototype.addLineTo=function(t,e){if(this.closed)return this;var n=new o.Vector2(t,e),r=this._points[this._points.length-1];return this._points.push(n),this._length+=n.subtract(r).length(),this},t.prototype.addArcTo=function(t,e,n,s,a){if(void 0===a&&(a=36),this.closed)return this;var p=this._points[this._points.length-1],u=new o.Vector2(t,e),l=new o.Vector2(n,s),c=new r.Arc2(p,u,l),h=c.angle.radians()/a;c.orientation===i.Orientation.CW&&(h*=-1);for(var d=c.startAngle.radians()+h,f=0;f<a;f++){var y=Math.cos(d)*c.radius+c.centerPoint.x,v=Math.sin(d)*c.radius+c.centerPoint.y;this.addLineTo(y,v),d+=h}return this},t.prototype.close=function(){return this.closed=!0,this},t.prototype.length=function(){var t=this._length;if(!this.closed){var e=this._points[this._points.length-1];t+=this._points[0].subtract(e).length()}return t},t.prototype.getPoints=function(){return this._points},t.prototype.getPointAtLengthPosition=function(t){if(t<0||t>1)return o.Vector2.Zero();for(var e=t*this.length(),n=0,r=0;r<this._points.length;r++){var i=(r+1)%this._points.length,s=this._points[r],a=this._points[i].subtract(s),p=a.length()+n;if(e>=n&&e<=p){var u=a.normalize(),l=e-n;return new o.Vector2(s.x+u.x*l,s.y+u.y*l)}n=p}return o.Vector2.Zero()},t}();e.Path2=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Path3D=void 0;var o=n(3),r=n(2),i=n(6),s=function(){function t(t,e,n){void 0===e&&(e=null),this.path=t,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array;for(var o=0;o<t.length;o++)this._curve[o]=t[o].clone();this._raw=n||!1,this._compute(e)}return t.prototype.getCurve=function(){return this._curve},t.prototype.getTangents=function(){return this._tangents},t.prototype.getNormals=function(){return this._normals},t.prototype.getBinormals=function(){return this._binormals},t.prototype.getDistances=function(){return this._distances},t.prototype.update=function(t,e){void 0===e&&(e=null);for(var n=0;n<t.length;n++)this._curve[n].x=t[n].x,this._curve[n].y=t[n].y,this._curve[n].z=t[n].z;return this._compute(e),this},t.prototype._compute=function(t){var e=this._curve.length;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[e-1]=this._curve[e-1].subtract(this._curve[e-2]),this._raw||this._tangents[e-1].normalize();var n,r,i,s,a=this._tangents[0],p=this._normalVector(this._curve[0],a,t);this._normals[0]=p,this._raw||this._normals[0].normalize(),this._binormals[0]=o.Vector3.Cross(a,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(var u=1;u<e;u++)n=this._getLastNonNullVector(u),u<e-1&&(r=this._getFirstNonNullVector(u),this._tangents[u]=n.add(r),this._tangents[u].normalize()),this._distances[u]=this._distances[u-1]+n.length(),i=this._tangents[u],s=this._binormals[u-1],this._normals[u]=o.Vector3.Cross(s,i),this._raw||this._normals[u].normalize(),this._binormals[u]=o.Vector3.Cross(i,this._normals[u]),this._raw||this._binormals[u].normalize()},t.prototype._getFirstNonNullVector=function(t){for(var e=1,n=this._curve[t+e].subtract(this._curve[t]);0===n.length()&&t+e+1<this._curve.length;)e++,n=this._curve[t+e].subtract(this._curve[t]);return n},t.prototype._getLastNonNullVector=function(t){for(var e=1,n=this._curve[t].subtract(this._curve[t-e]);0===n.length()&&t>e+1;)e++,n=this._curve[t].subtract(this._curve[t-e]);return n},t.prototype._normalVector=function(t,e,n){var s,a=e.length();if(0===a&&(a=1),null==n){var p=void 0;p=i.Scalar.WithinEpsilon(Math.abs(e.y)/a,1,r.Epsilon)?i.Scalar.WithinEpsilon(Math.abs(e.x)/a,1,r.Epsilon)?i.Scalar.WithinEpsilon(Math.abs(e.z)/a,1,r.Epsilon)?o.Vector3.Zero():new o.Vector3(0,0,1):new o.Vector3(1,0,0):new o.Vector3(0,-1,0),s=o.Vector3.Cross(e,p)}else s=o.Vector3.Cross(e,n),o.Vector3.CrossToRef(s,e,s);return s.normalize(),s},t}();e.Path3D=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.Size=void 0;var o=function(){function t(t,e){this.width=t,this.height=e}return Object.defineProperty(t.prototype,\"surface\",{get:function(){return this.width*this.height},enumerable:!1,configurable:!0}),t.Zero=function(){return new t(0,0)},t.Lerp=function(e,n,o){return new t(e.width+(n.width-e.width)*o,e.height+(n.height-e.height)*o)},t.prototype.toString=function(){return\"{W: \"+this.width+\", H: \"+this.height+\"}\"},t.prototype.getClassName=function(){return\"Size\"},t.prototype.getHashCode=function(){var t=this.width||0;return t=397*t^(this.height||0)},t.prototype.copyFrom=function(t){this.width=t.width,this.height=t.height},t.prototype.copyFromFloats=function(t,e){return this.width=t,this.height=e,this},t.prototype.set=function(t,e){return this.copyFromFloats(t,e)},t.prototype.multiplyByFloats=function(e,n){return new t(this.width*e,this.height*n)},t.prototype.clone=function(){return new t(this.width,this.height)},t.prototype.equals=function(t){return!!t&&(this.width===t.width&&this.height===t.height)},t.prototype.add=function(e){return new t(this.width+e.width,this.height+e.height)},t.prototype.subtract=function(e){return new t(this.width-e.width,this.height-e.height)},t}();e.Size=o},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.AudioStream=e.AudioSource=e.AudioClip=void 0;var s=n(0),a=n(4),p=function(t){function e(e){var n=t.call(this)||this;return n.loop=!1,n.volume=1,n.url=e,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"url\",void 0),i([s.ObservableComponent.field],e.prototype,\"loop\",void 0),i([s.ObservableComponent.field],e.prototype,\"loadingCompleteEventId\",void 0),i([s.ObservableComponent.field],e.prototype,\"volume\",void 0),e=i([s.DisposableComponent(\"engine.AudioClip\",a.CLASS_ID.AUDIO_CLIP)],e)}(s.ObservableComponent);e.AudioClip=p;var u=function(t){function e(e){var n=t.call(this)||this;if(n.audioClip=e,n.loop=!1,n.volume=1,n.playing=!1,n.pitch=1,!(e instanceof p))throw new Error(\"Trying to create AudioSource(AudioClip) with an invalid AudioClip\");return n.audioClipId=s.getComponentId(e),n}return r(e,t),e.prototype.playOnce=function(){return this.playing=!0,this.dirty=!0,this.data.nonce=Math.random(),this},i([s.ObservableComponent.readonly],e.prototype,\"audioClipId\",void 0),i([s.ObservableComponent.field],e.prototype,\"loop\",void 0),i([s.ObservableComponent.field],e.prototype,\"volume\",void 0),i([s.ObservableComponent.field],e.prototype,\"playing\",void 0),i([s.ObservableComponent.field],e.prototype,\"pitch\",void 0),e=i([s.Component(\"engine.AudioSource\",a.CLASS_ID.AUDIO_SOURCE)],e)}(s.ObservableComponent);e.AudioSource=u;var l=function(t){function e(e){var n=t.call(this)||this;return n.playing=!1,n.volume=1,n.url=e,n.playing=!0,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"url\",void 0),i([s.ObservableComponent.field],e.prototype,\"playing\",void 0),i([s.ObservableComponent.field],e.prototype,\"volume\",void 0),e=i([s.Component(\"engine.AudioStream\",a.CLASS_ID.AUDIO_STREAM)],e)}(s.ObservableComponent);e.AudioStream=l},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.Gizmos=e.OnGizmoEvent=e.Gizmo=void 0;var s=n(0),a=n(4);!function(t){t.MOVE=\"MOVE\",t.ROTATE=\"ROTATE\",t.SCALE=\"SCALE\",t.NONE=\"NONE\"}(e.Gizmo||(e.Gizmo={}));var p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type=\"gizmoEvent\",e}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.gizmoEvent\",a.CLASS_ID.UUID_CALLBACK)],e)}(a.OnUUIDEvent);e.OnGizmoEvent=p;var u=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.position=!0,e.rotation=!0,e.scale=!0,e.cycle=!0,e.localReference=!1,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"position\",void 0),i([s.ObservableComponent.field],e.prototype,\"rotation\",void 0),i([s.ObservableComponent.field],e.prototype,\"scale\",void 0),i([s.ObservableComponent.field],e.prototype,\"cycle\",void 0),i([s.ObservableComponent.field],e.prototype,\"selectedGizmo\",void 0),i([s.ObservableComponent.field],e.prototype,\"localReference\",void 0),e=i([s.Component(\"engine.gizmos\",a.CLASS_ID.GIZMOS)],e)}(s.ObservableComponent);e.Gizmos=u},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.UIScrollRect=e.UIImage=e.UIInputText=e.UIText=e.UIButton=e.UIContainerStack=e.UIStackOrientation=e.UIContainerRect=e.UICanvas=e.UIWorldSpace=e.UIFullScreen=e.UIShape=void 0;var s=n(0),a=n(4),p=n(5),u=function(t){function e(e){var n=t.call(this)||this;return n.name=null,n.visible=!0,n.opacity=1,n.hAlign=\"center\",n.vAlign=\"center\",n.width=\"100px\",n.height=\"50px\",n.positionX=\"0px\",n.positionY=\"0px\",n.isPointerBlocker=!0,e&&(n._parent=e,n.data.parentComponent=s.getComponentId(e)),n}return r(e,t),Object.defineProperty(e.prototype,\"parent\",{get:function(){return this._parent},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parentComponent\",{get:function(){return this.data.parentComponent},enumerable:!1,configurable:!0}),i([s.ObservableComponent.field],e.prototype,\"name\",void 0),i([s.ObservableComponent.field],e.prototype,\"visible\",void 0),i([s.ObservableComponent.field],e.prototype,\"opacity\",void 0),i([s.ObservableComponent.field],e.prototype,\"hAlign\",void 0),i([s.ObservableComponent.field],e.prototype,\"vAlign\",void 0),i([s.ObservableComponent.uiValue],e.prototype,\"width\",void 0),i([s.ObservableComponent.uiValue],e.prototype,\"height\",void 0),i([s.ObservableComponent.uiValue],e.prototype,\"positionX\",void 0),i([s.ObservableComponent.uiValue],e.prototype,\"positionY\",void 0),i([s.ObservableComponent.field],e.prototype,\"isPointerBlocker\",void 0),e}(s.ObservableComponent);e.UIShape=u;var l=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_FULLSCREEN_SHAPE)],e)}(u);e.UIFullScreen=l;var c=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_WORLD_SPACE_SHAPE)],e)}(u);e.UIWorldSpace=c;var h=function(t){function e(){return t.call(this,null)||this}return r(e,t),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_SCREEN_SPACE_SHAPE)],e)}(u);e.UICanvas=h;var d,f=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.adaptWidth=!1,e.adaptHeight=!1,e.thickness=0,e.color=p.Color4.Clear(),e.alignmentUsesSize=!0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"adaptWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"adaptHeight\",void 0),i([s.ObservableComponent.field],e.prototype,\"thickness\",void 0),i([s.ObservableComponent.field],e.prototype,\"color\",void 0),i([s.ObservableComponent.field],e.prototype,\"alignmentUsesSize\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_CONTAINER_RECT)],e)}(u);e.UIContainerRect=f,function(t){t[t.VERTICAL=0]=\"VERTICAL\",t[t.HORIZONTAL=1]=\"HORIZONTAL\"}(d=e.UIStackOrientation||(e.UIStackOrientation={}));var y=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.adaptWidth=!0,e.adaptHeight=!0,e.color=p.Color4.Clear(),e.stackOrientation=d.VERTICAL,e.spacing=0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"adaptWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"adaptHeight\",void 0),i([s.ObservableComponent.field],e.prototype,\"color\",void 0),i([s.ObservableComponent.field],e.prototype,\"stackOrientation\",void 0),i([s.ObservableComponent.field],e.prototype,\"spacing\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_CONTAINER_STACK)],e)}(u);e.UIContainerStack=y;var v=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.fontSize=10,e.fontWeight=\"normal\",e.thickness=0,e.cornerRadius=0,e.color=p.Color4.White(),e.background=p.Color4.White(),e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.Black(),e.text=\"button\",e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"fontSize\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontWeight\",void 0),i([s.ObservableComponent.field],e.prototype,\"thickness\",void 0),i([s.ObservableComponent.field],e.prototype,\"cornerRadius\",void 0),i([s.ObservableComponent.field],e.prototype,\"color\",void 0),i([s.ObservableComponent.field],e.prototype,\"background\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowBlur\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetX\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetY\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"text\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_BUTTON_SHAPE)],e)}(u);e.UIButton=v;var m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.outlineWidth=0,e.outlineColor=p.Color4.White(),e.color=p.Color4.White(),e.fontSize=10,e.fontAutoSize=!1,e.fontWeight=\"normal\",e.value=\"\",e.lineSpacing=0,e.lineCount=0,e.adaptWidth=!1,e.adaptHeight=!1,e.textWrapping=!1,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.Black(),e.hTextAlign=\"left\",e.vTextAlign=\"bottom\",e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"outlineWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"outlineColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"color\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontSize\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontAutoSize\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontWeight\",void 0),i([s.ObservableComponent.component],e.prototype,\"font\",void 0),i([s.ObservableComponent.field],e.prototype,\"value\",void 0),i([s.ObservableComponent.field],e.prototype,\"lineSpacing\",void 0),i([s.ObservableComponent.field],e.prototype,\"lineCount\",void 0),i([s.ObservableComponent.field],e.prototype,\"adaptWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"adaptHeight\",void 0),i([s.ObservableComponent.field],e.prototype,\"textWrapping\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowBlur\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetX\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetY\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"hTextAlign\",void 0),i([s.ObservableComponent.field],e.prototype,\"vTextAlign\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_TEXT_SHAPE)],e)}(u);e.UIText=m;var b=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.outlineWidth=0,e.outlineColor=p.Color4.Black(),e.color=p.Color4.Clear(),e.thickness=1,e.fontSize=10,e.fontWeight=\"normal\",e.value=\"\",e.placeholderColor=p.Color4.White(),e.placeholder=\"\",e.margin=10,e.maxWidth=100,e.hTextAlign=\"left\",e.vTextAlign=\"bottom\",e.autoStretchWidth=!0,e.background=p.Color4.Black(),e.focusedBackground=p.Color4.Black(),e.textWrapping=!1,e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.shadowColor=p.Color4.White(),e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.onTextSubmit=null,e.onChanged=null,e.onFocus=null,e.onBlur=null,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"outlineWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"outlineColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"color\",void 0),i([s.ObservableComponent.field],e.prototype,\"thickness\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontSize\",void 0),i([s.ObservableComponent.field],e.prototype,\"fontWeight\",void 0),i([s.ObservableComponent.component],e.prototype,\"font\",void 0),i([s.ObservableComponent.field],e.prototype,\"value\",void 0),i([s.ObservableComponent.field],e.prototype,\"placeholderColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"placeholder\",void 0),i([s.ObservableComponent.field],e.prototype,\"margin\",void 0),i([s.ObservableComponent.field],e.prototype,\"maxWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"hTextAlign\",void 0),i([s.ObservableComponent.field],e.prototype,\"vTextAlign\",void 0),i([s.ObservableComponent.field],e.prototype,\"autoStretchWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"background\",void 0),i([s.ObservableComponent.field],e.prototype,\"focusedBackground\",void 0),i([s.ObservableComponent.field],e.prototype,\"textWrapping\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowBlur\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetX\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowOffsetY\",void 0),i([s.ObservableComponent.field],e.prototype,\"shadowColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onTextSubmit\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onChanged\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onFocus\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onBlur\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_INPUT_TEXT_SHAPE)],e)}(u);e.UIInputText=b;var g=function(t){function e(e,n){var o=t.call(this,e)||this;return o.sourceLeft=0,o.sourceTop=0,o.sourceWidth=1,o.sourceHeight=1,o.paddingTop=0,o.paddingRight=0,o.paddingBottom=0,o.paddingLeft=0,o.sizeInPixels=!0,o.onClick=null,o.source=n,o}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"sourceLeft\",void 0),i([s.ObservableComponent.field],e.prototype,\"sourceTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"sourceWidth\",void 0),i([s.ObservableComponent.field],e.prototype,\"sourceHeight\",void 0),i([s.ObservableComponent.component],e.prototype,\"source\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),i([s.ObservableComponent.field],e.prototype,\"sizeInPixels\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onClick\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_IMAGE_SHAPE)],e)}(u);e.UIImage=g;var _=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.valueX=0,e.valueY=0,e.borderColor=p.Color4.White(),e.backgroundColor=p.Color4.Clear(),e.isHorizontal=!1,e.isVertical=!1,e.paddingTop=0,e.paddingRight=0,e.paddingBottom=0,e.paddingLeft=0,e.onChanged=null,e}return r(e,t),i([s.ObservableComponent.field],e.prototype,\"valueX\",void 0),i([s.ObservableComponent.field],e.prototype,\"valueY\",void 0),i([s.ObservableComponent.field],e.prototype,\"borderColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"backgroundColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"isHorizontal\",void 0),i([s.ObservableComponent.field],e.prototype,\"isVertical\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingTop\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingRight\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingBottom\",void 0),i([s.ObservableComponent.field],e.prototype,\"paddingLeft\",void 0),i([a.OnUUIDEvent.uuidEvent],e.prototype,\"onChanged\",void 0),e=i([s.DisposableComponent(\"engine.shape\",a.CLASS_ID.UI_SLIDER_SHAPE)],e)}(u);e.UIScrollRect=_},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.AvatarShape=void 0;var s=n(0),a=n(4),p=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.useDummyModel=!1,e.talking=!1,e}var n;return r(e,t),n=e,e.Dummy=function(){var t=new n;return t.useDummyModel=!0,t},i([s.ObservableComponent.field],e.prototype,\"id\",void 0),i([s.ObservableComponent.field],e.prototype,\"name\",void 0),i([s.ObservableComponent.field],e.prototype,\"expressionTriggerId\",void 0),i([s.ObservableComponent.field],e.prototype,\"expressionTriggerTimestamp\",void 0),i([s.ObservableComponent.field],e.prototype,\"bodyShape\",void 0),i([s.ObservableComponent.field],e.prototype,\"wearables\",void 0),i([s.ObservableComponent.field],e.prototype,\"skinColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"hairColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"eyeColor\",void 0),i([s.ObservableComponent.field],e.prototype,\"useDummyModel\",void 0),i([s.ObservableComponent.field],e.prototype,\"talking\",void 0),e=n=i([s.Component(\"engine.avatarShape\",a.CLASS_ID.AVATAR_SHAPE)],e)}(s.ObservableComponent);e.AvatarShape=p},function(t,e,n){\"use strict\";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),i=this&&this.__decorate||function(t,e,n,o){var r,i=arguments.length,s=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(s=(i<3?r(s):i>3?r(e,n,s):r(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s};Object.defineProperty(e,\"__esModule\",{value:!0}),e.OnPointerUp=e.OnPointerDown=e.OnClick=e.OnChanged=e.OnEnter=e.OnBlur=e.OnTextSubmit=e.OnFocus=void 0;var s=n(0),a=n(14),p=n(4),u=function(t){function e(e){var n=t.call(this,e)||this;return n.type=\"onFocus\",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onFocus\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnFocus=u;var l=function(t){function e(e){var n=t.call(this,e)||this;return n.type=\"onTextSubmit\",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onTextSubmit\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnTextSubmit=l;var c=function(t){function e(e){var n=t.call(this,e)||this;return n.type=\"onBlur\",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onBlur\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnBlur=c;var h=function(t){function e(e){var n=t.call(this,e)||this;return n.type=\"onEnter\",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onEnter\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnEnter=h;var d=function(t){function e(e){var n=t.call(this,e)||this;return n.type=\"onChange\",a.uuidEventSystem.handlerMap[n.uuid]=n,n}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onChange\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnUUIDEvent);e.OnChanged=d;var f=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type=\"onClick\",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.onClick\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnClick=f;var y=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type=\"pointerDown\",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.pointerDown\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnPointerDown=y;var v=function(t){function e(e,n){var o=t.call(this,e)||this;return o.type=\"pointerUp\",a.uuidEventSystem.handlerMap[o.uuid]=o,n&&(o.showFeedback=!(!1===n.showFeedback),n.button&&(o.button=n.button),n.hoverText&&(o.hoverText=n.hoverText),n.distance&&(o.distance=n.distance)),o}return r(e,t),i([s.ObservableComponent.readonly],e.prototype,\"type\",void 0),e=i([s.Component(\"engine.pointerUp\",p.CLASS_ID.UUID_CALLBACK)],e)}(p.OnPointerUUIDEvent);e.OnPointerUp=v},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.MessageBus=e.getMessageObserver=void 0;var o=n(20),r=n(1),i=null,s=null,a=null;function p(){return a||(a=new o.Observable),a}e.getMessageObserver=p;var u=function(){function t(){var t=this;this.messageQueue=[],this.connected=!1,this.flushing=!1,function(){if(!s){(s=dcl.loadModule(\"@decentraland/CommunicationsController\")).then((function(t){i=t}));var t=p();dcl.subscribe(\"comms\"),dcl.onEvent((function(e){\"comms\"===e.type&&t.notifyObservers(e.data)}))}return s}().then((function(e){t.connected=!0,t.flush()}))}return t.prototype.on=function(t,e){return p().add((function(n){try{var o=JSON.parse(n.message);o.message===t&&e(o.payload,n.sender)}catch(n){dcl.error(\"Error parsing comms message \"+n.message,n)}}))},t.prototype.sendRaw=function(t){this.messageQueue.push(t),this.connected&&this.flush()},t.prototype.emit=function(t,e){var n=JSON.stringify({message:t,payload:e});this.sendRaw(n),p().notifyObservers({message:n,sender:\"self\"})},t.prototype.flush=function(){var t=this;if(0!==this.messageQueue.length&&this.connected&&i&&!this.flushing){var e=this.messageQueue.shift();this.flushing=!0,dcl.callRpc(i.rpcHandle,\"send\",[e]).then((function(e){t.flushing=!1,t.flush()}),(function(e){t.flushing=!1,r.error(\"Error flushing MessageBus\",e)}))}},t}();e.MessageBus=u}]));",
    "sha256": "962c35578d915a3035ed5a0e1d8763d39ba46e653de95005a7c98075243bab4b"
  },
  {
    "path": "node_modules/decentraland-ecs/artifacts/amd.js",
    "content": "// A naive attempt at getting the global `this`. Don’t use `this`!\nvar getGlobalThis = function () {\n    // @ts-ignore\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    // @ts-ignore\n    if (typeof self !== 'undefined')\n        return self;\n    // @ts-ignore\n    if (typeof window !== 'undefined')\n        return window;\n    // Note: this might still return the wrong result!\n    if (typeof this !== 'undefined')\n        return this;\n    throw new Error('Unable to locate global `this`');\n};\nvar globalObject = getGlobalThis();\nvar loader;\n(function (loader) {\n    'use strict';\n    var MODULE_LOADING = 1;\n    var MODULE_READY = 2;\n    var anonymousQueue = [];\n    var settings = {\n        baseUrl: ''\n    };\n    var registeredModules = {};\n    function config(config) {\n        if (typeof config === 'object') {\n            for (var x in config) {\n                if (config.hasOwnProperty(x)) {\n                    settings[x] = config[x];\n                }\n            }\n        }\n    }\n    loader.config = config;\n    function createModule(name, context, handlers) {\n        if (handlers === void 0) { handlers = []; }\n        return {\n            name: name,\n            dclamd: MODULE_LOADING,\n            handlers: handlers,\n            context: context,\n            exports: {}\n        };\n    }\n    function define(id, dependencies, factory) {\n        var argCount = arguments.length;\n        if (argCount === 1) {\n            factory = id;\n            dependencies = ['require', 'exports', 'module'];\n            id = null;\n        }\n        else if (argCount === 2) {\n            if (settings.toString.call(id) === '[object Array]') {\n                factory = dependencies;\n                dependencies = id;\n                id = null;\n            }\n            else {\n                factory = dependencies;\n                dependencies = ['require', 'exports', 'module'];\n            }\n        }\n        if (!id) {\n            anonymousQueue.push([dependencies, factory]);\n            return;\n        }\n        function ready() {\n            var handlers, context;\n            if (registeredModules[id]) {\n                handlers = registeredModules[id].handlers;\n                context = registeredModules[id].context;\n            }\n            else {\n                registeredModules[id] = createModule(id);\n            }\n            var module = registeredModules[id];\n            module.exports =\n                typeof factory === 'function'\n                    ? factory.apply(null, anonymousQueue.slice.call(arguments, 0)) || registeredModules[id].exports || {}\n                    : factory;\n            module.dclamd = MODULE_READY;\n            module.context = context;\n            for (var x = 0, xl = handlers ? handlers.length : 0; x < xl; x++) {\n                handlers[x](module.exports);\n            }\n        }\n        if (!registeredModules[id])\n            registeredModules[id] = createModule(id);\n        updateExistingModuleIfIndexModule(id);\n        registeredModules[id].dependencies = dependencies.map(function (dep) { return _toUrl(dep, id); });\n        require(dependencies, ready, id);\n    }\n    loader.define = define;\n    function updateExistingModuleIfIndexModule(id) {\n        var _a;\n        var idParts = id.split('/');\n        if (idParts[idParts.length - 1] === 'index' && idParts.length > 1) {\n            idParts.pop();\n            var noIndexId = idParts.join('/');\n            var existingModule = registeredModules[noIndexId];\n            registeredModules[noIndexId] = registeredModules[id];\n            if (existingModule) {\n                registeredModules[noIndexId].context = existingModule.context;\n                (_a = registeredModules[noIndexId].handlers).push.apply(_a, existingModule.handlers);\n            }\n        }\n    }\n    (function (define) {\n        define.amd = {};\n    })(define = loader.define || (loader.define = {}));\n    function hasDependencyWith(moduleId, otherModuleId) {\n        if (!registeredModules[moduleId] || !registeredModules[moduleId].dependencies) {\n            return false;\n        }\n        var directDependencies = registeredModules[moduleId].dependencies;\n        // Dependencies can be viewed as a graph. We keep track of the transitions between nodes that we have visited (to avoid infinite loop),\n        // and those that we want to visit next. We want to find all the nodes reachable from moduleId, to see if those inclued otherModuleId\n        var visited = [moduleId, 'require', 'exports', 'module'];\n        // If the dependency is one of those automatically assumed visited, we know we have a dependency\n        if (visited.indexOf(otherModuleId) !== -1)\n            return true;\n        var toVisit = directDependencies.filter(function (dep) { return visited.indexOf(dep) === -1; });\n        while (toVisit.length > 0) {\n            // If among the nodes we want to visit we have the module, then we know we have a dependency\n            if (toVisit.indexOf(otherModuleId) !== -1)\n                return true;\n            var dependencyId = toVisit.shift();\n            visited.push(dependencyId);\n            var module = registeredModules[dependencyId];\n            if (module && module.dependencies) {\n                for (var i = 0; i < module.dependencies.length; i++) {\n                    var moduleDependencyId = module.dependencies[i];\n                    if (visited.indexOf(moduleDependencyId) === -1 && toVisit.indexOf(moduleDependencyId) === -1) {\n                        toVisit.push(moduleDependencyId);\n                    }\n                }\n            }\n        }\n        // If we have visited all the graph and we didn't find a dependency, then as far as we know, we don't have a dependency yet\n        return false;\n    }\n    function require(modules, callback, context) {\n        var loadedModulesExports = [];\n        var loadedCount = 0;\n        var hasLoaded = false;\n        if (typeof modules === 'string') {\n            if (registeredModules[modules] && registeredModules[modules].dclamd === MODULE_READY) {\n                return registeredModules[modules];\n            }\n            throw new Error(modules + ' has not been defined. Please include it as a dependency in ' + context + \"'s define()\");\n        }\n        var xl = modules.length;\n        var _loop_1 = function (x) {\n            switch (modules[x]) {\n                case 'require':\n                    var _require = function (new_module, callback) {\n                        return require(new_module, callback, context);\n                    };\n                    _require.toUrl = function (module) {\n                        return _toUrl(module, context);\n                    };\n                    loadedModulesExports[x] = _require;\n                    loadedCount++;\n                    break;\n                case 'exports':\n                    loadedModulesExports[x] = registeredModules[context].exports;\n                    loadedCount++;\n                    break;\n                case 'module':\n                    loadedModulesExports[x] = {\n                        id: context,\n                        uri: _toUrl(context)\n                    };\n                    loadedCount++;\n                    break;\n                default:\n                    // If we have a circular dependency, then we resolve the module even if it hasn't loaded yet\n                    if (hasDependencyWith(modules[x], context)) {\n                        loadedModulesExports[x] = registeredModules[modules[x]].exports;\n                        loadedCount++;\n                    }\n                    else {\n                        load(modules[x], function (loadedModuleExports) {\n                            loadedModulesExports[x] = loadedModuleExports;\n                            loadedCount++;\n                            if (loadedCount === xl && callback) {\n                                hasLoaded = true;\n                                callback.apply(null, loadedModulesExports);\n                            }\n                        }, context);\n                    }\n            }\n        };\n        for (var x = 0; x < xl; x++) {\n            _loop_1(x);\n        }\n        if (!hasLoaded && loadedCount === xl && callback) {\n            callback.apply(null, loadedModulesExports);\n        }\n    }\n    loader.require = require;\n    function createMethodHandler(rpcHandle, method) {\n        return function () {\n            return dcl.callRpc(rpcHandle, method.name, anonymousQueue.slice.call(arguments, 0));\n        };\n    }\n    function load(moduleName, handler, context) {\n        moduleName = context ? _toUrl(moduleName, context) : moduleName;\n        if (registeredModules[moduleName]) {\n            if (registeredModules[moduleName].dclamd === MODULE_LOADING) {\n                handler && registeredModules[moduleName].handlers.push(handler);\n            }\n            else {\n                handler && handler(registeredModules[moduleName].exports);\n            }\n        }\n        else {\n            var module_1 = (registeredModules[moduleName] = createModule(moduleName, context, [handler]));\n            if (moduleName.indexOf('@') === 0) {\n                if (typeof dcl !== 'undefined') {\n                    dcl.loadModule(moduleName).then(function (descriptor) {\n                        var createdModuleExports = {};\n                        for (var i in descriptor.methods) {\n                            var method = descriptor.methods[i];\n                            createdModuleExports[method.name] = createMethodHandler(descriptor.rpcHandle, method);\n                        }\n                        // This is somewhat repeated with the ready function above... Should refactor with clear head\n                        module_1.dclamd = MODULE_READY;\n                        module_1.exports = createdModuleExports;\n                        var handlers = module_1.handlers;\n                        for (var i = 0; i < handlers.length; i++) {\n                            handlers[i](createdModuleExports);\n                        }\n                    });\n                }\n            }\n        }\n    }\n    if (typeof dcl !== 'undefined') {\n        dcl.onStart(function () {\n            var notLoadedModules = [];\n            for (var i in registeredModules) {\n                if (registeredModules[i] && registeredModules[i].dclamd === MODULE_LOADING) {\n                    notLoadedModules.push(registeredModules[i]);\n                }\n            }\n            if (notLoadedModules.length) {\n                throw new Error(\"These modules didn't load: \" + notLoadedModules.map(function ($) { return $.name; }).join(', '));\n            }\n        });\n    }\n    function _toUrl(id, context) {\n        var changed = false;\n        switch (id) {\n            case 'require':\n            case 'exports':\n            case 'module':\n                return id;\n        }\n        var newContext = (context || settings.baseUrl).split('/');\n        newContext.pop();\n        var idParts = id.split('/');\n        var i = idParts.length;\n        while (--i) {\n            switch (idParts[0]) {\n                case '..':\n                    newContext.pop();\n                case '.':\n                case '':\n                    idParts.shift();\n                    changed = true;\n            }\n        }\n        return (newContext.length && changed ? newContext.join('/') + '/' : '') + idParts.join('/');\n    }\n    require.toUrl = _toUrl;\n})(loader || (loader = {}));\nglobalObject.define = loader.define;\nglobalObject.dclamd = loader;\n//# sourceMappingURL=data:application/json;base64,",
    "sha256": "75d80f24058478bedc673866b1369494580510133a28b7a424c8e7c595a29b66"
  },
  {
    "path": "src/game.ts",
    "content": "var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\ndefine(\"node_modules/eth-connect/eth-connect.esm\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var ethconnect = function (t) { var e = {}; function r(n) { if (e[n])\r\n        return e[n].exports; var o = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports; } return r.m = t, r.c = e, r.d = function (t, e, n) { r.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n }); }, r.r = function (t) { \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(t, \"__esModule\", { value: !0 }); }, r.t = function (t, e) { if (1 & e && (t = r(t)), 8 & e)\r\n        return t; if (4 & e && \"object\" == typeof t && t && t.__esModule)\r\n        return t; var n = Object.create(null); if (r.r(n), Object.defineProperty(n, \"default\", { enumerable: !0, value: t }), 2 & e && \"string\" != typeof t)\r\n        for (var o in t)\r\n            r.d(n, o, function (e) { return t[e]; }.bind(null, o)); return n; }, r.n = function (t) { var e = t && t.__esModule ? function () { return t.default; } : function () { return t; }; return r.d(e, \"a\", e), e; }, r.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e); }, r.p = \"\", r(r.s = 28); }([function (t, e, r) { var n; t.exports = (n = n || function (t, e) { var r = Object.create || function () { function t() { } return function (e) { var r; return t.prototype = e, r = new t, t.prototype = null, r; }; }(), n = {}, o = n.lib = {}, i = o.Base = { extend: function (t) { var e = r(this); return t && e.mixIn(t), e.hasOwnProperty(\"init\") && this.init !== e.init || (e.init = function () { e.$super.init.apply(this, arguments); }), e.init.prototype = e, e.$super = this, e; }, create: function () { var t = this.extend(); return t.init.apply(t, arguments), t; }, init: function () { }, mixIn: function (t) { for (var e in t)\r\n                t.hasOwnProperty(e) && (this[e] = t[e]); t.hasOwnProperty(\"toString\") && (this.toString = t.toString); }, clone: function () { return this.init.prototype.extend(this); } }, s = o.WordArray = i.extend({ init: function (t, e) { t = this.words = t || [], this.sigBytes = null != e ? e : 4 * t.length; }, toString: function (t) { return (t || c).stringify(this); }, concat: function (t) { var e = this.words, r = t.words, n = this.sigBytes, o = t.sigBytes; if (this.clamp(), n % 4)\r\n                for (var i = 0; i < o; i++) {\r\n                    var s = r[i >>> 2] >>> 24 - i % 4 * 8 & 255;\r\n                    e[n + i >>> 2] |= s << 24 - (n + i) % 4 * 8;\r\n                }\r\n            else\r\n                for (var i = 0; i < o; i += 4)\r\n                    e[n + i >>> 2] = r[i >>> 2]; return this.sigBytes += o, this; }, clamp: function () { var e = this.words, r = this.sigBytes; e[r >>> 2] &= 4294967295 << 32 - r % 4 * 8, e.length = t.ceil(r / 4); }, clone: function () { var t = i.clone.call(this); return t.words = this.words.slice(0), t; }, random: function (e) { for (var r, n = [], o = function (e) { var e = e, r = 987654321, n = 4294967295; return function () { var o = ((r = 36969 * (65535 & r) + (r >> 16) & n) << 16) + (e = 18e3 * (65535 & e) + (e >> 16) & n) & n; return o /= 4294967296, (o += .5) * (t.random() > .5 ? 1 : -1); }; }, i = 0; i < e; i += 4) {\r\n                var a = o(4294967296 * (r || t.random()));\r\n                r = 987654071 * a(), n.push(4294967296 * a() | 0);\r\n            } return new s.init(n, e); } }), a = n.enc = {}, c = a.Hex = { stringify: function (t) { for (var e = t.words, r = t.sigBytes, n = [], o = 0; o < r; o++) {\r\n                var i = e[o >>> 2] >>> 24 - o % 4 * 8 & 255;\r\n                n.push((i >>> 4).toString(16)), n.push((15 & i).toString(16));\r\n            } return n.join(\"\"); }, parse: function (t) { for (var e = t.length, r = [], n = 0; n < e; n += 2)\r\n                r[n >>> 3] |= parseInt(t.substr(n, 2), 16) << 24 - n % 8 * 4; return new s.init(r, e / 2); } }, u = a.Latin1 = { stringify: function (t) { for (var e = t.words, r = t.sigBytes, n = [], o = 0; o < r; o++) {\r\n                var i = e[o >>> 2] >>> 24 - o % 4 * 8 & 255;\r\n                n.push(String.fromCharCode(i));\r\n            } return n.join(\"\"); }, parse: function (t) { for (var e = t.length, r = [], n = 0; n < e; n++)\r\n                r[n >>> 2] |= (255 & t.charCodeAt(n)) << 24 - n % 4 * 8; return new s.init(r, e); } }, l = a.Utf8 = { stringify: function (t) { try {\r\n                return decodeURIComponent(escape(u.stringify(t)));\r\n            }\r\n            catch (t) {\r\n                throw new Error(\"Malformed UTF-8 data\");\r\n            } }, parse: function (t) { return u.parse(unescape(encodeURIComponent(t))); } }, h = o.BufferedBlockAlgorithm = i.extend({ reset: function () { this._data = new s.init, this._nDataBytes = 0; }, _append: function (t) { \"string\" == typeof t && (t = l.parse(t)), this._data.concat(t), this._nDataBytes += t.sigBytes; }, _process: function (e) { var r = this._data, n = r.words, o = r.sigBytes, i = this.blockSize, a = 4 * i, c = o / a, u = (c = e ? t.ceil(c) : t.max((0 | c) - this._minBufferSize, 0)) * i, l = t.min(4 * u, o); if (u) {\r\n                for (var h = 0; h < u; h += i)\r\n                    this._doProcessBlock(n, h);\r\n                var f = n.splice(0, u);\r\n                r.sigBytes -= l;\r\n            } return new s.init(f, l); }, clone: function () { var t = i.clone.call(this); return t._data = this._data.clone(), t; }, _minBufferSize: 0 }), f = (o.Hasher = h.extend({ cfg: i.extend(), init: function (t) { this.cfg = this.cfg.extend(t), this.reset(); }, reset: function () { h.reset.call(this), this._doReset(); }, update: function (t) { return this._append(t), this._process(), this; }, finalize: function (t) { t && this._append(t); var e = this._doFinalize(); return e; }, blockSize: 16, _createHelper: function (t) { return function (e, r) { return new t.init(r).finalize(e); }; }, _createHmacHelper: function (t) { return function (e, r) { return new f.HMAC.init(t, r).finalize(e); }; } }), n.algo = {}); return n; }(Math), n); }, function (t, e, r) { var n; t.exports = (n = r(0), r(5), void (n.lib.Cipher || function (t) { var e = n, r = e.lib, o = r.Base, i = r.WordArray, s = r.BufferedBlockAlgorithm, a = e.enc, c = (a.Utf8, a.Base64), u = e.algo, l = u.EvpKDF, h = r.Cipher = s.extend({ cfg: o.extend(), createEncryptor: function (t, e) { return this.create(this._ENC_XFORM_MODE, t, e); }, createDecryptor: function (t, e) { return this.create(this._DEC_XFORM_MODE, t, e); }, init: function (t, e, r) { this.cfg = this.cfg.extend(r), this._xformMode = t, this._key = e, this.reset(); }, reset: function () { s.reset.call(this), this._doReset(); }, process: function (t) { return this._append(t), this._process(); }, finalize: function (t) { t && this._append(t); var e = this._doFinalize(); return e; }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function () { function t(t) { return \"string\" == typeof t ? F : w; } return function (e) { return { encrypt: function (r, n, o) { return t(n).encrypt(e, r, n, o); }, decrypt: function (r, n, o) { return t(n).decrypt(e, r, n, o); } }; }; }() }), f = (r.StreamCipher = h.extend({ _doFinalize: function () { var t = this._process(!0); return t; }, blockSize: 1 }), e.mode = {}), p = r.BlockCipherMode = o.extend({ createEncryptor: function (t, e) { return this.Encryptor.create(t, e); }, createDecryptor: function (t, e) { return this.Decryptor.create(t, e); }, init: function (t, e) { this._cipher = t, this._iv = e; } }), d = f.CBC = function () { var e = p.extend(); function r(e, r, n) { var o = this._iv; if (o) {\r\n            var i = o;\r\n            this._iv = t;\r\n        }\r\n        else\r\n            var i = this._prevBlock; for (var s = 0; s < n; s++)\r\n            e[r + s] ^= i[s]; } return e.Encryptor = e.extend({ processBlock: function (t, e) { var n = this._cipher, o = n.blockSize; r.call(this, t, e, o), n.encryptBlock(t, e), this._prevBlock = t.slice(e, e + o); } }), e.Decryptor = e.extend({ processBlock: function (t, e) { var n = this._cipher, o = n.blockSize, i = t.slice(e, e + o); n.decryptBlock(t, e), r.call(this, t, e, o), this._prevBlock = i; } }), e; }(), m = e.pad = {}, y = m.Pkcs7 = { pad: function (t, e) { for (var r = 4 * e, n = r - t.sigBytes % r, o = n << 24 | n << 16 | n << 8 | n, s = [], a = 0; a < n; a += 4)\r\n                s.push(o); var c = i.create(s, n); t.concat(c); }, unpad: function (t) { var e = 255 & t.words[t.sigBytes - 1 >>> 2]; t.sigBytes -= e; } }, g = (r.BlockCipher = h.extend({ cfg: h.cfg.extend({ mode: d, padding: y }), reset: function () { h.reset.call(this); var t = this.cfg, e = t.iv, r = t.mode; if (this._xformMode == this._ENC_XFORM_MODE)\r\n                var n = r.createEncryptor;\r\n            else {\r\n                var n = r.createDecryptor;\r\n                this._minBufferSize = 1;\r\n            } this._mode && this._mode.__creator == n ? this._mode.init(this, e && e.words) : (this._mode = n.call(r, this, e && e.words), this._mode.__creator = n); }, _doProcessBlock: function (t, e) { this._mode.processBlock(t, e); }, _doFinalize: function () { var t = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) {\r\n                t.pad(this._data, this.blockSize);\r\n                var e = this._process(!0);\r\n            }\r\n            else {\r\n                var e = this._process(!0);\r\n                t.unpad(e);\r\n            } return e; }, blockSize: 4 }), r.CipherParams = o.extend({ init: function (t) { this.mixIn(t); }, toString: function (t) { return (t || this.formatter).stringify(this); } })), _ = e.format = {}, v = _.OpenSSL = { stringify: function (t) { var e = t.ciphertext, r = t.salt; if (r)\r\n                var n = i.create([1398893684, 1701076831]).concat(r).concat(e);\r\n            else\r\n                var n = e; return n.toString(c); }, parse: function (t) { var e = c.parse(t), r = e.words; if (1398893684 == r[0] && 1701076831 == r[1]) {\r\n                var n = i.create(r.slice(2, 4));\r\n                r.splice(0, 4), e.sigBytes -= 16;\r\n            } return g.create({ ciphertext: e, salt: n }); } }, w = r.SerializableCipher = o.extend({ cfg: o.extend({ format: v }), encrypt: function (t, e, r, n) { n = this.cfg.extend(n); var o = t.createEncryptor(r, n), i = o.finalize(e), s = o.cfg; return g.create({ ciphertext: i, key: r, iv: s.iv, algorithm: t, mode: s.mode, padding: s.padding, blockSize: t.blockSize, formatter: n.format }); }, decrypt: function (t, e, r, n) { n = this.cfg.extend(n), e = this._parse(e, n.format); var o = t.createDecryptor(r, n).finalize(e.ciphertext); return o; }, _parse: function (t, e) { return \"string\" == typeof t ? e.parse(t, this) : t; } }), b = e.kdf = {}, B = b.OpenSSL = { execute: function (t, e, r, n) { n || (n = i.random(8)); var o = l.create({ keySize: e + r }).compute(t, n), s = i.create(o.words.slice(e), 4 * r); return o.sigBytes = 4 * e, g.create({ key: o, iv: s, salt: n }); } }, F = r.PasswordBasedCipher = w.extend({ cfg: w.cfg.extend({ kdf: B }), encrypt: function (t, e, r, n) { var o = (n = this.cfg.extend(n)).kdf.execute(r, t.keySize, t.ivSize); n.iv = o.iv; var i = w.encrypt.call(this, t, e, o.key, n); return i.mixIn(o), i; }, decrypt: function (t, e, r, n) { n = this.cfg.extend(n), e = this._parse(e, n.format); var o = n.kdf.execute(r, t.keySize, t.ivSize, e.salt); n.iv = o.iv; var i = w.decrypt.call(this, t, e, o.key, n); return i; } }); }())); }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(17), o = r(3), i = r(14), s = r(25);\r\n            function a(t) { n.BigNumber.config(i.ETH_BIGNUMBER_ROUNDING_MODE); var e = o.padLeft(o.toTwosComplement(t).toString(16), 64); return new s.SolidityParam(e); }\r\n            function c(t) { return \"1\" === new n.BigNumber(t.substr(0, 1), 16).toString(2).substr(0, 1); }\r\n            function u(t) { var e = t.staticPart() || \"0\"; return c(e) ? new n.BigNumber(e, 16).minus(new n.BigNumber(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16)).minus(1) : new n.BigNumber(e, 16); }\r\n            function l(t) { var e = t.staticPart() || \"0\"; return new n.BigNumber(e, 16); }\r\n            e.formatInputInt = a, e.formatInputBytes = function (t) { var e = o.toHex(t).substr(2), r = Math.floor((e.length + 63) / 64); return e = o.padRight(e, 64 * r), new s.SolidityParam(e); }, e.formatInputDynamicBytes = function (t) { var e = o.toHex(t).substr(2), r = e.length / 2, n = Math.floor((e.length + 63) / 64); return e = o.padRight(e, 64 * n), new s.SolidityParam(a(r).value + e); }, e.formatInputString = function (t) { var e = o.fromUtf8(t).substr(2), r = e.length / 2, n = Math.floor((e.length + 63) / 64); return e = o.padRight(e, 64 * n), new s.SolidityParam(a(r).value + e); }, e.formatInputBool = function (t) { var e = \"000000000000000000000000000000000000000000000000000000000000000\" + (t ? \"1\" : \"0\"); return new s.SolidityParam(e); }, e.formatInputReal = function (t) { return a(new n.BigNumber(t).times(new n.BigNumber(2).pow(128))); }, e.signedIsNegative = c, e.formatOutputInt = u, e.formatOutputUInt = l, e.formatOutputReal = function (t) { return u(t).dividedBy(new n.BigNumber(2).pow(128)); }, e.formatOutputUReal = function (t) { return l(t).dividedBy(new n.BigNumber(2).pow(128)); }, e.formatOutputBool = function (t) { return \"0000000000000000000000000000000000000000000000000000000000000001\" === t.staticPart(); }, e.formatOutputBytes = function (t, e) { var r = e.match(/^bytes([0-9]*)/), n = parseInt(r[1], 10); return \"0x\" + t.staticPart().slice(0, 2 * n); }, e.formatOutputDynamicBytes = function (t) { var e = 2 * new n.BigNumber(t.dynamicPart().slice(0, 64), 16).toNumber(); return \"0x\" + t.dynamicPart().substr(64, e); }, e.formatOutputString = function (t) { var e = 2 * new n.BigNumber(t.dynamicPart().slice(0, 64), 16).toNumber(); return o.toUtf8(t.dynamicPart().substr(64, e)); }, e.formatOutputAddress = function (t) { var e = t.staticPart(); return \"0x\" + e.slice(e.length - 40, e.length); };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(17), o = r(31), i = r(32), s = r(20);\r\n            function a(t, e) { var r = t; return e && \"hex\" === e.encoding && (r.length > 2 && \"0x\" === r.substr(0, 2) && (r = r.substr(2)), r = i.enc.Hex.parse(r)), s(r, { outputLength: 256 }).toString(); }\r\n            e.sha3 = a;\r\n            var c = { noether: \"0\", wei: \"1\", kwei: \"1000\", Kwei: \"1000\", babbage: \"1000\", femtoether: \"1000\", mwei: \"1000000\", Mwei: \"1000000\", lovelace: \"1000000\", picoether: \"1000000\", gwei: \"1000000000\", Gwei: \"1000000000\", shannon: \"1000000000\", nanoether: \"1000000000\", nano: \"1000000000\", szabo: \"1000000000000\", microether: \"1000000000000\", micro: \"1000000000000\", finney: \"1000000000000000\", milliether: \"1000000000000000\", milli: \"1000000000000000\", ether: \"1000000000000000000\", kether: \"1000000000000000000000\", grand: \"1000000000000000000000\", mether: \"1000000000000000000000000\", gether: \"1000000000000000000000000000\", tether: \"1000000000000000000000000000000\" };\r\n            function u(t, e, r) { return new Array(e - t.length + 1).join(r || \"0\") + t; }\r\n            function l(t, e) {\r\n                if (e === void 0) { e = !1; }\r\n                var r = o.encode(t), n = \"\";\r\n                for (var t_1 = 0; t_1 < r.length; t_1++) {\r\n                    var o_1 = r.charCodeAt(t_1);\r\n                    if (0 === o_1) {\r\n                        if (!e)\r\n                            break;\r\n                        n += \"00\";\r\n                    }\r\n                    else {\r\n                        var t_2 = o_1.toString(16);\r\n                        n += t_2.length < 2 ? \"0\" + t_2 : t_2;\r\n                    }\r\n                }\r\n                return \"0x\" + n;\r\n            }\r\n            function h(t) { var e = d(t), r = e.toString(16); return e.isLessThan(0) ? \"-0x\" + r.substr(1) : \"0x\" + r; }\r\n            function f(t) { if (v(t))\r\n                return h(+t); if (g(t))\r\n                return h(t); if (\"object\" == typeof t)\r\n                return l(JSON.stringify(t)); if (_(t)) {\r\n                var e_1 = t;\r\n                if (0 === e_1.indexOf(\"-0x\"))\r\n                    return h(e_1);\r\n                if (0 === e_1.indexOf(\"0x\"))\r\n                    return e_1;\r\n                if (!isFinite(e_1))\r\n                    return l(e_1, !0);\r\n            } return h(t); }\r\n            function p(t) { var e = t ? t.toLowerCase() : \"ether\", r = c[e]; if (void 0 === r)\r\n                throw new Error(\"This unit doesn't exists, please use the one of the following units\" + JSON.stringify(c, null, 2)); return new n.BigNumber(r, 10); }\r\n            function d(t) { var e = t || 0; return g(e) ? e : \"string\" != typeof e || 0 !== e.indexOf(\"0x\") && 0 !== e.indexOf(\"-0x\") ? new n.BigNumber(e.toString(10), 10) : new n.BigNumber(e.replace(\"0x\", \"\"), 16); }\r\n            function m(t) { return /^0x[0-9a-f]{40}$/i.test(t); }\r\n            function y(t) { var e = t.replace(\"0x\", \"\"); var r = a(e.toLowerCase()); for (var t_3 = 0; t_3 < 40; t_3++)\r\n                if (parseInt(r[t_3], 16) > 7 && e[t_3].toUpperCase() !== e[t_3] || parseInt(r[t_3], 16) <= 7 && e[t_3].toLowerCase() !== e[t_3])\r\n                    return !1; return !0; }\r\n            function g(t) { return t instanceof n.BigNumber; }\r\n            function _(t) { return \"string\" == typeof t || t && t.constructor && \"String\" === t.constructor.name; }\r\n            function v(t) { return \"boolean\" == typeof t; }\r\n            e.padLeft = u, e.padRight = function (t, e, r) { return t + new Array(e - t.length + 1).join(r || \"0\"); }, e.toUtf8 = function (t) { var e = \"\", r = 0, n = t.length; for (\"0x\" === t.substring(0, 2) && (r = 2); r < n; r += 2) {\r\n                var n_1 = parseInt(t.substr(r, 2), 16);\r\n                if (0 === n_1)\r\n                    break;\r\n                e += String.fromCharCode(n_1);\r\n            } return o.decode(e); }, e.toAscii = function (t) { var e = \"\", r = 0, n = t.length; for (\"0x\" === t.substring(0, 2) && (r = 2); r < n; r += 2) {\r\n                var n_2 = parseInt(t.substr(r, 2), 16);\r\n                e += String.fromCharCode(n_2);\r\n            } return e; }, e.fromUtf8 = l, e.fromAscii = function (t, e) {\r\n                if (e === void 0) { e = 0; }\r\n                var r = \"\";\r\n                for (var e_2 = 0; e_2 < t.length; e_2++) {\r\n                    var n_3 = t.charCodeAt(e_2).toString(16);\r\n                    r += n_3.length < 2 ? \"0\" + n_3 : n_3;\r\n                }\r\n                return \"0x\" + r.padEnd(e, \"0\");\r\n            }, e.transformToFullName = function (t) { if (-1 !== t.name.indexOf(\"(\"))\r\n                return t.name; var e = t.inputs.map(function (t) { return t.type; }).join(); return t.name + \"(\" + e + \")\"; }, e.extractDisplayName = function (t) { var e = t.indexOf(\"(\"), r = t.indexOf(\")\"); return -1 !== e && -1 !== r ? t.substr(0, e) : t; }, e.extractTypeName = function (t) { var e = t.indexOf(\"(\"), r = t.indexOf(\")\"); return -1 !== e && -1 !== r ? t.substr(e + 1, r - e - 1).replace(\" \", \"\") : \"\"; }, e.isHex = function (t) { return \"string\" == typeof t && /^0x[0-9a-fA-F]+$/.test(t); }, e.toNullDecimal = function (t) { return null == t ? t : d(t).toNumber(); }, e.toDecimal = function (t) { return d(t).toNumber(); }, e.toString = function (t) { return g(t) ? t.toString(10) : \"\" + t; }, e.toData = function (t) { return \"string\" == typeof t && !t.startsWith(\"0x\") && /^[A-Za-z0-9]+$/.test(t) ? \"0x\" + t : f(t); }, e.toBoolean = function (t) { return \"boolean\" == typeof t ? t : 0 !== d(t).toNumber(); }, e.fromDecimal = h, e.toHex = f, e.getValueOfUnit = p, e.fromWei = function (t, e) { var r = d(t).dividedBy(p(e)); return g(t) ? r : r.toString(10); }, e.toWei = function (t, e) { var r = d(t).times(p(e)); return g(t) ? r : r.toString(10); }, e.toBigNumber = d, e.toTwosComplement = function (t) { var e = d(t).integerValue(); return e.isLessThan(0) ? new n.BigNumber(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16).plus(e).plus(1) : e; }, e.isStrictAddress = m, e.isAddress = function (t) { return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x)?[0-9a-f]{40}$/.test(t) && !/^(0x)?[0-9A-F]{40}$/.test(t)) || y(t)); }, e.isChecksumAddress = y, e.toChecksumAddress = function (t) { if (void 0 === t)\r\n                return \"\"; var e = t.toLowerCase().replace(\"0x\", \"\"), r = a(e); var n = \"0x\"; for (var t_4 = 0; t_4 < e.length; t_4++)\r\n                parseInt(r[t_4], 16) > 7 ? n += e[t_4].toUpperCase() : n += e[t_4]; return n; }, e.toArray = function (t) { if (!Array.isArray(t))\r\n                throw new Error(\"Value was not an array: \" + JSON.stringify(t)); return t; }, e.toAddress = function (t) { return m(t) ? t : /^[0-9a-f]{40}$/.test(t) ? \"0x\" + t : \"0x\" + u(f(t).substr(2), 40); }, e.isBigNumber = g, e.isString = _, e.isFunction = function (t) { return \"function\" == typeof t; }, e.isObject = function (t) { return null !== t && !Array.isArray(t) && \"object\" == typeof t; }, e.isBoolean = v, e.isArray = function (t) { return Array.isArray(t); }, e.isJson = function (t) { try {\r\n                return !!JSON.parse(t);\r\n            }\r\n            catch (t) {\r\n                return !1;\r\n            } }, e.isBloom = function (t) { return !(!/^(0x)?[0-9a-f]{512}$/i.test(t) || !/^(0x)?[0-9a-f]{512}$/.test(t) && !/^(0x)?[0-9A-F]{512}$/.test(t)); }, e.isTopic = function (t) { return !(!/^(0x)?[0-9a-f]{64}$/i.test(t) || !/^(0x)?[0-9a-f]{64}$/.test(t) && !/^(0x)?[0-9A-F]{64}$/.test(t)); };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(25);\r\n            e.SolidityType = /** @class */ (function () {\r\n                function SolidityType(t) {\r\n                    this._inputFormatter = t.inputFormatter, this._outputFormatter = t.outputFormatter;\r\n                }\r\n                SolidityType.prototype.isType = function (t) { throw new Error(\"this method should be overrwritten for type \" + t); };\r\n                SolidityType.prototype.staticPartLength = function (t) { return (this.nestedTypes(t) || [\"[1]\"]).map(function (t) { return parseInt(t.slice(1, -1), 10) || 1; }).reduce(function (t, e) { return t * e; }, 32); };\r\n                SolidityType.prototype.isDynamicArray = function (t) { var e = this.nestedTypes(t); return !!e && !e[e.length - 1].match(/[0-9]{1,}/g); };\r\n                SolidityType.prototype.isStaticArray = function (t) { var e = this.nestedTypes(t); return !!e && !!e[e.length - 1].match(/[0-9]{1,}/g); };\r\n                SolidityType.prototype.staticArrayLength = function (t) { var e = this.nestedTypes(t); if (e) {\r\n                    var t_5 = e[e.length - 1].match(/[0-9]{1,}/g);\r\n                    return parseInt(t_5[t_5.length - 1] || \"1\", 10);\r\n                } return 1; };\r\n                SolidityType.prototype.nestedName = function (t) { var e = this.nestedTypes(t); return e ? t.substr(0, t.length - e[e.length - 1].length) : t; };\r\n                SolidityType.prototype.isDynamicType = function (t) { return !1; };\r\n                SolidityType.prototype.nestedTypes = function (t) { return t.match(/(\\[[0-9]*\\])/g); };\r\n                SolidityType.prototype.encode = function (t, e) {\r\n                    var _this = this;\r\n                    if (this.isDynamicArray(e)) {\r\n                        var r_1 = t.length, o_2 = this.nestedName(e), i_1 = [];\r\n                        return i_1.push(n.formatInputInt(r_1).encode()), t.forEach(function (t) { i_1.push(_this.encode(t, o_2)); }), i_1;\r\n                    }\r\n                    if (this.isStaticArray(e)) {\r\n                        var r_2 = this.staticArrayLength(e), n_4 = this.nestedName(e), o_3 = [];\r\n                        for (var e_3 = 0; e_3 < r_2; e_3++)\r\n                            o_3.push(this.encode(t[e_3], n_4));\r\n                        return o_3;\r\n                    }\r\n                    return this._inputFormatter(t, e).encode();\r\n                };\r\n                SolidityType.prototype.decode = function (t, e, r) { if (this.isDynamicArray(r)) {\r\n                    var n_5 = parseInt(\"0x\" + t.substr(2 * e, 64), 16), o_4 = parseInt(\"0x\" + t.substr(2 * n_5, 64), 16), i_2 = n_5 + 32, s = this.nestedName(r), a = this.staticPartLength(s), c = 32 * Math.floor((a + 31) / 32), u = [];\r\n                    for (var e_4 = 0; e_4 < o_4 * c; e_4 += c)\r\n                        u.push(this.decode(t, i_2 + e_4, s));\r\n                    return u;\r\n                } if (this.isStaticArray(r)) {\r\n                    var n_6 = this.staticArrayLength(r), o_5 = e, i_3 = this.nestedName(r), s = this.staticPartLength(i_3), a = 32 * Math.floor((s + 31) / 32), c = [];\r\n                    for (var e_5 = 0; e_5 < n_6 * a; e_5 += a)\r\n                        c.push(this.decode(t, o_5 + e_5, i_3));\r\n                    return c;\r\n                } if (this.isDynamicType(r)) {\r\n                    var n_7 = parseInt(\"0x\" + t.substr(2 * e, 64), 16), i_4 = parseInt(\"0x\" + t.substr(2 * n_7, 64), 16), s = Math.floor((i_4 + 31) / 32), a = new o.SolidityParam(t.substr(2 * n_7, 64 * (1 + s)), 0);\r\n                    return this._outputFormatter(a, r);\r\n                } var n = this.staticPartLength(r), i = new o.SolidityParam(t.substr(2 * e, 2 * n)); return this._outputFormatter(i, r); };\r\n                return SolidityType;\r\n            }());\r\n        }, function (t, e, r) { var n, o, i, s, a, c, u, l; t.exports = (n = r(0), r(11), r(12), i = (o = n).lib, s = i.Base, a = i.WordArray, c = o.algo, u = c.MD5, l = c.EvpKDF = s.extend({ cfg: s.extend({ keySize: 4, hasher: u, iterations: 1 }), init: function (t) { this.cfg = this.cfg.extend(t); }, compute: function (t, e) { for (var r = this.cfg, n = r.hasher.create(), o = a.create(), i = o.words, s = r.keySize, c = r.iterations; i.length < s;) {\r\n                u && n.update(u);\r\n                var u = n.update(t).finalize(e);\r\n                n.reset();\r\n                for (var l = 1; l < c; l++)\r\n                    u = n.finalize(u), n.reset();\r\n                o.concat(u);\r\n            } return o.sigBytes = 4 * s, o; } }), o.EvpKDF = function (t, e, r) { return l.create(r).compute(t, e); }, n.EvpKDF); }, function (t, e, r) { var n, o, i; t.exports = (n = r(0), i = (o = n).lib.WordArray, o.enc.Base64 = { stringify: function (t) { var e = t.words, r = t.sigBytes, n = this._map; t.clamp(); for (var o = [], i = 0; i < r; i += 3)\r\n                for (var s = (e[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (e[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | e[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, a = 0; a < 4 && i + .75 * a < r; a++)\r\n                    o.push(n.charAt(s >>> 6 * (3 - a) & 63)); var c = n.charAt(64); if (c)\r\n                for (; o.length % 4;)\r\n                    o.push(c); return o.join(\"\"); }, parse: function (t) { var e = t.length, r = this._map, n = this._reverseMap; if (!n) {\r\n                n = this._reverseMap = [];\r\n                for (var o = 0; o < r.length; o++)\r\n                    n[r.charCodeAt(o)] = o;\r\n            } var s = r.charAt(64); if (s) {\r\n                var a = t.indexOf(s);\r\n                -1 !== a && (e = a);\r\n            } return function (t, e, r) { for (var n = [], o = 0, s = 0; s < e; s++)\r\n                if (s % 4) {\r\n                    var a = r[t.charCodeAt(s - 1)] << s % 4 * 2, c = r[t.charCodeAt(s)] >>> 6 - s % 4 * 2;\r\n                    n[o >>> 2] |= (a | c) << 24 - o % 4 * 8, o++;\r\n                } return i.create(n, o); }(t, e, n); }, _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\" }, n.enc.Base64); }, function (t, e, r) { var n; t.exports = (n = r(0), function (t) { var e = n, r = e.lib, o = r.WordArray, i = r.Hasher, s = e.algo, a = []; !function () { for (var e = 0; e < 64; e++)\r\n            a[e] = 4294967296 * t.abs(t.sin(e + 1)) | 0; }(); var c = s.MD5 = i.extend({ _doReset: function () { this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878]); }, _doProcessBlock: function (t, e) { for (var r = 0; r < 16; r++) {\r\n                var n = e + r, o = t[n];\r\n                t[n] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);\r\n            } var i = this._hash.words, s = t[e + 0], c = t[e + 1], p = t[e + 2], d = t[e + 3], m = t[e + 4], y = t[e + 5], g = t[e + 6], _ = t[e + 7], v = t[e + 8], w = t[e + 9], b = t[e + 10], B = t[e + 11], F = t[e + 12], N = t[e + 13], k = t[e + 14], x = t[e + 15], S = i[0], A = i[1], O = i[2], T = i[3]; S = u(S, A, O, T, s, 7, a[0]), T = u(T, S, A, O, c, 12, a[1]), O = u(O, T, S, A, p, 17, a[2]), A = u(A, O, T, S, d, 22, a[3]), S = u(S, A, O, T, m, 7, a[4]), T = u(T, S, A, O, y, 12, a[5]), O = u(O, T, S, A, g, 17, a[6]), A = u(A, O, T, S, _, 22, a[7]), S = u(S, A, O, T, v, 7, a[8]), T = u(T, S, A, O, w, 12, a[9]), O = u(O, T, S, A, b, 17, a[10]), A = u(A, O, T, S, B, 22, a[11]), S = u(S, A, O, T, F, 7, a[12]), T = u(T, S, A, O, N, 12, a[13]), O = u(O, T, S, A, k, 17, a[14]), S = l(S, A = u(A, O, T, S, x, 22, a[15]), O, T, c, 5, a[16]), T = l(T, S, A, O, g, 9, a[17]), O = l(O, T, S, A, B, 14, a[18]), A = l(A, O, T, S, s, 20, a[19]), S = l(S, A, O, T, y, 5, a[20]), T = l(T, S, A, O, b, 9, a[21]), O = l(O, T, S, A, x, 14, a[22]), A = l(A, O, T, S, m, 20, a[23]), S = l(S, A, O, T, w, 5, a[24]), T = l(T, S, A, O, k, 9, a[25]), O = l(O, T, S, A, d, 14, a[26]), A = l(A, O, T, S, v, 20, a[27]), S = l(S, A, O, T, N, 5, a[28]), T = l(T, S, A, O, p, 9, a[29]), O = l(O, T, S, A, _, 14, a[30]), S = h(S, A = l(A, O, T, S, F, 20, a[31]), O, T, y, 4, a[32]), T = h(T, S, A, O, v, 11, a[33]), O = h(O, T, S, A, B, 16, a[34]), A = h(A, O, T, S, k, 23, a[35]), S = h(S, A, O, T, c, 4, a[36]), T = h(T, S, A, O, m, 11, a[37]), O = h(O, T, S, A, _, 16, a[38]), A = h(A, O, T, S, b, 23, a[39]), S = h(S, A, O, T, N, 4, a[40]), T = h(T, S, A, O, s, 11, a[41]), O = h(O, T, S, A, d, 16, a[42]), A = h(A, O, T, S, g, 23, a[43]), S = h(S, A, O, T, w, 4, a[44]), T = h(T, S, A, O, F, 11, a[45]), O = h(O, T, S, A, x, 16, a[46]), S = f(S, A = h(A, O, T, S, p, 23, a[47]), O, T, s, 6, a[48]), T = f(T, S, A, O, _, 10, a[49]), O = f(O, T, S, A, k, 15, a[50]), A = f(A, O, T, S, y, 21, a[51]), S = f(S, A, O, T, F, 6, a[52]), T = f(T, S, A, O, d, 10, a[53]), O = f(O, T, S, A, b, 15, a[54]), A = f(A, O, T, S, c, 21, a[55]), S = f(S, A, O, T, v, 6, a[56]), T = f(T, S, A, O, x, 10, a[57]), O = f(O, T, S, A, g, 15, a[58]), A = f(A, O, T, S, N, 21, a[59]), S = f(S, A, O, T, m, 6, a[60]), T = f(T, S, A, O, B, 10, a[61]), O = f(O, T, S, A, p, 15, a[62]), A = f(A, O, T, S, w, 21, a[63]), i[0] = i[0] + S | 0, i[1] = i[1] + A | 0, i[2] = i[2] + O | 0, i[3] = i[3] + T | 0; }, _doFinalize: function () { var e = this._data, r = e.words, n = 8 * this._nDataBytes, o = 8 * e.sigBytes; r[o >>> 5] |= 128 << 24 - o % 32; var i = t.floor(n / 4294967296), s = n; r[15 + (o + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), r[14 + (o + 64 >>> 9 << 4)] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), e.sigBytes = 4 * (r.length + 1), this._process(); for (var a = this._hash, c = a.words, u = 0; u < 4; u++) {\r\n                var l = c[u];\r\n                c[u] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8);\r\n            } return a; }, clone: function () { var t = i.clone.call(this); return t._hash = this._hash.clone(), t; } }); function u(t, e, r, n, o, i, s) { var a = t + (e & r | ~e & n) + o + s; return (a << i | a >>> 32 - i) + e; } function l(t, e, r, n, o, i, s) { var a = t + (e & n | r & ~n) + o + s; return (a << i | a >>> 32 - i) + e; } function h(t, e, r, n, o, i, s) { var a = t + (e ^ r ^ n) + o + s; return (a << i | a >>> 32 - i) + e; } function f(t, e, r, n, o, i, s) { var a = t + (r ^ (e | ~n)) + o + s; return (a << i | a >>> 32 - i) + e; } e.MD5 = i._createHelper(c), e.HmacMD5 = i._createHmacHelper(c); }(Math), n.MD5); }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(14);\r\n            function i(t) { return \"latest\" === t || \"pending\" === t || \"earliest\" === t; }\r\n            function s(t) { if (void 0 !== t && null != t)\r\n                return i(t) ? t : n.toHex(t); }\r\n            function a(t) { return t ? (null !== t.blockNumber && (t.blockNumber = n.toDecimal(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.toDecimal(t.transactionIndex)), t.nonce = n.toDecimal(t.nonce), t.gas = n.toDecimal(t.gas), t.gasPrice = n.toBigNumber(t.gasPrice), t.value = n.toBigNumber(t.value), t) : null; }\r\n            function c(t) { return t ? (t.blockNumber && (t.blockNumber = n.toDecimal(t.blockNumber)), t.transactionIndex && (t.transactionIndex = n.toDecimal(t.transactionIndex)), t.logIndex && (t.logIndex = n.toDecimal(t.logIndex)), t) : null; }\r\n            function u(t) { if (n.isStrictAddress(t))\r\n                return t; if (n.isAddress(t))\r\n                return \"0x\" + t; throw new Error(\"Invalid address: \" + JSON.stringify(t)); }\r\n            e.outputBigNumberFormatter = function (t) { return n.toBigNumber(t); }, e.isPredefinedBlockNumber = i, e.inputDefaultBlockNumberFormatter = function (t) { return void 0 === t ? o.defaultBlock : s(t); }, e.inputBlockNumberFormatter = s, e.inputCallFormatter = function (t) { return t.from = t.from, t.from && (t.from = u(t.from)), t.to && (t.to = u(t.to)), [\"gasPrice\", \"gas\", \"value\", \"nonce\"].filter(function (e) { return void 0 !== t[e]; }).forEach(function (e) { t[e] = n.fromDecimal(t[e]); }), t.data && !t.data.startsWith(\"0x\") && /^[A-Za-z0-9]+$/.test(t.data) && (t.data = \"0x\" + t.data), t; }, e.inputTransactionFormatter = function (t) { if (\"object\" != typeof t)\r\n                throw new Error(\"Did not provide transaction options\"); if (!t.from)\r\n                throw new Error('Missing \"from\" in transaction options'); return t.from = u(t.from), t.to && (t.to = u(t.to)), [\"gasPrice\", \"gas\", \"value\", \"nonce\"].filter(function (e) { return void 0 !== t[e]; }).forEach(function (e) { t[e] = n.fromDecimal(t[e]); }), t.data && !t.data.startsWith(\"0x\") && /^[A-Za-z0-9]+$/.test(t.data) && (t.data = \"0x\" + t.data), t; }, e.outputTransactionFormatter = a, e.outputTransactionReceiptFormatter = function (t) { return t ? (null !== t.blockNumber && (t.blockNumber = n.toDecimal(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.toDecimal(t.transactionIndex)), t.cumulativeGasUsed = n.toDecimal(t.cumulativeGasUsed), t.gasUsed = n.toDecimal(t.gasUsed), n.isArray(t.logs) && (t.logs = t.logs.map(function (t) { return c(t); })), t.status = n.toDecimal(t.status), t) : null; }, e.outputBlockFormatter = function (t) { return t ? (t.gasLimit = n.toDecimal(t.gasLimit), t.gasUsed = n.toDecimal(t.gasUsed), t.size = n.toDecimal(t.size), t.timestamp = n.toDecimal(t.timestamp), null !== t.number && (t.number = n.toDecimal(t.number)), t.difficulty = n.toBigNumber(t.difficulty), t.totalDifficulty = n.toBigNumber(t.totalDifficulty), n.isArray(t.transactions) && t.transactions.forEach(function (t) { if (!n.isString(t))\r\n                return a(t); }), t) : null; }, e.outputLogFormatter = c, e.inputPostFormatter = function (t) { return t ? (t.ttl = n.fromDecimal(t.ttl), t.workToProve = n.fromDecimal(t.workToProve), t.priority = n.fromDecimal(t.priority), n.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map(function (t) { return 0 === t.indexOf(\"0x\") ? t : n.fromUtf8(t); }), t) : null; }, e.outputPostFormatter = function (t) { return t ? (t.expiry = n.toDecimal(t.expiry), t.sent = n.toDecimal(t.sent), t.ttl = n.toDecimal(t.ttl), t.workProved = n.toDecimal(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map(function (t) { return n.toAscii(t); }), t) : null; }, e.inputAddressFormatter = u, e.outputSyncingFormatter = function (t) { return t ? (t.startingBlock = n.toDecimal(t.startingBlock), t.currentBlock = n.toDecimal(t.currentBlock), t.highestBlock = n.toDecimal(t.highestBlock), t.knownStates && (t.knownStates = n.toDecimal(t.knownStates), t.pulledStates = n.toDecimal(t.pulledStates)), t) : t; };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            function n() { var t, e; var r = new Promise(function (n, o) { t = (function (t) { n(t), r.isPending = !1; }), e = (function (t) { o(t), r.isPending = !1; }); }).catch(function (t) { return Promise.reject(t); }); return r.resolve = t, r.reject = e, \"finally\" in r || (r.finally = (function (t) { r.then(t), r.catch(t); })), r.isPending = !0, r; }\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), e.future = n, e.default = n;\r\n        }, function (t, e, r) { var n, o, i, s, a, c; t.exports = (n = r(0), i = (o = n).lib, s = i.Base, a = i.WordArray, (c = o.x64 = {}).Word = s.extend({ init: function (t, e) { this.high = t, this.low = e; } }), c.WordArray = s.extend({ init: function (t, e) { t = this.words = t || [], this.sigBytes = null != e ? e : 8 * t.length; }, toX32: function () { for (var t = this.words, e = t.length, r = [], n = 0; n < e; n++) {\r\n                var o = t[n];\r\n                r.push(o.high), r.push(o.low);\r\n            } return a.create(r, this.sigBytes); }, clone: function () { for (var t = s.clone.call(this), e = t.words = this.words.slice(0), r = e.length, n = 0; n < r; n++)\r\n                e[n] = e[n].clone(); return t; } }), n); }, function (t, e, r) { var n, o, i, s, a, c, u, l; t.exports = (n = r(0), i = (o = n).lib, s = i.WordArray, a = i.Hasher, c = o.algo, u = [], l = c.SHA1 = a.extend({ _doReset: function () { this._hash = new s.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]); }, _doProcessBlock: function (t, e) { for (var r = this._hash.words, n = r[0], o = r[1], i = r[2], s = r[3], a = r[4], c = 0; c < 80; c++) {\r\n                if (c < 16)\r\n                    u[c] = 0 | t[e + c];\r\n                else {\r\n                    var l = u[c - 3] ^ u[c - 8] ^ u[c - 14] ^ u[c - 16];\r\n                    u[c] = l << 1 | l >>> 31;\r\n                }\r\n                var h = (n << 5 | n >>> 27) + a + u[c];\r\n                h += c < 20 ? 1518500249 + (o & i | ~o & s) : c < 40 ? 1859775393 + (o ^ i ^ s) : c < 60 ? (o & i | o & s | i & s) - 1894007588 : (o ^ i ^ s) - 899497514, a = s, s = i, i = o << 30 | o >>> 2, o = n, n = h;\r\n            } r[0] = r[0] + n | 0, r[1] = r[1] + o | 0, r[2] = r[2] + i | 0, r[3] = r[3] + s | 0, r[4] = r[4] + a | 0; }, _doFinalize: function () { var t = this._data, e = t.words, r = 8 * this._nDataBytes, n = 8 * t.sigBytes; return e[n >>> 5] |= 128 << 24 - n % 32, e[14 + (n + 64 >>> 9 << 4)] = Math.floor(r / 4294967296), e[15 + (n + 64 >>> 9 << 4)] = r, t.sigBytes = 4 * e.length, this._process(), this._hash; }, clone: function () { var t = a.clone.call(this); return t._hash = this._hash.clone(), t; } }), o.SHA1 = a._createHelper(l), o.HmacSHA1 = a._createHmacHelper(l), n.SHA1); }, function (t, e, r) { var n, o, i, s, a, c, u; t.exports = (n = r(0), i = (o = n).lib, s = i.Base, a = o.enc, c = a.Utf8, u = o.algo, void (u.HMAC = s.extend({ init: function (t, e) { t = this._hasher = new t.init, \"string\" == typeof e && (e = c.parse(e)); var r = t.blockSize, n = 4 * r; e.sigBytes > n && (e = t.finalize(e)), e.clamp(); for (var o = this._oKey = e.clone(), i = this._iKey = e.clone(), s = o.words, a = i.words, u = 0; u < r; u++)\r\n                s[u] ^= 1549556828, a[u] ^= 909522486; o.sigBytes = i.sigBytes = n, this.reset(); }, reset: function () { var t = this._hasher; t.reset(), t.update(this._iKey); }, update: function (t) { return this._hasher.update(t), this; }, finalize: function (t) { var e = this._hasher, r = e.finalize(t); e.reset(); var n = e.finalize(this._oKey.clone().concat(r)); return n; } }))); }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), e.InvalidNumberOfSolidityArgs = function (t, e) { return new Error(\"Invalid number of arguments to Solidity function. given: \" + t + \", expected: \" + e); }, e.InvalidNumberOfRPCParams = function (t, e, r) { return new Error(\"Invalid number of input parameters to RPC method \\\"\" + t + \"\\\" given: \" + e + \", expected: \" + r); }, e.InvalidConnection = function (t) { return new Error(\"CONNECTION ERROR: Couldn't connect to node \" + t + \".\"); }, e.InvalidProvider = function () { return new Error(\"Provider not set or invalid\"); }, e.InvalidResponse = function (t) { var e = t && t.error && t.error.message ? t.error.message : \"Invalid JSON RPC response: \" + JSON.stringify(t); return new Error(e); }, e.ConnectionTimeout = function (t) { return new Error(\"CONNECTION TIMEOUT: timeout of \" + t + \" ms achived\"); };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(57);\r\n            e.ETH_UNITS = [\"wei\", \"kwei\", \"Mwei\", \"Gwei\", \"szabo\", \"finney\", \"femtoether\", \"picoether\", \"nanoether\", \"microether\", \"milliether\", \"nano\", \"micro\", \"milli\", \"ether\", \"grand\", \"Mether\", \"Gether\", \"Tether\", \"Pether\", \"Eether\", \"Zether\", \"Yether\", \"Nether\", \"Dether\", \"Vether\", \"Uether\"], e.ETH_PADDING = 32, e.ETH_SIGNATURE_LENGTH = 4, e.ETH_BIGNUMBER_ROUNDING_MODE = { ROUNDING_MODE: n.BigNumberRoundingMode.ROUND_DOWN }, e.ETH_POLLING_TIMEOUT = 500, e.defaultBlock = \"latest\";\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(61), i = r(62), s = r(63), a = r(64), c = r(65), u = r(66), l = r(67), h = r(68), f = r(69);\r\n            function p(t, e) { return t.isDynamicType(e) || t.isDynamicArray(e); }\r\n            var d = /** @class */ (function () {\r\n                function d(t) {\r\n                    this._types = t;\r\n                }\r\n                d.prototype._requireType = function (t) { var e = this._types.filter(function (e) { return e.isType(t); })[0]; if (!e)\r\n                    throw Error(\"invalid solidity type!: \" + t); return e; };\r\n                d.prototype.encodeParam = function (t, e) { return this.encodeParams([t], [e]); };\r\n                d.prototype.encodeParams = function (t, e) { var r = this.getSolidityTypes(t), n = r.map(function (r, n) { return r.encode(e[n], t[n]); }), o = r.reduce(function (e, n, o) { var i = n.staticPartLength(t[o]), s = 32 * Math.floor((i + 31) / 32); return e + (p(r[o], t[o]) ? 32 : s); }, 0); return this.encodeMultiWithOffset(t, r, n, o); };\r\n                d.prototype.encodeMultiWithOffset = function (t, e, r, o) {\r\n                    var _this = this;\r\n                    var i = o, s = \"\";\r\n                    return t.forEach(function (o, a) { if (p(e[a], t[a])) {\r\n                        s += n.formatInputInt(i).encode();\r\n                        var o_6 = _this.encodeWithOffset(t[a], e[a], r[a], i);\r\n                        i += o_6.length / 2;\r\n                    }\r\n                    else\r\n                        s += _this.encodeWithOffset(t[a], e[a], r[a], i); }), t.forEach(function (n, o) { if (p(e[o], t[o])) {\r\n                        var n_8 = _this.encodeWithOffset(t[o], e[o], r[o], i);\r\n                        i += n_8.length / 2, s += n_8;\r\n                    } }), s;\r\n                };\r\n                d.prototype.encodeWithOffset = function (t, e, r, o) { var i = 1, s = 2, a = 3, c = e.isDynamicArray(t) ? i : e.isStaticArray(t) ? s : a; if (c !== a) {\r\n                    var a_1 = e.nestedName(t), u_1 = e.staticPartLength(a_1), l_1 = c === i ? r[0] : \"\";\r\n                    if (e.isDynamicArray(a_1)) {\r\n                        var t_6 = c === i ? 2 : 0;\r\n                        for (var e_6 = 0; e_6 < r.length; e_6++)\r\n                            c === i ? t_6 += +r[e_6 - 1][0] || 0 : c === s && (t_6 += +(r[e_6 - 1] || [])[0] || 0), l_1 += n.formatInputInt(o + e_6 * u_1 + 32 * t_6).encode();\r\n                    }\r\n                    var h_1 = c === i ? r.length - 1 : r.length;\r\n                    for (var t_7 = 0; t_7 < h_1; t_7++) {\r\n                        var n_9 = l_1 / 2;\r\n                        c === i ? l_1 += this.encodeWithOffset(a_1, e, r[t_7 + 1], o + n_9) : c === s && (l_1 += this.encodeWithOffset(a_1, e, r[t_7], o + n_9));\r\n                    }\r\n                    return l_1;\r\n                } return r; };\r\n                d.prototype.decodeParam = function (t, e) { return this.decodeParams([t], e)[0]; };\r\n                d.prototype.decodeParams = function (t, e) { var r = this.getSolidityTypes(t), n = this.getOffsets(t, r); return r.map(function (r, o) { return r.decode(e, n[o], t[o]); }); };\r\n                d.prototype.getOffsets = function (t, e) { var r = e.map(function (e, r) { return e.staticPartLength(t[r]); }); for (var t_8 = 1; t_8 < r.length; t_8++)\r\n                    r[t_8] += r[t_8 - 1]; return r.map(function (r, n) { return r - e[n].staticPartLength(t[n]); }); };\r\n                d.prototype.getSolidityTypes = function (t) {\r\n                    var _this = this;\r\n                    return t.map(function (t) { return _this._requireType(t); });\r\n                };\r\n                return d;\r\n            }());\r\n            e.SolidityCoder = d, e.coder = new d([new o.SolidityTypeAddress, new i.SolidityTypeBool, new s.SolidityTypeInt, new a.SolidityTypeUInt, new c.SolidityTypeDynamicBytes, new f.SolidityTypeBytes, new u.SolidityTypeString, new l.SolidityTypeReal, new h.SolidityTypeUReal]);\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), e.toRPC = function (t) { if (t.jsonrpc = \"2.0\", !t.id || \"number\" != typeof t.id || Math.floor(t.id) !== t.id)\r\n                throw new Error(\"Invalid RPC message(invalid id) message: \" + JSON.stringify(t)); if (!t.method || \"string\" != typeof t.method || 0 === t.method.trim().length)\r\n                throw new Error(\"Invalid RPC message(invalid method) message: \" + JSON.stringify(t)); if (!t.params || \"object\" != typeof t.params)\r\n                throw new Error(\"Invalid RPC message(invalid params) message: \" + JSON.stringify(t)); return t; };\r\n        }, function (t, e, r) { var n; !function (o) {\r\n            \"use strict\";\r\n            var i, s = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i, a = Math.ceil, c = Math.floor, u = \"[BigNumber Error] \", l = u + \"Number primitive has more than 15 significant digits: \", h = 1e14, f = 14, p = 9007199254740991, d = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], m = 1e7, y = 1e9;\r\n            function g(t) { var e = 0 | t; return t > 0 || t === e ? e : e - 1; }\r\n            function _(t) { for (var e, r, n = 1, o = t.length, i = t[0] + \"\"; n < o;) {\r\n                for (e = t[n++] + \"\", r = f - e.length; r--; e = \"0\" + e)\r\n                    ;\r\n                i += e;\r\n            } for (o = i.length; 48 === i.charCodeAt(--o);)\r\n                ; return i.slice(0, o + 1 || 1); }\r\n            function v(t, e) { var r, n, o = t.c, i = e.c, s = t.s, a = e.s, c = t.e, u = e.e; if (!s || !a)\r\n                return null; if (r = o && !o[0], n = i && !i[0], r || n)\r\n                return r ? n ? 0 : -a : s; if (s != a)\r\n                return s; if (r = s < 0, n = c == u, !o || !i)\r\n                return n ? 0 : !o ^ r ? 1 : -1; if (!n)\r\n                return c > u ^ r ? 1 : -1; for (a = (c = o.length) < (u = i.length) ? c : u, s = 0; s < a; s++)\r\n                if (o[s] != i[s])\r\n                    return o[s] > i[s] ^ r ? 1 : -1; return c == u ? 0 : c > u ^ r ? 1 : -1; }\r\n            function w(t, e, r, n) { if (t < e || t > r || t !== (t < 0 ? a(t) : c(t)))\r\n                throw Error(u + (n || \"Argument\") + (\"number\" == typeof t ? t < e || t > r ? \" out of range: \" : \" not an integer: \" : \" not a primitive number: \") + t); }\r\n            function b(t) { return \"[object Array]\" == Object.prototype.toString.call(t); }\r\n            function B(t) { var e = t.c.length - 1; return g(t.e / f) == e && t.c[e] % 2 != 0; }\r\n            function F(t, e) { return (t.length > 1 ? t.charAt(0) + \".\" + t.slice(1) : t) + (e < 0 ? \"e\" : \"e+\") + e; }\r\n            function N(t, e, r) { var n, o; if (e < 0) {\r\n                for (o = r + \".\"; ++e; o += r)\r\n                    ;\r\n                t = o + t;\r\n            }\r\n            else if (++e > (n = t.length)) {\r\n                for (o = r, e -= n; --e; o += r)\r\n                    ;\r\n                t += o;\r\n            }\r\n            else\r\n                e < n && (t = t.slice(0, e) + \".\" + t.slice(e)); return t; }\r\n            (i = function t(e) { var r, n, o, i, k, x, S, A, O, T = W.prototype = { constructor: W, toString: null, valueOf: null }, P = new W(1), M = 20, C = 4, E = -7, D = 21, R = -1e7, I = 1e7, H = !1, j = 1, U = 0, L = { decimalSeparator: \".\", groupSeparator: \",\", groupSize: 3, secondaryGroupSize: 0, fractionGroupSeparator: \" \", fractionGroupSize: 0 }, z = \"0123456789abcdefghijklmnopqrstuvwxyz\"; function W(t, e) { var r, i, a, u, h, d, m, y = this; if (!(y instanceof W))\r\n                return new W(t, e); if (null == e) {\r\n                if (t instanceof W)\r\n                    return y.s = t.s, y.e = t.e, void (y.c = (t = t.c) ? t.slice() : t);\r\n                if ((h = \"number\" == typeof t) && 0 * t == 0) {\r\n                    if (y.s = 1 / t < 0 ? (t = -t, -1) : 1, t === ~~t) {\r\n                        for (a = 0, u = t; u >= 10; u /= 10, a++)\r\n                            ;\r\n                        return y.e = a, void (y.c = [t]);\r\n                    }\r\n                    m = t + \"\";\r\n                }\r\n                else {\r\n                    if (!s.test(m = t + \"\"))\r\n                        return o(y, m, h);\r\n                    y.s = 45 == m.charCodeAt(0) ? (m = m.slice(1), -1) : 1;\r\n                }\r\n            }\r\n            else {\r\n                if (w(e, 2, z.length, \"Base\"), m = t + \"\", 10 == e)\r\n                    return V(y = new W(t instanceof W ? t : m), M + y.e + 1, C);\r\n                if (h = \"number\" == typeof t) {\r\n                    if (0 * t != 0)\r\n                        return o(y, m, h, e);\r\n                    if (y.s = 1 / t < 0 ? (m = m.slice(1), -1) : 1, W.DEBUG && m.replace(/^0\\.0*|\\./, \"\").length > 15)\r\n                        throw Error(l + t);\r\n                    h = !1;\r\n                }\r\n                else\r\n                    y.s = 45 === m.charCodeAt(0) ? (m = m.slice(1), -1) : 1, e > 10 && e < 37 && (m = m.toLowerCase());\r\n                for (r = z.slice(0, e), a = u = 0, d = m.length; u < d; u++)\r\n                    if (r.indexOf(i = m.charAt(u)) < 0) {\r\n                        if (\".\" == i && u > a) {\r\n                            a = d;\r\n                            continue;\r\n                        }\r\n                        return o(y, t + \"\", h, e);\r\n                    }\r\n                m = n(m, e, 10, y.s);\r\n            } for ((a = m.indexOf(\".\")) > -1 && (m = m.replace(\".\", \"\")), (u = m.search(/e/i)) > 0 ? (a < 0 && (a = u), a += +m.slice(u + 1), m = m.substring(0, u)) : a < 0 && (a = m.length), u = 0; 48 === m.charCodeAt(u); u++)\r\n                ; for (d = m.length; 48 === m.charCodeAt(--d);)\r\n                ; if (m = m.slice(u, ++d)) {\r\n                if (d -= u, h && W.DEBUG && d > 15 && (t > p || t !== c(t)))\r\n                    throw Error(l + y.s * t);\r\n                if ((a = a - u - 1) > I)\r\n                    y.c = y.e = null;\r\n                else if (a < R)\r\n                    y.c = [y.e = 0];\r\n                else {\r\n                    if (y.e = a, y.c = [], u = (a + 1) % f, a < 0 && (u += f), u < d) {\r\n                        for (u && y.c.push(+m.slice(0, u)), d -= f; u < d;)\r\n                            y.c.push(+m.slice(u, u += f));\r\n                        m = m.slice(u), u = f - m.length;\r\n                    }\r\n                    else\r\n                        u -= d;\r\n                    for (; u--; m += \"0\")\r\n                        ;\r\n                    y.c.push(+m);\r\n                }\r\n            }\r\n            else\r\n                y.c = [y.e = 0]; } function q(t, e, r, n) { var o, i, s, a, c; if (null == r ? r = C : w(r, 0, 8), !t.c)\r\n                return t.toString(); if (o = t.c[0], s = t.e, null == e)\r\n                c = _(t.c), c = 1 == n || 2 == n && s <= E ? F(c, s) : N(c, s, \"0\");\r\n            else if (i = (t = V(new W(t), e, r)).e, a = (c = _(t.c)).length, 1 == n || 2 == n && (e <= i || i <= E)) {\r\n                for (; a < e; c += \"0\", a++)\r\n                    ;\r\n                c = F(c, i);\r\n            }\r\n            else if (e -= s, c = N(c, i, \"0\"), i + 1 > a) {\r\n                if (--e > 0)\r\n                    for (c += \".\"; e--; c += \"0\")\r\n                        ;\r\n            }\r\n            else if ((e += i - a) > 0)\r\n                for (i + 1 == a && (c += \".\"); e--; c += \"0\")\r\n                    ; return t.s < 0 && o ? \"-\" + c : c; } function $(t, e) { var r, n, o = 0; for (b(t[0]) && (t = t[0]), r = new W(t[0]); ++o < t.length;) {\r\n                if (!(n = new W(t[o])).s) {\r\n                    r = n;\r\n                    break;\r\n                }\r\n                e.call(r, n) && (r = n);\r\n            } return r; } function G(t, e, r) { for (var n = 1, o = e.length; !e[--o]; e.pop())\r\n                ; for (o = e[0]; o >= 10; o /= 10, n++)\r\n                ; return (r = n + r * f - 1) > I ? t.c = t.e = null : r < R ? t.c = [t.e = 0] : (t.e = r, t.c = e), t; } function V(t, e, r, n) { var o, i, s, u, l, p, m, y = t.c, g = d; if (y) {\r\n                t: {\r\n                    for (o = 1, u = y[0]; u >= 10; u /= 10, o++)\r\n                        ;\r\n                    if ((i = e - o) < 0)\r\n                        i += f, s = e, m = (l = y[p = 0]) / g[o - s - 1] % 10 | 0;\r\n                    else if ((p = a((i + 1) / f)) >= y.length) {\r\n                        if (!n)\r\n                            break t;\r\n                        for (; y.length <= p; y.push(0))\r\n                            ;\r\n                        l = m = 0, o = 1, s = (i %= f) - f + 1;\r\n                    }\r\n                    else {\r\n                        for (l = u = y[p], o = 1; u >= 10; u /= 10, o++)\r\n                            ;\r\n                        m = (s = (i %= f) - f + o) < 0 ? 0 : l / g[o - s - 1] % 10 | 0;\r\n                    }\r\n                    if (n = n || e < 0 || null != y[p + 1] || (s < 0 ? l : l % g[o - s - 1]), n = r < 4 ? (m || n) && (0 == r || r == (t.s < 0 ? 3 : 2)) : m > 5 || 5 == m && (4 == r || n || 6 == r && (i > 0 ? s > 0 ? l / g[o - s] : 0 : y[p - 1]) % 10 & 1 || r == (t.s < 0 ? 8 : 7)), e < 1 || !y[0])\r\n                        return y.length = 0, n ? (e -= t.e + 1, y[0] = g[(f - e % f) % f], t.e = -e || 0) : y[0] = t.e = 0, t;\r\n                    if (0 == i ? (y.length = p, u = 1, p--) : (y.length = p + 1, u = g[f - i], y[p] = s > 0 ? c(l / g[o - s] % g[s]) * u : 0), n)\r\n                        for (;;) {\r\n                            if (0 == p) {\r\n                                for (i = 1, s = y[0]; s >= 10; s /= 10, i++)\r\n                                    ;\r\n                                for (s = y[0] += u, u = 1; s >= 10; s /= 10, u++)\r\n                                    ;\r\n                                i != u && (t.e++, y[0] == h && (y[0] = 1));\r\n                                break;\r\n                            }\r\n                            if (y[p] += u, y[p] != h)\r\n                                break;\r\n                            y[p--] = 0, u = 1;\r\n                        }\r\n                    for (i = y.length; 0 === y[--i]; y.pop())\r\n                        ;\r\n                }\r\n                t.e > I ? t.c = t.e = null : t.e < R && (t.c = [t.e = 0]);\r\n            } return t; } return W.clone = t, W.ROUND_UP = 0, W.ROUND_DOWN = 1, W.ROUND_CEIL = 2, W.ROUND_FLOOR = 3, W.ROUND_HALF_UP = 4, W.ROUND_HALF_DOWN = 5, W.ROUND_HALF_EVEN = 6, W.ROUND_HALF_CEIL = 7, W.ROUND_HALF_FLOOR = 8, W.EUCLID = 9, W.config = W.set = function (t) { var e, r; if (null != t) {\r\n                if (\"object\" != typeof t)\r\n                    throw Error(u + \"Object expected: \" + t);\r\n                if (t.hasOwnProperty(e = \"DECIMAL_PLACES\") && (w(r = t[e], 0, y, e), M = r), t.hasOwnProperty(e = \"ROUNDING_MODE\") && (w(r = t[e], 0, 8, e), C = r), t.hasOwnProperty(e = \"EXPONENTIAL_AT\") && (b(r = t[e]) ? (w(r[0], -y, 0, e), w(r[1], 0, y, e), E = r[0], D = r[1]) : (w(r, -y, y, e), E = -(D = r < 0 ? -r : r))), t.hasOwnProperty(e = \"RANGE\"))\r\n                    if (b(r = t[e]))\r\n                        w(r[0], -y, -1, e), w(r[1], 1, y, e), R = r[0], I = r[1];\r\n                    else {\r\n                        if (w(r, -y, y, e), !r)\r\n                            throw Error(u + e + \" cannot be zero: \" + r);\r\n                        R = -(I = r < 0 ? -r : r);\r\n                    }\r\n                if (t.hasOwnProperty(e = \"CRYPTO\")) {\r\n                    if ((r = t[e]) !== !!r)\r\n                        throw Error(u + e + \" not true or false: \" + r);\r\n                    if (r) {\r\n                        if (\"undefined\" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes)\r\n                            throw H = !r, Error(u + \"crypto unavailable\");\r\n                        H = r;\r\n                    }\r\n                    else\r\n                        H = r;\r\n                }\r\n                if (t.hasOwnProperty(e = \"MODULO_MODE\") && (w(r = t[e], 0, 9, e), j = r), t.hasOwnProperty(e = \"POW_PRECISION\") && (w(r = t[e], 0, y, e), U = r), t.hasOwnProperty(e = \"FORMAT\")) {\r\n                    if (\"object\" != typeof (r = t[e]))\r\n                        throw Error(u + e + \" not an object: \" + r);\r\n                    L = r;\r\n                }\r\n                if (t.hasOwnProperty(e = \"ALPHABET\")) {\r\n                    if (\"string\" != typeof (r = t[e]) || /^.$|\\.|(.).*\\1/.test(r))\r\n                        throw Error(u + e + \" invalid: \" + r);\r\n                    z = r;\r\n                }\r\n            } return { DECIMAL_PLACES: M, ROUNDING_MODE: C, EXPONENTIAL_AT: [E, D], RANGE: [R, I], CRYPTO: H, MODULO_MODE: j, POW_PRECISION: U, FORMAT: L, ALPHABET: z }; }, W.isBigNumber = function (t) { return t instanceof W || t && !0 === t._isBigNumber || !1; }, W.maximum = W.max = function () { return $(arguments, T.lt); }, W.minimum = W.min = function () { return $(arguments, T.gt); }, W.random = (i = 9007199254740992 * Math.random() & 2097151 ? function () { return c(9007199254740992 * Math.random()); } : function () { return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0); }, function (t) { var e, r, n, o, s, l = 0, h = [], p = new W(P); if (null == t ? t = M : w(t, 0, y), o = a(t / f), H)\r\n                if (crypto.getRandomValues) {\r\n                    for (e = crypto.getRandomValues(new Uint32Array(o *= 2)); l < o;)\r\n                        (s = 131072 * e[l] + (e[l + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)), e[l] = r[0], e[l + 1] = r[1]) : (h.push(s % 1e14), l += 2);\r\n                    l = o / 2;\r\n                }\r\n                else {\r\n                    if (!crypto.randomBytes)\r\n                        throw H = !1, Error(u + \"crypto unavailable\");\r\n                    for (e = crypto.randomBytes(o *= 7); l < o;)\r\n                        (s = 281474976710656 * (31 & e[l]) + 1099511627776 * e[l + 1] + 4294967296 * e[l + 2] + 16777216 * e[l + 3] + (e[l + 4] << 16) + (e[l + 5] << 8) + e[l + 6]) >= 9e15 ? crypto.randomBytes(7).copy(e, l) : (h.push(s % 1e14), l += 7);\r\n                    l = o / 7;\r\n                } if (!H)\r\n                for (; l < o;)\r\n                    (s = i()) < 9e15 && (h[l++] = s % 1e14); for (o = h[--l], t %= f, o && t && (s = d[f - t], h[l] = c(o / s) * s); 0 === h[l]; h.pop(), l--)\r\n                ; if (l < 0)\r\n                h = [n = 0];\r\n            else {\r\n                for (n = -1; 0 === h[0]; h.splice(0, 1), n -= f)\r\n                    ;\r\n                for (l = 1, s = h[0]; s >= 10; s /= 10, l++)\r\n                    ;\r\n                l < f && (n -= f - l);\r\n            } return p.e = n, p.c = h, p; }), n = function () { function t(t, e, r, n) { for (var o, i, s = [0], a = 0, c = t.length; a < c;) {\r\n                for (i = s.length; i--; s[i] *= e)\r\n                    ;\r\n                for (s[0] += n.indexOf(t.charAt(a++)), o = 0; o < s.length; o++)\r\n                    s[o] > r - 1 && (null == s[o + 1] && (s[o + 1] = 0), s[o + 1] += s[o] / r | 0, s[o] %= r);\r\n            } return s.reverse(); } return function (e, n, o, i, s) { var a, c, u, l, h, f, p, d, m = e.indexOf(\".\"), y = M, g = C; for (m >= 0 && (l = U, U = 0, e = e.replace(\".\", \"\"), f = (d = new W(n)).pow(e.length - m), U = l, d.c = t(N(_(f.c), f.e, \"0\"), 10, o, \"0123456789\"), d.e = d.c.length), u = l = (p = t(e, n, o, s ? (a = z, \"0123456789\") : (a = \"0123456789\", z))).length; 0 == p[--l]; p.pop())\r\n                ; if (!p[0])\r\n                return a.charAt(0); if (m < 0 ? --u : (f.c = p, f.e = u, f.s = i, p = (f = r(f, d, y, g, o)).c, h = f.r, u = f.e), m = p[c = u + y + 1], l = o / 2, h = h || c < 0 || null != p[c + 1], h = g < 4 ? (null != m || h) && (0 == g || g == (f.s < 0 ? 3 : 2)) : m > l || m == l && (4 == g || h || 6 == g && 1 & p[c - 1] || g == (f.s < 0 ? 8 : 7)), c < 1 || !p[0])\r\n                e = h ? N(a.charAt(1), -y, a.charAt(0)) : a.charAt(0);\r\n            else {\r\n                if (p.length = c, h)\r\n                    for (--o; ++p[--c] > o;)\r\n                        p[c] = 0, c || (++u, p = [1].concat(p));\r\n                for (l = p.length; !p[--l];)\r\n                    ;\r\n                for (m = 0, e = \"\"; m <= l; e += a.charAt(p[m++]))\r\n                    ;\r\n                e = N(e, u, a.charAt(0));\r\n            } return e; }; }(), r = function () { function t(t, e, r) { var n, o, i, s, a = 0, c = t.length, u = e % m, l = e / m | 0; for (t = t.slice(); c--;)\r\n                a = ((o = u * (i = t[c] % m) + (n = l * i + (s = t[c] / m | 0) * u) % m * m + a) / r | 0) + (n / m | 0) + l * s, t[c] = o % r; return a && (t = [a].concat(t)), t; } function e(t, e, r, n) { var o, i; if (r != n)\r\n                i = r > n ? 1 : -1;\r\n            else\r\n                for (o = i = 0; o < r; o++)\r\n                    if (t[o] != e[o]) {\r\n                        i = t[o] > e[o] ? 1 : -1;\r\n                        break;\r\n                    } return i; } function r(t, e, r, n) { for (var o = 0; r--;)\r\n                t[r] -= o, o = t[r] < e[r] ? 1 : 0, t[r] = o * n + t[r] - e[r]; for (; !t[0] && t.length > 1; t.splice(0, 1))\r\n                ; } return function (n, o, i, s, a) { var u, l, p, d, m, y, _, v, w, b, B, F, N, k, x, S, A, O = n.s == o.s ? 1 : -1, T = n.c, P = o.c; if (!(T && T[0] && P && P[0]))\r\n                return new W(n.s && o.s && (T ? !P || T[0] != P[0] : P) ? T && 0 == T[0] || !P ? 0 * O : O / 0 : NaN); for (w = (v = new W(O)).c = [], O = i + (l = n.e - o.e) + 1, a || (a = h, l = g(n.e / f) - g(o.e / f), O = O / f | 0), p = 0; P[p] == (T[p] || 0); p++)\r\n                ; if (P[p] > (T[p] || 0) && l--, O < 0)\r\n                w.push(1), d = !0;\r\n            else {\r\n                for (k = T.length, S = P.length, p = 0, O += 2, (m = c(a / (P[0] + 1))) > 1 && (P = t(P, m, a), T = t(T, m, a), S = P.length, k = T.length), N = S, B = (b = T.slice(0, S)).length; B < S; b[B++] = 0)\r\n                    ;\r\n                A = P.slice(), A = [0].concat(A), x = P[0], P[1] >= a / 2 && x++;\r\n                do {\r\n                    if (m = 0, (u = e(P, b, S, B)) < 0) {\r\n                        if (F = b[0], S != B && (F = F * a + (b[1] || 0)), (m = c(F / x)) > 1)\r\n                            for (m >= a && (m = a - 1), _ = (y = t(P, m, a)).length, B = b.length; 1 == e(y, b, _, B);)\r\n                                m--, r(y, S < _ ? A : P, _, a), _ = y.length, u = 1;\r\n                        else\r\n                            0 == m && (u = m = 1), _ = (y = P.slice()).length;\r\n                        if (_ < B && (y = [0].concat(y)), r(b, y, B, a), B = b.length, -1 == u)\r\n                            for (; e(P, b, S, B) < 1;)\r\n                                m++, r(b, S < B ? A : P, B, a), B = b.length;\r\n                    }\r\n                    else\r\n                        0 === u && (m++, b = [0]);\r\n                    w[p++] = m, b[0] ? b[B++] = T[N] || 0 : (b = [T[N]], B = 1);\r\n                } while ((N++ < k || null != b[0]) && O--);\r\n                d = null != b[0], w[0] || w.splice(0, 1);\r\n            } if (a == h) {\r\n                for (p = 1, O = w[0]; O >= 10; O /= 10, p++)\r\n                    ;\r\n                V(v, i + (v.e = p + l * f - 1) + 1, s, d);\r\n            }\r\n            else\r\n                v.e = l, v.r = +d; return v; }; }(), k = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i, x = /^([^.]+)\\.$/, S = /^\\.([^.]+)$/, A = /^-?(Infinity|NaN)$/, O = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g, o = function (t, e, r, n) { var o, i = r ? e : e.replace(O, \"\"); if (A.test(i))\r\n                t.s = isNaN(i) ? null : i < 0 ? -1 : 1, t.c = t.e = null;\r\n            else {\r\n                if (!r && (i = i.replace(k, function (t, e, r) { return o = \"x\" == (r = r.toLowerCase()) ? 16 : \"b\" == r ? 2 : 8, n && n != o ? t : e; }), n && (o = n, i = i.replace(x, \"$1\").replace(S, \"0.$1\")), e != i))\r\n                    return new W(i, o);\r\n                if (W.DEBUG)\r\n                    throw Error(u + \"Not a\" + (n ? \" base \" + n : \"\") + \" number: \" + e);\r\n                t.c = t.e = t.s = null;\r\n            } }, T.absoluteValue = T.abs = function () { var t = new W(this); return t.s < 0 && (t.s = 1), t; }, T.comparedTo = function (t, e) { return v(this, new W(t, e)); }, T.decimalPlaces = T.dp = function (t, e) { var r, n, o, i = this; if (null != t)\r\n                return w(t, 0, y), null == e ? e = C : w(e, 0, 8), V(new W(i), t + i.e + 1, e); if (!(r = i.c))\r\n                return null; if (n = ((o = r.length - 1) - g(this.e / f)) * f, o = r[o])\r\n                for (; o % 10 == 0; o /= 10, n--)\r\n                    ; return n < 0 && (n = 0), n; }, T.dividedBy = T.div = function (t, e) { return r(this, new W(t, e), M, C); }, T.dividedToIntegerBy = T.idiv = function (t, e) { return r(this, new W(t, e), 0, 1); }, T.exponentiatedBy = T.pow = function (t, e) { var r, n, o, i, s, l, h, p = this; if ((t = new W(t)).c && !t.isInteger())\r\n                throw Error(u + \"Exponent not an integer: \" + t); if (null != e && (e = new W(e)), i = t.e > 14, !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !t.c || !t.c[0])\r\n                return h = new W(Math.pow(+p.valueOf(), i ? 2 - B(t) : +t)), e ? h.mod(e) : h; if (s = t.s < 0, e) {\r\n                if (e.c ? !e.c[0] : !e.s)\r\n                    return new W(NaN);\r\n                (n = !s && p.isInteger() && e.isInteger()) && (p = p.mod(e));\r\n            }\r\n            else {\r\n                if (t.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || i && p.c[1] >= 24e7 : p.c[0] < 8e13 || i && p.c[0] <= 9999975e7)))\r\n                    return o = p.s < 0 && B(t) ? -0 : 0, p.e > -1 && (o = 1 / o), new W(s ? 1 / o : o);\r\n                U && (o = a(U / f + 2));\r\n            } for (i ? (r = new W(.5), l = B(t)) : l = t % 2, s && (t.s = 1), h = new W(P);;) {\r\n                if (l) {\r\n                    if (!(h = h.times(p)).c)\r\n                        break;\r\n                    o ? h.c.length > o && (h.c.length = o) : n && (h = h.mod(e));\r\n                }\r\n                if (i) {\r\n                    if (V(t = t.times(r), t.e + 1, 1), !t.c[0])\r\n                        break;\r\n                    i = t.e > 14, l = B(t);\r\n                }\r\n                else {\r\n                    if (!(t = c(t / 2)))\r\n                        break;\r\n                    l = t % 2;\r\n                }\r\n                p = p.times(p), o ? p.c && p.c.length > o && (p.c.length = o) : n && (p = p.mod(e));\r\n            } return n ? h : (s && (h = P.div(h)), e ? h.mod(e) : o ? V(h, U, C, void 0) : h); }, T.integerValue = function (t) { var e = new W(this); return null == t ? t = C : w(t, 0, 8), V(e, e.e + 1, t); }, T.isEqualTo = T.eq = function (t, e) { return 0 === v(this, new W(t, e)); }, T.isFinite = function () { return !!this.c; }, T.isGreaterThan = T.gt = function (t, e) { return v(this, new W(t, e)) > 0; }, T.isGreaterThanOrEqualTo = T.gte = function (t, e) { return 1 === (e = v(this, new W(t, e))) || 0 === e; }, T.isInteger = function () { return !!this.c && g(this.e / f) > this.c.length - 2; }, T.isLessThan = T.lt = function (t, e) { return v(this, new W(t, e)) < 0; }, T.isLessThanOrEqualTo = T.lte = function (t, e) { return -1 === (e = v(this, new W(t, e))) || 0 === e; }, T.isNaN = function () { return !this.s; }, T.isNegative = function () { return this.s < 0; }, T.isPositive = function () { return this.s > 0; }, T.isZero = function () { return !!this.c && 0 == this.c[0]; }, T.minus = function (t, e) { var r, n, o, i, s = this, a = s.s; if (e = (t = new W(t, e)).s, !a || !e)\r\n                return new W(NaN); if (a != e)\r\n                return t.s = -e, s.plus(t); var c = s.e / f, u = t.e / f, l = s.c, p = t.c; if (!c || !u) {\r\n                if (!l || !p)\r\n                    return l ? (t.s = -e, t) : new W(p ? s : NaN);\r\n                if (!l[0] || !p[0])\r\n                    return p[0] ? (t.s = -e, t) : new W(l[0] ? s : 3 == C ? -0 : 0);\r\n            } if (c = g(c), u = g(u), l = l.slice(), a = c - u) {\r\n                for ((i = a < 0) ? (a = -a, o = l) : (u = c, o = p), o.reverse(), e = a; e--; o.push(0))\r\n                    ;\r\n                o.reverse();\r\n            }\r\n            else\r\n                for (n = (i = (a = l.length) < (e = p.length)) ? a : e, a = e = 0; e < n; e++)\r\n                    if (l[e] != p[e]) {\r\n                        i = l[e] < p[e];\r\n                        break;\r\n                    } if (i && (o = l, l = p, p = o, t.s = -t.s), (e = (n = p.length) - (r = l.length)) > 0)\r\n                for (; e--; l[r++] = 0)\r\n                    ; for (e = h - 1; n > a;) {\r\n                if (l[--n] < p[n]) {\r\n                    for (r = n; r && !l[--r]; l[r] = e)\r\n                        ;\r\n                    --l[r], l[n] += h;\r\n                }\r\n                l[n] -= p[n];\r\n            } for (; 0 == l[0]; l.splice(0, 1), --u)\r\n                ; return l[0] ? G(t, l, u) : (t.s = 3 == C ? -1 : 1, t.c = [t.e = 0], t); }, T.modulo = T.mod = function (t, e) { var n, o, i = this; return t = new W(t, e), !i.c || !t.s || t.c && !t.c[0] ? new W(NaN) : !t.c || i.c && !i.c[0] ? new W(i) : (9 == j ? (o = t.s, t.s = 1, n = r(i, t, 0, 3), t.s = o, n.s *= o) : n = r(i, t, 0, j), (t = i.minus(n.times(t))).c[0] || 1 != j || (t.s = i.s), t); }, T.multipliedBy = T.times = function (t, e) { var r, n, o, i, s, a, c, u, l, p, d, y, _, v, w, b = this, B = b.c, F = (t = new W(t, e)).c; if (!(B && F && B[0] && F[0]))\r\n                return !b.s || !t.s || B && !B[0] && !F || F && !F[0] && !B ? t.c = t.e = t.s = null : (t.s *= b.s, B && F ? (t.c = [0], t.e = 0) : t.c = t.e = null), t; for (n = g(b.e / f) + g(t.e / f), t.s *= b.s, (c = B.length) < (p = F.length) && (_ = B, B = F, F = _, o = c, c = p, p = o), o = c + p, _ = []; o--; _.push(0))\r\n                ; for (v = h, w = m, o = p; --o >= 0;) {\r\n                for (r = 0, d = F[o] % w, y = F[o] / w | 0, i = o + (s = c); i > o;)\r\n                    r = ((u = d * (u = B[--s] % w) + (a = y * u + (l = B[s] / w | 0) * d) % w * w + _[i] + r) / v | 0) + (a / w | 0) + y * l, _[i--] = u % v;\r\n                _[i] = r;\r\n            } return r ? ++n : _.splice(0, 1), G(t, _, n); }, T.negated = function () { var t = new W(this); return t.s = -t.s || null, t; }, T.plus = function (t, e) { var r, n = this, o = n.s; if (e = (t = new W(t, e)).s, !o || !e)\r\n                return new W(NaN); if (o != e)\r\n                return t.s = -e, n.minus(t); var i = n.e / f, s = t.e / f, a = n.c, c = t.c; if (!i || !s) {\r\n                if (!a || !c)\r\n                    return new W(o / 0);\r\n                if (!a[0] || !c[0])\r\n                    return c[0] ? t : new W(a[0] ? n : 0 * o);\r\n            } if (i = g(i), s = g(s), a = a.slice(), o = i - s) {\r\n                for (o > 0 ? (s = i, r = c) : (o = -o, r = a), r.reverse(); o--; r.push(0))\r\n                    ;\r\n                r.reverse();\r\n            } for ((o = a.length) - (e = c.length) < 0 && (r = c, c = a, a = r, e = o), o = 0; e;)\r\n                o = (a[--e] = a[e] + c[e] + o) / h | 0, a[e] = h === a[e] ? 0 : a[e] % h; return o && (a = [o].concat(a), ++s), G(t, a, s); }, T.precision = T.sd = function (t, e) { var r, n, o, i = this; if (null != t && t !== !!t)\r\n                return w(t, 1, y), null == e ? e = C : w(e, 0, 8), V(new W(i), t, e); if (!(r = i.c))\r\n                return null; if (n = (o = r.length - 1) * f + 1, o = r[o]) {\r\n                for (; o % 10 == 0; o /= 10, n--)\r\n                    ;\r\n                for (o = r[0]; o >= 10; o /= 10, n++)\r\n                    ;\r\n            } return t && i.e + 1 > n && (n = i.e + 1), n; }, T.shiftedBy = function (t) { return w(t, -p, p), this.times(\"1e\" + t); }, T.squareRoot = T.sqrt = function () { var t, e, n, o, i, s = this, a = s.c, c = s.s, u = s.e, l = M + 4, h = new W(\"0.5\"); if (1 !== c || !a || !a[0])\r\n                return new W(!c || c < 0 && (!a || a[0]) ? NaN : a ? s : 1 / 0); if (0 == (c = Math.sqrt(+s)) || c == 1 / 0 ? (((e = _(a)).length + u) % 2 == 0 && (e += \"0\"), c = Math.sqrt(e), u = g((u + 1) / 2) - (u < 0 || u % 2), n = new W(e = c == 1 / 0 ? \"1e\" + u : (e = c.toExponential()).slice(0, e.indexOf(\"e\") + 1) + u)) : n = new W(c + \"\"), n.c[0])\r\n                for ((c = (u = n.e) + l) < 3 && (c = 0);;)\r\n                    if (i = n, n = h.times(i.plus(r(s, i, l, 1))), _(i.c).slice(0, c) === (e = _(n.c)).slice(0, c)) {\r\n                        if (n.e < u && --c, \"9999\" != (e = e.slice(c - 3, c + 1)) && (o || \"4999\" != e)) {\r\n                            +e && (+e.slice(1) || \"5\" != e.charAt(0)) || (V(n, n.e + M + 2, 1), t = !n.times(n).eq(s));\r\n                            break;\r\n                        }\r\n                        if (!o && (V(i, i.e + M + 2, 0), i.times(i).eq(s))) {\r\n                            n = i;\r\n                            break;\r\n                        }\r\n                        l += 4, c += 4, o = 1;\r\n                    } return V(n, n.e + M + 1, C, t); }, T.toExponential = function (t, e) { return null != t && (w(t, 0, y), t++), q(this, t, e, 1); }, T.toFixed = function (t, e) { return null != t && (w(t, 0, y), t = t + this.e + 1), q(this, t, e); }, T.toFormat = function (t, e) { var r = this.toFixed(t, e); if (this.c) {\r\n                var n, o = r.split(\".\"), i = +L.groupSize, s = +L.secondaryGroupSize, a = L.groupSeparator, c = o[0], u = o[1], l = this.s < 0, h = l ? c.slice(1) : c, f = h.length;\r\n                if (s && (n = i, i = s, s = n, f -= n), i > 0 && f > 0) {\r\n                    for (n = f % i || i, c = h.substr(0, n); n < f; n += i)\r\n                        c += a + h.substr(n, i);\r\n                    s > 0 && (c += a + h.slice(n)), l && (c = \"-\" + c);\r\n                }\r\n                r = u ? c + L.decimalSeparator + ((s = +L.fractionGroupSize) ? u.replace(new RegExp(\"\\\\d{\" + s + \"}\\\\B\", \"g\"), \"$&\" + L.fractionGroupSeparator) : u) : c;\r\n            } return r; }, T.toFraction = function (t) { var e, n, o, i, s, a, c, l, h, p, m, y, g = this, v = g.c; if (null != t && (!(l = new W(t)).isInteger() && (l.c || 1 !== l.s) || l.lt(P)))\r\n                throw Error(u + \"Argument \" + (l.isInteger() ? \"out of range: \" : \"not an integer: \") + t); if (!v)\r\n                return g.toString(); for (n = new W(P), p = o = new W(P), i = h = new W(P), y = _(v), a = n.e = y.length - g.e - 1, n.c[0] = d[(c = a % f) < 0 ? f + c : c], t = !t || l.comparedTo(n) > 0 ? a > 0 ? n : p : l, c = I, I = 1 / 0, l = new W(y), h.c[0] = 0; m = r(l, n, 0, 1), 1 != (s = o.plus(m.times(i))).comparedTo(t);)\r\n                o = i, i = s, p = h.plus(m.times(s = p)), h = s, n = l.minus(m.times(s = n)), l = s; return s = r(t.minus(o), i, 0, 1), h = h.plus(s.times(p)), o = o.plus(s.times(i)), h.s = p.s = g.s, e = r(p, i, a *= 2, C).minus(g).abs().comparedTo(r(h, o, a, C).minus(g).abs()) < 1 ? [p.toString(), i.toString()] : [h.toString(), o.toString()], I = c, e; }, T.toNumber = function () { return +this; }, T.toPrecision = function (t, e) { return null != t && w(t, 1, y), q(this, t, e, 2); }, T.toString = function (t) { var e, r = this, o = r.s, i = r.e; return null === i ? o ? (e = \"Infinity\", o < 0 && (e = \"-\" + e)) : e = \"NaN\" : (e = _(r.c), null == t ? e = i <= E || i >= D ? F(e, i) : N(e, i, \"0\") : (w(t, 2, z.length, \"Base\"), e = n(N(e, i, \"0\"), 10, t, o, !0)), o < 0 && r.c[0] && (e = \"-\" + e)), e; }, T.valueOf = T.toJSON = function () { var t, e = this, r = e.e; return null === r ? e.toString() : (t = _(e.c), t = r <= E || r >= D ? F(t, r) : N(t, r, \"0\"), e.s < 0 ? \"-\" + t : t); }, T._isBigNumber = !0, null != e && W.set(e), W; }()).default = i.BigNumber = i, void 0 === (n = function () { return i; }.call(e, r, e, t)) || (t.exports = n);\r\n        }(); }, function (t, e, r) { var n; t.exports = (n = r(0), function (t) { var e = n, r = e.lib, o = r.WordArray, i = r.Hasher, s = e.algo, a = [], c = []; !function () { function e(e) { for (var r = t.sqrt(e), n = 2; n <= r; n++)\r\n            if (!(e % n))\r\n                return !1; return !0; } function r(t) { return 4294967296 * (t - (0 | t)) | 0; } for (var n = 2, o = 0; o < 64;)\r\n            e(n) && (o < 8 && (a[o] = r(t.pow(n, .5))), c[o] = r(t.pow(n, 1 / 3)), o++), n++; }(); var u = [], l = s.SHA256 = i.extend({ _doReset: function () { this._hash = new o.init(a.slice(0)); }, _doProcessBlock: function (t, e) { for (var r = this._hash.words, n = r[0], o = r[1], i = r[2], s = r[3], a = r[4], l = r[5], h = r[6], f = r[7], p = 0; p < 64; p++) {\r\n                if (p < 16)\r\n                    u[p] = 0 | t[e + p];\r\n                else {\r\n                    var d = u[p - 15], m = (d << 25 | d >>> 7) ^ (d << 14 | d >>> 18) ^ d >>> 3, y = u[p - 2], g = (y << 15 | y >>> 17) ^ (y << 13 | y >>> 19) ^ y >>> 10;\r\n                    u[p] = m + u[p - 7] + g + u[p - 16];\r\n                }\r\n                var _ = n & o ^ n & i ^ o & i, v = (n << 30 | n >>> 2) ^ (n << 19 | n >>> 13) ^ (n << 10 | n >>> 22), w = f + ((a << 26 | a >>> 6) ^ (a << 21 | a >>> 11) ^ (a << 7 | a >>> 25)) + (a & l ^ ~a & h) + c[p] + u[p];\r\n                f = h, h = l, l = a, a = s + w | 0, s = i, i = o, o = n, n = w + (v + _) | 0;\r\n            } r[0] = r[0] + n | 0, r[1] = r[1] + o | 0, r[2] = r[2] + i | 0, r[3] = r[3] + s | 0, r[4] = r[4] + a | 0, r[5] = r[5] + l | 0, r[6] = r[6] + h | 0, r[7] = r[7] + f | 0; }, _doFinalize: function () { var e = this._data, r = e.words, n = 8 * this._nDataBytes, o = 8 * e.sigBytes; return r[o >>> 5] |= 128 << 24 - o % 32, r[14 + (o + 64 >>> 9 << 4)] = t.floor(n / 4294967296), r[15 + (o + 64 >>> 9 << 4)] = n, e.sigBytes = 4 * r.length, this._process(), this._hash; }, clone: function () { var t = i.clone.call(this); return t._hash = this._hash.clone(), t; } }); e.SHA256 = i._createHelper(l), e.HmacSHA256 = i._createHmacHelper(l); }(Math), n.SHA256); }, function (t, e, r) { var n; t.exports = (n = r(0), r(10), function () { var t = n, e = t.lib.Hasher, r = t.x64, o = r.Word, i = r.WordArray, s = t.algo; function a() { return o.create.apply(o, arguments); } var c = [a(1116352408, 3609767458), a(1899447441, 602891725), a(3049323471, 3964484399), a(3921009573, 2173295548), a(961987163, 4081628472), a(1508970993, 3053834265), a(2453635748, 2937671579), a(2870763221, 3664609560), a(3624381080, 2734883394), a(310598401, 1164996542), a(607225278, 1323610764), a(1426881987, 3590304994), a(1925078388, 4068182383), a(2162078206, 991336113), a(2614888103, 633803317), a(3248222580, 3479774868), a(3835390401, 2666613458), a(4022224774, 944711139), a(264347078, 2341262773), a(604807628, 2007800933), a(770255983, 1495990901), a(1249150122, 1856431235), a(1555081692, 3175218132), a(1996064986, 2198950837), a(2554220882, 3999719339), a(2821834349, 766784016), a(2952996808, 2566594879), a(3210313671, 3203337956), a(3336571891, 1034457026), a(3584528711, 2466948901), a(113926993, 3758326383), a(338241895, 168717936), a(666307205, 1188179964), a(773529912, 1546045734), a(1294757372, 1522805485), a(1396182291, 2643833823), a(1695183700, 2343527390), a(1986661051, 1014477480), a(2177026350, 1206759142), a(2456956037, 344077627), a(2730485921, 1290863460), a(2820302411, 3158454273), a(3259730800, 3505952657), a(3345764771, 106217008), a(3516065817, 3606008344), a(3600352804, 1432725776), a(4094571909, 1467031594), a(275423344, 851169720), a(430227734, 3100823752), a(506948616, 1363258195), a(659060556, 3750685593), a(883997877, 3785050280), a(958139571, 3318307427), a(1322822218, 3812723403), a(1537002063, 2003034995), a(1747873779, 3602036899), a(1955562222, 1575990012), a(2024104815, 1125592928), a(2227730452, 2716904306), a(2361852424, 442776044), a(2428436474, 593698344), a(2756734187, 3733110249), a(3204031479, 2999351573), a(3329325298, 3815920427), a(3391569614, 3928383900), a(3515267271, 566280711), a(3940187606, 3454069534), a(4118630271, 4000239992), a(116418474, 1914138554), a(174292421, 2731055270), a(289380356, 3203993006), a(460393269, 320620315), a(685471733, 587496836), a(852142971, 1086792851), a(1017036298, 365543100), a(1126000580, 2618297676), a(1288033470, 3409855158), a(1501505948, 4234509866), a(1607167915, 987167468), a(1816402316, 1246189591)], u = []; !function () { for (var t = 0; t < 80; t++)\r\n            u[t] = a(); }(); var l = s.SHA512 = e.extend({ _doReset: function () { this._hash = new i.init([new o.init(1779033703, 4089235720), new o.init(3144134277, 2227873595), new o.init(1013904242, 4271175723), new o.init(2773480762, 1595750129), new o.init(1359893119, 2917565137), new o.init(2600822924, 725511199), new o.init(528734635, 4215389547), new o.init(1541459225, 327033209)]); }, _doProcessBlock: function (t, e) { for (var r = this._hash.words, n = r[0], o = r[1], i = r[2], s = r[3], a = r[4], l = r[5], h = r[6], f = r[7], p = n.high, d = n.low, m = o.high, y = o.low, g = i.high, _ = i.low, v = s.high, w = s.low, b = a.high, B = a.low, F = l.high, N = l.low, k = h.high, x = h.low, S = f.high, A = f.low, O = p, T = d, P = m, M = y, C = g, E = _, D = v, R = w, I = b, H = B, j = F, U = N, L = k, z = x, W = S, q = A, $ = 0; $ < 80; $++) {\r\n                var G = u[$];\r\n                if ($ < 16)\r\n                    var V = G.high = 0 | t[e + 2 * $], J = G.low = 0 | t[e + 2 * $ + 1];\r\n                else {\r\n                    var K = u[$ - 15], X = K.high, Z = K.low, Y = (X >>> 1 | Z << 31) ^ (X >>> 8 | Z << 24) ^ X >>> 7, Q = (Z >>> 1 | X << 31) ^ (Z >>> 8 | X << 24) ^ (Z >>> 7 | X << 25), tt = u[$ - 2], et = tt.high, rt = tt.low, nt = (et >>> 19 | rt << 13) ^ (et << 3 | rt >>> 29) ^ et >>> 6, ot = (rt >>> 19 | et << 13) ^ (rt << 3 | et >>> 29) ^ (rt >>> 6 | et << 26), it = u[$ - 7], st = it.high, at = it.low, ct = u[$ - 16], ut = ct.high, lt = ct.low;\r\n                    V = (V = (V = Y + st + ((J = Q + at) >>> 0 < Q >>> 0 ? 1 : 0)) + nt + ((J += ot) >>> 0 < ot >>> 0 ? 1 : 0)) + ut + ((J += lt) >>> 0 < lt >>> 0 ? 1 : 0), G.high = V, G.low = J;\r\n                }\r\n                var ht, ft = I & j ^ ~I & L, pt = H & U ^ ~H & z, dt = O & P ^ O & C ^ P & C, mt = T & M ^ T & E ^ M & E, yt = (O >>> 28 | T << 4) ^ (O << 30 | T >>> 2) ^ (O << 25 | T >>> 7), gt = (T >>> 28 | O << 4) ^ (T << 30 | O >>> 2) ^ (T << 25 | O >>> 7), _t = (I >>> 14 | H << 18) ^ (I >>> 18 | H << 14) ^ (I << 23 | H >>> 9), vt = (H >>> 14 | I << 18) ^ (H >>> 18 | I << 14) ^ (H << 23 | I >>> 9), wt = c[$], bt = wt.high, Bt = wt.low, Ft = W + _t + ((ht = q + vt) >>> 0 < q >>> 0 ? 1 : 0), Nt = gt + mt;\r\n                W = L, q = z, L = j, z = U, j = I, U = H, I = D + (Ft = (Ft = (Ft = Ft + ft + ((ht += pt) >>> 0 < pt >>> 0 ? 1 : 0)) + bt + ((ht += Bt) >>> 0 < Bt >>> 0 ? 1 : 0)) + V + ((ht += J) >>> 0 < J >>> 0 ? 1 : 0)) + ((H = R + ht | 0) >>> 0 < R >>> 0 ? 1 : 0) | 0, D = C, R = E, C = P, E = M, P = O, M = T, O = Ft + (yt + dt + (Nt >>> 0 < gt >>> 0 ? 1 : 0)) + ((T = ht + Nt | 0) >>> 0 < ht >>> 0 ? 1 : 0) | 0;\r\n            } d = n.low = d + T, n.high = p + O + (d >>> 0 < T >>> 0 ? 1 : 0), y = o.low = y + M, o.high = m + P + (y >>> 0 < M >>> 0 ? 1 : 0), _ = i.low = _ + E, i.high = g + C + (_ >>> 0 < E >>> 0 ? 1 : 0), w = s.low = w + R, s.high = v + D + (w >>> 0 < R >>> 0 ? 1 : 0), B = a.low = B + H, a.high = b + I + (B >>> 0 < H >>> 0 ? 1 : 0), N = l.low = N + U, l.high = F + j + (N >>> 0 < U >>> 0 ? 1 : 0), x = h.low = x + z, h.high = k + L + (x >>> 0 < z >>> 0 ? 1 : 0), A = f.low = A + q, f.high = S + W + (A >>> 0 < q >>> 0 ? 1 : 0); }, _doFinalize: function () { var t = this._data, e = t.words, r = 8 * this._nDataBytes, n = 8 * t.sigBytes; return e[n >>> 5] |= 128 << 24 - n % 32, e[30 + (n + 128 >>> 10 << 5)] = Math.floor(r / 4294967296), e[31 + (n + 128 >>> 10 << 5)] = r, t.sigBytes = 4 * e.length, this._process(), this._hash.toX32(); }, clone: function () { var t = e.clone.call(this); return t._hash = this._hash.clone(), t; }, blockSize: 32 }); t.SHA512 = e._createHelper(l), t.HmacSHA512 = e._createHmacHelper(l); }(), n.SHA512); }, function (t, e, r) { var n; t.exports = (n = r(0), r(10), function (t) { var e = n, r = e.lib, o = r.WordArray, i = r.Hasher, s = e.x64.Word, a = e.algo, c = [], u = [], l = []; !function () { for (var t = 1, e = 0, r = 0; r < 24; r++) {\r\n            c[t + 5 * e] = (r + 1) * (r + 2) / 2 % 64;\r\n            var n = (2 * t + 3 * e) % 5;\r\n            t = e % 5, e = n;\r\n        } for (t = 0; t < 5; t++)\r\n            for (e = 0; e < 5; e++)\r\n                u[t + 5 * e] = e + (2 * t + 3 * e) % 5 * 5; for (var o = 1, i = 0; i < 24; i++) {\r\n            for (var a = 0, h = 0, f = 0; f < 7; f++) {\r\n                if (1 & o) {\r\n                    var p = (1 << f) - 1;\r\n                    p < 32 ? h ^= 1 << p : a ^= 1 << p - 32;\r\n                }\r\n                128 & o ? o = o << 1 ^ 113 : o <<= 1;\r\n            }\r\n            l[i] = s.create(a, h);\r\n        } }(); var h = []; !function () { for (var t = 0; t < 25; t++)\r\n            h[t] = s.create(); }(); var f = a.SHA3 = i.extend({ cfg: i.cfg.extend({ outputLength: 512 }), _doReset: function () { for (var t = this._state = [], e = 0; e < 25; e++)\r\n                t[e] = new s.init; this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32; }, _doProcessBlock: function (t, e) { for (var r = this._state, n = this.blockSize / 2, o = 0; o < n; o++) {\r\n                var i = t[e + 2 * o], s = t[e + 2 * o + 1];\r\n                i = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), s = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), (A = r[o]).high ^= s, A.low ^= i;\r\n            } for (var a = 0; a < 24; a++) {\r\n                for (var f = 0; f < 5; f++) {\r\n                    for (var p = 0, d = 0, m = 0; m < 5; m++)\r\n                        p ^= (A = r[f + 5 * m]).high, d ^= A.low;\r\n                    var y = h[f];\r\n                    y.high = p, y.low = d;\r\n                }\r\n                for (f = 0; f < 5; f++) {\r\n                    var g = h[(f + 4) % 5], _ = h[(f + 1) % 5], v = _.high, w = _.low;\r\n                    for (p = g.high ^ (v << 1 | w >>> 31), d = g.low ^ (w << 1 | v >>> 31), m = 0; m < 5; m++)\r\n                        (A = r[f + 5 * m]).high ^= p, A.low ^= d;\r\n                }\r\n                for (var b = 1; b < 25; b++) {\r\n                    var B = (A = r[b]).high, F = A.low, N = c[b];\r\n                    N < 32 ? (p = B << N | F >>> 32 - N, d = F << N | B >>> 32 - N) : (p = F << N - 32 | B >>> 64 - N, d = B << N - 32 | F >>> 64 - N);\r\n                    var k = h[u[b]];\r\n                    k.high = p, k.low = d;\r\n                }\r\n                var x = h[0], S = r[0];\r\n                for (x.high = S.high, x.low = S.low, f = 0; f < 5; f++)\r\n                    for (m = 0; m < 5; m++) {\r\n                        var A = r[b = f + 5 * m], O = h[b], T = h[(f + 1) % 5 + 5 * m], P = h[(f + 2) % 5 + 5 * m];\r\n                        A.high = O.high ^ ~T.high & P.high, A.low = O.low ^ ~T.low & P.low;\r\n                    }\r\n                A = r[0];\r\n                var M = l[a];\r\n                A.high ^= M.high, A.low ^= M.low;\r\n            } }, _doFinalize: function () { var e = this._data, r = e.words, n = (this._nDataBytes, 8 * e.sigBytes), i = 32 * this.blockSize; r[n >>> 5] |= 1 << 24 - n % 32, r[(t.ceil((n + 1) / i) * i >>> 5) - 1] |= 128, e.sigBytes = 4 * r.length, this._process(); for (var s = this._state, a = this.cfg.outputLength / 8, c = a / 8, u = [], l = 0; l < c; l++) {\r\n                var h = s[l], f = h.high, p = h.low;\r\n                f = 16711935 & (f << 8 | f >>> 24) | 4278255360 & (f << 24 | f >>> 8), p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8), u.push(p), u.push(f);\r\n            } return new o.init(u, a); }, clone: function () { for (var t = i.clone.call(this), e = t._state = this._state.slice(0), r = 0; r < 25; r++)\r\n                e[r] = e[r].clone(); return t; } }); e.SHA3 = i._createHelper(f), e.HmacSHA3 = i._createHmacHelper(f); }(Math), n.SHA3); }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(8), o = r(3), i = r(22), s = r(23);\r\n            !function (t) { t.eth_getBalance = new i.Method({ callName: \"eth_getBalance\", params: 2, inputFormatter: [n.inputAddressFormatter, n.inputDefaultBlockNumberFormatter], outputFormatter: n.outputBigNumberFormatter }), t.eth_getStorageAt = new i.Method({ callName: \"eth_getStorageAt\", params: 3, inputFormatter: [n.inputAddressFormatter, o.toHex, n.inputDefaultBlockNumberFormatter], outputFormatter: o.toData }), t.eth_getCode = new i.Method({ callName: \"eth_getCode\", params: 2, inputFormatter: [n.inputAddressFormatter, n.inputDefaultBlockNumberFormatter], outputFormatter: o.toData }), t.eth_getBlockByHash = new i.Method({ callName: \"eth_getBlockByHash\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, function (t) { return !!t; }], outputFormatter: n.outputBlockFormatter }), t.eth_getBlockByNumber = new i.Method({ callName: \"eth_getBlockByNumber\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, function (t) { return !!t; }], outputFormatter: n.outputBlockFormatter }), t.eth_getUncleByBlockHashAndIndex = new i.Method({ callName: \"eth_getUncleByBlockHashAndIndex\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, o.toHex], outputFormatter: n.outputBlockFormatter }), t.eth_getUncleByBlockNumberAndIndex = new i.Method({ callName: \"eth_getUncleByBlockNumberAndIndex\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, o.toHex], outputFormatter: n.outputBlockFormatter }), t.eth_getBlockTransactionCountByHash = new i.Method({ callName: \"eth_getBlockTransactionCountByHash\", params: 1, inputFormatter: [n.inputBlockNumberFormatter], outputFormatter: o.toDecimal }), t.eth_getBlockTransactionCountByNumber = new i.Method({ callName: \"eth_getBlockTransactionCountByNumber\", params: 1, inputFormatter: [n.inputBlockNumberFormatter], outputFormatter: o.toDecimal }), t.eth_getUncleCountByBlockHash = new i.Method({ callName: \"eth_getUncleCountByBlockHash\", params: 1, inputFormatter: [n.inputBlockNumberFormatter], outputFormatter: o.toDecimal }), t.eth_getUncleCountByBlockNumber = new i.Method({ callName: \"eth_getUncleCountByBlockNumber\", params: 1, inputFormatter: [n.inputBlockNumberFormatter], outputFormatter: o.toDecimal }), t.eth_getTransactionByHash = new i.Method({ callName: \"eth_getTransactionByHash\", params: 1, outputFormatter: n.outputTransactionFormatter }), t.eth_getTransactionByBlockHashAndIndex = new i.Method({ callName: \"eth_getTransactionByBlockHashAndIndex\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, o.toHex], outputFormatter: n.outputTransactionFormatter }), t.eth_getTransactionByBlockNumberAndIndex = new i.Method({ callName: \"eth_getTransactionByBlockNumberAndIndex\", params: 2, inputFormatter: [n.inputBlockNumberFormatter, o.toHex], outputFormatter: n.outputTransactionFormatter }), t.eth_getTransactionReceipt = new i.Method({ callName: \"eth_getTransactionReceipt\", params: 1, outputFormatter: n.outputTransactionReceiptFormatter }), t.eth_getTransactionCount = new i.Method({ callName: \"eth_getTransactionCount\", params: 2, inputFormatter: [n.inputAddressFormatter, n.inputDefaultBlockNumberFormatter], outputFormatter: o.toDecimal }), t.eth_sendRawTransaction = new i.Method({ callName: \"eth_sendRawTransaction\", params: 1, inputFormatter: [null], outputFormatter: o.toData }), t.web3_sha3 = new i.Method({ callName: \"web3_sha3\", params: 1, inputFormatter: [null], outputFormatter: o.toData }), t.eth_sendTransaction = new i.Method({ callName: \"eth_sendTransaction\", params: 1, inputFormatter: [n.inputTransactionFormatter], outputFormatter: o.toData }), t.eth_sign = new i.Method({ callName: \"eth_sign\", params: 2, inputFormatter: [n.inputAddressFormatter, null], outputFormatter: o.toData }), t.eth_call = new i.Method({ callName: \"eth_call\", params: 2, inputFormatter: [n.inputCallFormatter, n.inputDefaultBlockNumberFormatter], outputFormatter: o.toData }), t.eth_estimateGas = new i.Method({ callName: \"eth_estimateGas\", params: 1, inputFormatter: [n.inputCallFormatter], outputFormatter: o.toDecimal }), t.eth_submitWork = new i.Method({ callName: \"eth_submitWork\", params: 3, outputFormatter: o.toBoolean }), t.eth_getWork = new i.Method({ callName: \"eth_getWork\", params: 1, outputFormatter: o.toArray }), t.eth_coinbase = new s.Property({ getter: \"eth_coinbase\", outputFormatter: o.toAddress }), t.eth_mining = new s.Property({ getter: \"eth_mining\", outputFormatter: o.toBoolean }), t.eth_hashrate = new s.Property({ getter: \"eth_hashrate\", outputFormatter: o.toDecimal }), t.eth_syncing = new s.Property({ getter: \"eth_syncing\", outputFormatter: n.outputSyncingFormatter }), t.eth_gasPrice = new s.Property({ getter: \"eth_gasPrice\", outputFormatter: n.outputBigNumberFormatter }), t.eth_accounts = new s.Property({ getter: \"eth_accounts\", outputFormatter: o.toArray }), t.eth_blockNumber = new s.Property({ getter: \"eth_blockNumber\", outputFormatter: o.toDecimal }), t.eth_protocolVersion = new s.Property({ getter: \"eth_protocolVersion\", outputFormatter: o.toDecimal }), t.web3_clientVersion = new s.Property({ getter: \"web3_clientVersion\", outputFormatter: o.toString }), t.net_version = new s.Property({ getter: \"net_version\", outputFormatter: o.toString }), t.shh_version = new i.Method({ callName: \"shh_version\", params: 0, outputFormatter: o.toDecimal }), t.shh_post = new i.Method({ callName: \"shh_post\", params: 1, inputFormatter: [null], outputFormatter: o.toBoolean }), t.personal_newAccount = new i.Method({ callName: \"personal_newAccount\", params: 1, inputFormatter: [null], outputFormatter: o.toAddress }), t.personal_importRawKey = new i.Method({ callName: \"personal_importRawKey\", params: 2, outputFormatter: o.toAddress }), t.personal_sign = new i.Method({ callName: \"personal_sign\", params: 3, inputFormatter: [null, n.inputAddressFormatter, null], outputFormatter: o.toData }), t.personal_ecRecover = new i.Method({ callName: \"personal_ecRecover\", params: 2, outputFormatter: o.toAddress }), t.personal_unlockAccount = new i.Method({ callName: \"personal_unlockAccount\", params: 3, inputFormatter: [n.inputAddressFormatter, null, o.toNullDecimal], outputFormatter: o.toBoolean }), t.personal_sendTransaction = new i.Method({ callName: \"personal_sendTransaction\", params: 2, inputFormatter: [n.inputTransactionFormatter, null], outputFormatter: o.toData }), t.personal_lockAccount = new i.Method({ callName: \"personal_lockAccount\", params: 1, inputFormatter: [n.inputAddressFormatter], outputFormatter: o.toBoolean }), t.personal_listAccounts = new s.Property({ getter: \"personal_listAccounts\", outputFormatter: o.toArray }), t.net_listening = new s.Property({ getter: \"net_listening\", outputFormatter: o.toBoolean }), t.net_peerCount = new s.Property({ getter: \"net_peerCount\", outputFormatter: o.toDecimal }), t.eth_newFilter = new i.Method({ callName: \"eth_newFilter\", params: 1, outputFormatter: o.toHex }), t.eth_getLogs = new i.Method({ callName: \"eth_getLogs\", params: 1, inputFormatter: [o.toHex], outputFormatter: o.toArray }), t.eth_newBlockFilter = new i.Method({ callName: \"eth_newBlockFilter\", params: 0, outputFormatter: o.toHex }), t.eth_newPendingTransactionFilter = new i.Method({ callName: \"eth_newPendingTransactionFilter\", params: 0, outputFormatter: o.toHex }), t.eth_uninstallFilter = new i.Method({ callName: \"eth_uninstallFilter\", params: 1, inputFormatter: [o.toHex], outputFormatter: o.toBoolean }), t.eth_getFilterLogs = new i.Method({ callName: \"eth_getFilterLogs\", params: 1, inputFormatter: [o.toHex], outputFormatter: o.toArray }), t.eth_getFilterChanges = new i.Method({ callName: \"eth_getFilterChanges\", params: 1, inputFormatter: [o.toHex], outputFormatter: o.toArray }), t.eth_submitHashrate = new i.Method({ callName: \"eth_submitHashrate\", params: 2, outputFormatter: o.toBoolean }), t.shh_newIdentity = new i.Method({ callName: \"shh_newIdentity\", params: 0, outputFormatter: o.toData }), t.shh_hasIdentity = new i.Method({ callName: \"shh_hasIdentity\", params: 1, outputFormatter: o.toBoolean }), t.shh_newGroup = new i.Method({ callName: \"shh_newGroup\", params: 0, outputFormatter: o.toData }), t.shh_addToGroup = new i.Method({ callName: \"shh_addToGroup\", params: 1, outputFormatter: o.toBoolean }), t.shh_newFilter = new i.Method({ callName: \"shh_newFilter\", params: 1, outputFormatter: o.toHex }), t.shh_uninstallFilter = new i.Method({ callName: \"shh_uninstallFilter\", params: 1, outputFormatter: o.toBoolean }), t.shh_getLogs = new i.Method({ callName: \"shh_getLogs\", params: 1, outputFormatter: o.toArray }), t.shh_getFilterMessages = new i.Method({ callName: \"shh_getFilterMessages\", params: 1, outputFormatter: o.toArray }), t.shh_getFilterChanges = new i.Method({ callName: \"shh_getFilterChanges\", params: 1, outputFormatter: o.toArray }), t.shh_getMessages = new i.Method({ callName: \"shh_getMessages\", params: 1, outputFormatter: o.toArray }); }(e.eth || (e.eth = {}));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(13);\r\n            e.Method = /** @class */ (function () {\r\n                function class_1(t) {\r\n                    this.callName = t.callName, this.params = t.params || 0, this.inputFormatter = t.inputFormatter || null, this.outputFormatter = t.outputFormatter, this.requestManager = null;\r\n                }\r\n                class_1.prototype.validateArgs = function (t) { if (t.length !== this.params)\r\n                    throw n.InvalidNumberOfRPCParams(this.callName, t.length, this.params); };\r\n                class_1.prototype.formatInput = function (t) { return this.inputFormatter ? this.inputFormatter.map(function (e, r) { return e ? e(t[r]) : t[r]; }) : t; };\r\n                class_1.prototype.formatOutput = function (t) { return null !== t ? this.outputFormatter(t) : null; };\r\n                class_1.prototype.toPayload = function (t) { var e = this.formatInput(t); return this.validateArgs(e), { method: this.callName, params: e }; };\r\n                class_1.prototype.execute = function (t) {\r\n                    var e = [];\r\n                    for (var _a = 1; _a < arguments.length; _a++) {\r\n                        e[_a - 1] = arguments[_a];\r\n                    }\r\n                    return __awaiter(this, void 0, void 0, function () { var r, n; return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                r = this.toPayload(e);\r\n                                if (!t)\r\n                                    throw new Error(\"Missing RequestManager in method#exec\");\r\n                                return [4 /*yield*/, t.sendAsync(r)];\r\n                            case 1:\r\n                                n = _c.sent();\r\n                                return [2 /*return*/, this.formatOutput(n)];\r\n                        }\r\n                    }); });\r\n                };\r\n                return class_1;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            e.Property = /** @class */ (function () {\r\n                function class_2(t) {\r\n                    this.getter = t.getter, this.outputFormatter = t.outputFormatter;\r\n                }\r\n                class_2.prototype.formatOutput = function (t) { return this.outputFormatter(t); };\r\n                class_2.prototype.execute = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var e; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, t.sendAsync({ method: this.getter, params: [] })];\r\n                            case 1:\r\n                                e = _a.sent();\r\n                                return [2 /*return*/, this.formatOutput(e)];\r\n                        }\r\n                    }); });\r\n                };\r\n                return class_2;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(60), o = r(26), i = r(70);\r\n            e.Contract = /** @class */ (function () {\r\n                function Contract(t, e, r) {\r\n                    var s;\r\n                    this.requestManager = t, this.abi = e, this.address = r, this.events = {}, this.transactionHash = null, this.transactionHash = null, this.address = r, this.abi = e, (s = this).abi.filter(function (t) { return \"function\" === t.type; }).map(function (t) { return new n.SolidityFunction(s.requestManager, t, s.address); }).forEach(function (t) { t.attachToContract(s); }), function (t) { var e = t.abi.filter(function (t) { return \"event\" === t.type; }); new i.AllSolidityEvents(t.requestManager, e, t.address).attachToContract(t), e.map(function (e) { return new o.SolidityEvent(t.requestManager, e, t.address); }).forEach(function (e) { e.attachToContract(t); }); }(this);\r\n                }\r\n                return Contract;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3);\r\n            e.SolidityParam = /** @class */ (function () {\r\n                function SolidityParam(t, e) {\r\n                    this.offset = void 0, this.value = t || \"\", this.offset = e;\r\n                }\r\n                SolidityParam.prototype.isDynamic = function () { return void 0 !== this.offset; };\r\n                SolidityParam.prototype.offsetAsBytes = function () { return this.isDynamic() ? n.padLeft(n.toTwosComplement(this.offset).toString(16), 64) : \"\"; };\r\n                SolidityParam.prototype.staticPart = function () { return this.isDynamic() ? this.offsetAsBytes() : this.value; };\r\n                SolidityParam.prototype.dynamicPart = function () { return this.isDynamic() ? this.value : \"\"; };\r\n                SolidityParam.prototype.encode = function () { return this.staticPart() + this.dynamicPart(); };\r\n                return SolidityParam;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(8), i = r(15), s = r(27);\r\n            e.SolidityEvent = /** @class */ (function () {\r\n                function class_3(t, e, r) {\r\n                    this.requestManager = t, this.address = r, this._anonymous = !1, this._params = e.inputs, this._name = n.transformToFullName(e), this._anonymous = e.anonymous;\r\n                }\r\n                class_3.prototype.types = function (t) { return this._params.filter(function (e) { return e.indexed === t; }).map(function (t) { return t.type; }); };\r\n                class_3.prototype.displayName = function () { return n.extractDisplayName(this._name); };\r\n                class_3.prototype.typeName = function () { return n.extractTypeName(this._name) || \"void\"; };\r\n                class_3.prototype.signature = function () { return n.sha3(this._name); };\r\n                class_3.prototype.encode = function (t, e) {\r\n                    if (t === void 0) { t = {}; }\r\n                    if (e === void 0) { e = {}; }\r\n                    var r = { topics: [], address: this.address };\r\n                    [\"fromBlock\", \"toBlock\"].filter(function (t) { return void 0 !== e[t]; }).forEach(function (t) { r[t] = o.inputBlockNumberFormatter(e[t]); }), this._anonymous || r.topics.push(\"0x\" + this.signature());\r\n                    var s = this._params.filter(function (t) { return !0 === t.indexed; }).map(function (e) { var r = t[e.name]; return null == r ? null : n.isArray(r) ? r.map(function (t) { return \"0x\" + i.coder.encodeParam(e.type, t); }) : \"0x\" + i.coder.encodeParam(e.type, r); });\r\n                    return r.topics = r.topics.concat(s), r;\r\n                };\r\n                class_3.prototype.decode = function (t) { t.data = t.data || \"\", t.topics = t.topics || []; var e = (this._anonymous ? t.topics : t.topics.slice(1)).map(function (t) { return t.slice(2); }).join(\"\"), r = i.coder.decodeParams(this.types(!0), e), n = t.data.slice(2), s = i.coder.decodeParams(this.types(!1), n), a = o.outputLogFormatter(t); return a.event = this.displayName(), a.address = t.address, a.args = this._params.reduce(function (t, e) { return t[e.name] = e.indexed ? r.shift() : s.shift(), t; }, {}), delete a.data, delete a.topics, a; };\r\n                class_3.prototype.execute = function (t, e) {\r\n                    return __awaiter(this, void 0, void 0, function () { var r, n; return __generator(this, function (_a) {\r\n                        r = this.encode(t, e), n = this.decode.bind(this);\r\n                        return [2 /*return*/, new s.EthFilter(this.requestManager, r, n)];\r\n                    }); });\r\n                };\r\n                class_3.prototype.attachToContract = function (t) { var e = this.execute.bind(this), r = this.displayName(); t.events[r] || (t.events[r] = e), t.events[r][this.typeName()] = this.execute.bind(this, t); };\r\n                return class_3;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(8), i = r(14), s = r(9);\r\n            function a(t) { if (null == t)\r\n                return null; var e = String(t).toString(); return 0 === e.indexOf(\"0x\") ? e : n.fromUtf8(e); }\r\n            var c = /** @class */ (function () {\r\n                function c(t) {\r\n                    this.requestManager = t, this.isStarted = !1, this.isDisposed = !1, this.filterId = s.future(), this.callbacks = [], this.stopSemaphore = s.future();\r\n                }\r\n                c.prototype.watch = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var _a, _c; return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (this.isDisposed)\r\n                                    throw new Error(\"The filter was disposed\");\r\n                                _a = t;\r\n                                if (!_a) return [3 /*break*/, 3];\r\n                                this.callbacks.push(t);\r\n                                _c = this.isStarted;\r\n                                if (_c) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, this.start()];\r\n                            case 1:\r\n                                _c = (_d.sent());\r\n                                _d.label = 2;\r\n                            case 2:\r\n                                _a = (_c);\r\n                                _d.label = 3;\r\n                            case 3:\r\n                                _a;\r\n                                return [2 /*return*/];\r\n                        }\r\n                    }); });\r\n                };\r\n                c.prototype.start = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t_10, t_9; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (this.isDisposed)\r\n                                    throw new Error(\"The filter was disposed\");\r\n                                if (!!this.isStarted) return [3 /*break*/, 6];\r\n                                this.isStarted = !0;\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                _a.trys.push([1, 3, , 4]);\r\n                                return [4 /*yield*/, this.getNewFilter()];\r\n                            case 2:\r\n                                t_10 = _a.sent();\r\n                                if (!t_10)\r\n                                    throw new Error(\"Could not create a filter, response: \" + JSON.stringify(t_10));\r\n                                this.filterId.resolve(t_10);\r\n                                return [3 /*break*/, 4];\r\n                            case 3:\r\n                                t_9 = _a.sent();\r\n                                throw t_9;\r\n                            case 4:\r\n                                this.stopSemaphore = s.future();\r\n                                return [4 /*yield*/, this.poll()];\r\n                            case 5:\r\n                                _a.sent();\r\n                                _a.label = 6;\r\n                            case 6: return [2 /*return*/];\r\n                        }\r\n                    }); });\r\n                };\r\n                c.prototype.stop = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t, _a, _c; return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (!this.isStarted)\r\n                                    return [2 /*return*/];\r\n                                if (this.isDisposed)\r\n                                    return [2 /*return*/];\r\n                                this.isDisposed = !0;\r\n                                return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _d.sent();\r\n                                this.isStarted = !1;\r\n                                _a = this.stopSemaphore;\r\n                                if (!_a) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, this.stopSemaphore];\r\n                            case 2:\r\n                                _a = (_d.sent());\r\n                                _d.label = 3;\r\n                            case 3:\r\n                                _a;\r\n                                _c = !0;\r\n                                return [4 /*yield*/, this.uninstall()];\r\n                            case 4:\r\n                                if (_c !== (_d.sent()))\r\n                                    throw new Error(\"Couldn't stop the eth filter: \" + t);\r\n                                return [2 /*return*/];\r\n                        }\r\n                    }); });\r\n                };\r\n                c.prototype.poll = function () {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var t_11, t;\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    if (!this.isStarted) return [3 /*break*/, 3];\r\n                                    if (!this.callbacks.length) return [3 /*break*/, 2];\r\n                                    return [4 /*yield*/, this.getChanges()];\r\n                                case 1:\r\n                                    t_11 = _a.sent();\r\n                                    this.callbacks.forEach(function (e) { _this.formatter ? t_11.forEach(function (t) { e(_this.formatter(t)); }) : t_11.forEach(function (t) { return e(t); }); });\r\n                                    _a.label = 2;\r\n                                case 2:\r\n                                    this.stopSemaphore.resolve(1), this.isStarted && (this.stopSemaphore = s.future(), setTimeout((t = (function () { return _this.poll(); }), function () { t().catch(function (t) { return console.error(t); }); }), i.ETH_POLLING_TIMEOUT));\r\n                                    return [3 /*break*/, 4];\r\n                                case 3:\r\n                                    this.stopSemaphore.resolve(1);\r\n                                    _a.label = 4;\r\n                                case 4: return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                return c;\r\n            }());\r\n            e.AbstractFilter = c;\r\n            e.SHHFilter = /** @class */ (function (_super) {\r\n                __extends(class_4, _super);\r\n                function class_4(t, e) {\r\n                    var _this = this;\r\n                    _this = _super.call(this, t) || this, _this.requestManager = t, _this.options = e, _this.options = _this.options || { topics: [] }, _this.options.topics = _this.options.topics || [], _this.options.topics = _this.options.topics.map(function (t) { return a(t); }), _this.options = { topics: _this.options.topics, to: _this.options.to };\r\n                    return _this;\r\n                }\r\n                class_4.prototype.getMessages = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _a.sent();\r\n                                return [2 /*return*/, this.requestManager.shh_getMessages(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                class_4.prototype.getNewFilter = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                        return [2 /*return*/, this.requestManager.shh_newFilter(this.options)];\r\n                    }); });\r\n                };\r\n                class_4.prototype.getChanges = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _a.sent();\r\n                                return [2 /*return*/, this.requestManager.shh_getFilterChanges(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                class_4.prototype.uninstall = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _a.sent();\r\n                                return [2 /*return*/, this.requestManager.shh_uninstallFilter(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                return class_4;\r\n            }(c));\r\n            var u = /** @class */ (function (_super) {\r\n                __extends(u, _super);\r\n                function u(t, e, r) {\r\n                    if (r === void 0) { r = (function (t) { return t; }); }\r\n                    var _this = this;\r\n                    _this = _super.call(this, t) || this, _this.requestManager = t, _this.options = e, _this.formatter = r, _this.options = _this.options || {}, _this.options.topics = _this.options.topics || [], _this.options.topics = _this.options.topics.map(function (t) { return a(t); }), _this.options = { topics: _this.options.topics, address: _this.options.address ? _this.options.address : void 0, fromBlock: \"number\" == typeof _this.options.fromBlock || \"string\" == typeof _this.options.fromBlock ? o.inputBlockNumberFormatter(_this.options.fromBlock) : \"latest\", toBlock: \"number\" == typeof _this.options.toBlock || \"string\" == typeof _this.options.toBlock ? o.inputBlockNumberFormatter(_this.options.toBlock) : \"latest\" };\r\n                    return _this;\r\n                }\r\n                u.prototype.getLogs = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var _a, t; return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                _a = this.isStarted;\r\n                                if (_a) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, this.start()];\r\n                            case 1:\r\n                                _a = (_c.sent());\r\n                                _c.label = 2;\r\n                            case 2:\r\n                                _a;\r\n                                return [4 /*yield*/, this.filterId];\r\n                            case 3:\r\n                                t = _c.sent();\r\n                                return [2 /*return*/, this.requestManager.eth_getFilterLogs(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                u.prototype.getNewFilter = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                        return [2 /*return*/, this.requestManager.eth_newFilter(this.options)];\r\n                    }); });\r\n                };\r\n                u.prototype.getChanges = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _a.sent();\r\n                                return [2 /*return*/, this.requestManager.eth_getFilterChanges(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                u.prototype.uninstall = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { var t; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.filterId];\r\n                            case 1:\r\n                                t = _a.sent();\r\n                                return [2 /*return*/, this.requestManager.eth_uninstallFilter(t)];\r\n                        }\r\n                    }); });\r\n                };\r\n                return u;\r\n            }(c));\r\n            e.EthFilter = u;\r\n            e.EthPendingTransactionFilter = /** @class */ (function (_super) {\r\n                __extends(class_5, _super);\r\n                function class_5(t) {\r\n                    return _super.call(this, t, null, function (t) { return t; }) || this;\r\n                }\r\n                class_5.prototype.getNewFilter = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                        return [2 /*return*/, this.requestManager.eth_newPendingTransactionFilter()];\r\n                    }); });\r\n                };\r\n                return class_5;\r\n            }(u));\r\n            e.EthBlockFilter = /** @class */ (function (_super) {\r\n                __extends(class_6, _super);\r\n                function class_6(t) {\r\n                    return _super.call(this, t, null, function (t) { return t; }) || this;\r\n                }\r\n                class_6.prototype.getNewFilter = function () {\r\n                    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                        return [2 /*return*/, this.requestManager.eth_newBlockFilter()];\r\n                    }); });\r\n                };\r\n                return class_6;\r\n            }(u));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(29);\r\n            e.HTTPProvider = n.HTTPProvider;\r\n            var o = r(30);\r\n            e.WebSocketProvider = o.WebSocketProvider, function (t) { for (var r in t)\r\n                e.hasOwnProperty(r) || (e[r] = t[r]); }(r(3));\r\n            var i = r(55);\r\n            e.RequestManager = i.RequestManager;\r\n            var s = r(24);\r\n            e.Contract = s.Contract;\r\n            var a = r(71);\r\n            e.ContractFactory = a.ContractFactory;\r\n            var c = r(22);\r\n            e.Method = c.Method;\r\n            var u = r(23);\r\n            e.Property = u.Property;\r\n            var l = r(21);\r\n            e.eth = l.eth;\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(16);\r\n            e.HTTPProvider = /** @class */ (function () {\r\n                function class_7(t, e) {\r\n                    if (e === void 0) { e = {}; }\r\n                    this.host = t, this.options = e, this.debug = !1, this.host = t || \"http://localhost:8545\";\r\n                }\r\n                class_7.prototype.send = function () { throw new Error(\"Sync requests are deprecated\"); };\r\n                class_7.prototype.sendAsync = function (t, e) {\r\n                    var _this = this;\r\n                    try {\r\n                        var r_3 = null;\r\n                        if (r_3 = t instanceof Array ? t.map(function (t) { return n.toRPC(t); }) : n.toRPC(t), \"undefined\" == typeof fetch)\r\n                            throw new Error(\"There is no global fetch object. Please install and import isomorphic-fetch\");\r\n                        var o = { body: JSON.stringify(r_3), method: \"POST\", headers: Object.assign({}, this.options.headers, { \"Content-Type\": \"application/json\" }) };\r\n                        this.debug && console.log(\"SEND >> \" + o.body), fetch(this.host, o).then(function (t) { return __awaiter(_this, void 0, void 0, function () { var r_4; return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    if (!t.ok) return [3 /*break*/, 2];\r\n                                    return [4 /*yield*/, t.json()];\r\n                                case 1:\r\n                                    r_4 = _a.sent();\r\n                                    this.debug && console.log(\"RECV << \" + JSON.stringify(r_4)), r_4.error ? e(Object.assign(new Error(r_4.error.json || r_4.error), r_4.error)) : e(null, r_4);\r\n                                    return [3 /*break*/, 3];\r\n                                case 2:\r\n                                    this.debug && console.log(\"ERR << \" + JSON.stringify(t)), e(new Error(\"External error. response code: \" + t.status));\r\n                                    _a.label = 3;\r\n                                case 3: return [2 /*return*/];\r\n                            }\r\n                        }); }); }, function (t) { _this.debug && console.log(\"ERR << \" + JSON.stringify(t)), e(t); });\r\n                    }\r\n                    catch (t) {\r\n                        this.debug && console.log(\"ERR << \" + JSON.stringify(t)), e(t);\r\n                    }\r\n                };\r\n                return class_7;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(16), o = r(9);\r\n            var i = /** @class */ (function () {\r\n                function i(t, e) {\r\n                    if (e === void 0) { e = {}; }\r\n                    this.url = t, this.options = e, this.isDisposed = !1, this.responseCallbacks = new Map, this.notificationCallbacks = new Set, this.debug = !1, this.lastChunk = \"\", this.connect();\r\n                }\r\n                i.prototype.dispose = function () { this.isDisposed = !0; var t = this.connection; this.timeout(new Error(\"Provider disposed.\")), t.then(function (t) { return t.close(); }); };\r\n                i.prototype.send = function () { throw new Error(\"Sync requests are deprecated\"); };\r\n                i.prototype.sendAsync = function (t, e) {\r\n                    var _this = this;\r\n                    var r = [];\r\n                    var i;\r\n                    if (t instanceof Array)\r\n                        i = Promise.all(t.map(function (t) { var e = o.future(); try {\r\n                            var o_7 = n.toRPC(t);\r\n                            r.push(o_7), _this.responseCallbacks.set(o_7.id, e);\r\n                        }\r\n                        catch (t) {\r\n                            e.reject(t);\r\n                        } return e; }));\r\n                    else {\r\n                        var e_7 = o.future();\r\n                        try {\r\n                            var o_8 = n.toRPC(t);\r\n                            r.push(o_8), this.responseCallbacks.set(o_8.id, e_7);\r\n                        }\r\n                        catch (t) {\r\n                            e_7.reject(t);\r\n                        }\r\n                        i = e_7;\r\n                    }\r\n                    i.then(function (t) { return e(null, t); }, function (t) { return e(t); }), this.connection.then(function (t) { r.forEach(function (e) { var r = JSON.stringify(e); _this.debug && console.log(\"SEND >> \" + r), t.send(r); }); }, function (t) { e(t); });\r\n                };\r\n                i.prototype.parseResponse = function (t) {\r\n                    var _this = this;\r\n                    var e = [];\r\n                    return t.replace(/\\}[\\n\\r]?\\{/g, \"}|--|{\").replace(/\\}\\][\\n\\r]?\\[\\{/g, \"}]|--|[{\").replace(/\\}[\\n\\r]?\\[\\{/g, \"}|--|[{\").replace(/\\}\\][\\n\\r]?\\{/g, \"}]|--|{\").split(\"|--|\").forEach(function (t) { var r = t; _this.lastChunk && (r = _this.lastChunk + r); var n = null; try {\r\n                        n = JSON.parse(r);\r\n                    }\r\n                    catch (t) {\r\n                        return _this.lastChunk = r, clearTimeout(_this.lastChunkTimeout), void (_this.lastChunkTimeout = setTimeout(function () { _this.timeout(); }, 15e3));\r\n                    } clearTimeout(_this.lastChunkTimeout), _this.lastChunk = null, n && e.push(n); }), e;\r\n                };\r\n                i.prototype.processMessage = function (t) { if (\"id\" in t) {\r\n                    var e_8 = t.id, r_5 = this.responseCallbacks.get(e_8);\r\n                    if (!r_5)\r\n                        return void console.error(\"Error: Received a response for an unknown request\", t);\r\n                    this.responseCallbacks.delete(e_8), \"error\" in t ? r_5.reject(Object.assign(new Error(t.error.message || t.error), t.error)) : \"result\" in t && r_5.resolve(t);\r\n                }\r\n                else\r\n                    this.notificationCallbacks.forEach(function (e) { return e(null, t); }); };\r\n                i.prototype.timeout = function (t) { this.connection && this.connection.isPending || (this.connection = o.future()); var e = t || new Error(\"Connection timeout\"); this.responseCallbacks.forEach(function (t) { return t.reject(e); }), this.responseCallbacks.clear(), this.isDisposed || this.connect(); };\r\n                i.prototype.connect = function () {\r\n                    var _this = this;\r\n                    this.connection && !this.connection.isPending && this.connection.then(function (t) { return t.close(); }), this.connection && this.connection.isPending || (this.connection = o.future()), this.lastChunk = \"\";\r\n                    var t = this.options.WebSocketConstructor || (\"undefined\" != typeof WebSocket ? WebSocket : void 0);\r\n                    if (!t)\r\n                        throw new Error(\"Please provide a WebSocketConstructor\");\r\n                    var e = new t(this.url, this.options.protocol);\r\n                    e.onopen = (function () { _this.connection.resolve(e); }), e.onerror = (function (t) { _this.timeout(t); }), e.onclose = (function (t) { _this.timeout(new Error(\"Connection closed (\" + (t && t.reason || \"Unknown reason\") + \")\")); }), e.onmessage = (function (t) { var e = \"string\" == typeof t.data ? t.data : \"\"; _this.debug && console.log(\"RECV << \" + t.data), _this.parseResponse(e).forEach(function (t) { t instanceof Array ? t.forEach(function (t) { return _this.processMessage(t); }) : _this.processMessage(t); }); });\r\n                };\r\n                return i;\r\n            }());\r\n            e.WebSocketProvider = i, e.default = i;\r\n        }, function (t, e, r) { !function (t) { var e, r, n, o = String.fromCharCode; function i(t) { for (var e, r, n = [], o = 0, i = t.length; o < i;)\r\n            (e = t.charCodeAt(o++)) >= 55296 && e <= 56319 && o < i ? 56320 == (64512 & (r = t.charCodeAt(o++))) ? n.push(((1023 & e) << 10) + (1023 & r) + 65536) : (n.push(e), o--) : n.push(e); return n; } function s(t) { if (t >= 55296 && t <= 57343)\r\n            throw Error(\"Lone surrogate U+\" + t.toString(16).toUpperCase() + \" is not a scalar value\"); } function a(t, e) { return o(t >> e & 63 | 128); } function c(t) { if (0 == (4294967168 & t))\r\n            return o(t); var e = \"\"; return 0 == (4294965248 & t) ? e = o(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (s(t), e = o(t >> 12 & 15 | 224), e += a(t, 6)) : 0 == (4292870144 & t) && (e = o(t >> 18 & 7 | 240), e += a(t, 12), e += a(t, 6)), e += o(63 & t | 128); } function u() { if (n >= r)\r\n            throw Error(\"Invalid byte index\"); var t = 255 & e[n]; if (n++, 128 == (192 & t))\r\n            return 63 & t; throw Error(\"Invalid continuation byte\"); } function l() { var t, o; if (n > r)\r\n            throw Error(\"Invalid byte index\"); if (n == r)\r\n            return !1; if (t = 255 & e[n], n++, 0 == (128 & t))\r\n            return t; if (192 == (224 & t)) {\r\n            if ((o = (31 & t) << 6 | u()) >= 128)\r\n                return o;\r\n            throw Error(\"Invalid continuation byte\");\r\n        } if (224 == (240 & t)) {\r\n            if ((o = (15 & t) << 12 | u() << 6 | u()) >= 2048)\r\n                return s(o), o;\r\n            throw Error(\"Invalid continuation byte\");\r\n        } if (240 == (248 & t) && (o = (7 & t) << 18 | u() << 12 | u() << 6 | u()) >= 65536 && o <= 1114111)\r\n            return o; throw Error(\"Invalid UTF-8 detected\"); } t.version = \"3.0.0\", t.encode = function (t) { for (var e = i(t), r = e.length, n = -1, o = \"\"; ++n < r;)\r\n            o += c(e[n]); return o; }, t.decode = function (t) { e = i(t), r = e.length, n = 0; for (var s, a = []; !1 !== (s = l());)\r\n            a.push(s); return function (t) { for (var e, r = t.length, n = -1, i = \"\"; ++n < r;)\r\n            (e = t[n]) > 65535 && (i += o((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), i += o(e); return i; }(a); }; }(e); }, function (t, e, r) { var n; t.exports = (n = r(0), r(10), r(33), r(34), r(6), r(7), r(11), r(18), r(35), r(19), r(36), r(20), r(37), r(12), r(38), r(5), r(1), r(39), r(40), r(41), r(42), r(43), r(44), r(45), r(46), r(47), r(48), r(49), r(50), r(51), r(52), r(53), r(54), n); }, function (t, e, r) { var n; t.exports = (n = r(0), function () { if (\"function\" == typeof ArrayBuffer) {\r\n            var t = n.lib.WordArray, e = t.init;\r\n            (t.init = function (t) { if (t instanceof ArrayBuffer && (t = new Uint8Array(t)), (t instanceof Int8Array || \"undefined\" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array) && (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength)), t instanceof Uint8Array) {\r\n                for (var r = t.byteLength, n = [], o = 0; o < r; o++)\r\n                    n[o >>> 2] |= t[o] << 24 - o % 4 * 8;\r\n                e.call(this, n, r);\r\n            }\r\n            else\r\n                e.apply(this, arguments); }).prototype = t;\r\n        } }(), n.lib.WordArray); }, function (t, e, r) { var n; t.exports = (n = r(0), function () { var t = n, e = t.lib.WordArray, r = t.enc; function o(t) { return t << 8 & 4278255360 | t >>> 8 & 16711935; } r.Utf16 = r.Utf16BE = { stringify: function (t) { for (var e = t.words, r = t.sigBytes, n = [], o = 0; o < r; o += 2) {\r\n                var i = e[o >>> 2] >>> 16 - o % 4 * 8 & 65535;\r\n                n.push(String.fromCharCode(i));\r\n            } return n.join(\"\"); }, parse: function (t) { for (var r = t.length, n = [], o = 0; o < r; o++)\r\n                n[o >>> 1] |= t.charCodeAt(o) << 16 - o % 2 * 16; return e.create(n, 2 * r); } }, r.Utf16LE = { stringify: function (t) { for (var e = t.words, r = t.sigBytes, n = [], i = 0; i < r; i += 2) {\r\n                var s = o(e[i >>> 2] >>> 16 - i % 4 * 8 & 65535);\r\n                n.push(String.fromCharCode(s));\r\n            } return n.join(\"\"); }, parse: function (t) { for (var r = t.length, n = [], i = 0; i < r; i++)\r\n                n[i >>> 1] |= o(t.charCodeAt(i) << 16 - i % 2 * 16); return e.create(n, 2 * r); } }; }(), n.enc.Utf16); }, function (t, e, r) { var n, o, i, s, a, c; t.exports = (n = r(0), r(18), i = (o = n).lib.WordArray, s = o.algo, a = s.SHA256, c = s.SHA224 = a.extend({ _doReset: function () { this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]); }, _doFinalize: function () { var t = a._doFinalize.call(this); return t.sigBytes -= 4, t; } }), o.SHA224 = a._createHelper(c), o.HmacSHA224 = a._createHmacHelper(c), n.SHA224); }, function (t, e, r) { var n, o, i, s, a, c, u, l; t.exports = (n = r(0), r(10), r(19), i = (o = n).x64, s = i.Word, a = i.WordArray, c = o.algo, u = c.SHA512, l = c.SHA384 = u.extend({ _doReset: function () { this._hash = new a.init([new s.init(3418070365, 3238371032), new s.init(1654270250, 914150663), new s.init(2438529370, 812702999), new s.init(355462360, 4144912697), new s.init(1731405415, 4290775857), new s.init(2394180231, 1750603025), new s.init(3675008525, 1694076839), new s.init(1203062813, 3204075428)]); }, _doFinalize: function () { var t = u._doFinalize.call(this); return t.sigBytes -= 16, t; } }), o.SHA384 = u._createHelper(l), o.HmacSHA384 = u._createHmacHelper(l), n.SHA384); }, function (t, e, r) {\r\n            var n;\r\n            t.exports = (n = r(0),\r\n                /** @preserve\r\n                    (c) 2012 by Cédric Mesnil. All rights reserved.\r\n                \n                    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n                \n                        - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n                        - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n                \n                    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                    */\r\n                function (t) { var e = n, r = e.lib, o = r.WordArray, i = r.Hasher, s = e.algo, a = o.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), c = o.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), u = o.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), l = o.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), h = o.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), f = o.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), p = s.RIPEMD160 = i.extend({ _doReset: function () { this._hash = o.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]); }, _doProcessBlock: function (t, e) { for (var r = 0; r < 16; r++) {\r\n                        var n = e + r, o = t[n];\r\n                        t[n] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);\r\n                    } var i, s, p, w, b, B, F, N, k, x, S, A = this._hash.words, O = h.words, T = f.words, P = a.words, M = c.words, C = u.words, E = l.words; for (B = i = A[0], F = s = A[1], N = p = A[2], k = w = A[3], x = b = A[4], r = 0; r < 80; r += 1)\r\n                        S = i + t[e + P[r]] | 0, S += r < 16 ? d(s, p, w) + O[0] : r < 32 ? m(s, p, w) + O[1] : r < 48 ? y(s, p, w) + O[2] : r < 64 ? g(s, p, w) + O[3] : _(s, p, w) + O[4], S = (S = v(S |= 0, C[r])) + b | 0, i = b, b = w, w = v(p, 10), p = s, s = S, S = B + t[e + M[r]] | 0, S += r < 16 ? _(F, N, k) + T[0] : r < 32 ? g(F, N, k) + T[1] : r < 48 ? y(F, N, k) + T[2] : r < 64 ? m(F, N, k) + T[3] : d(F, N, k) + T[4], S = (S = v(S |= 0, E[r])) + x | 0, B = x, x = k, k = v(N, 10), N = F, F = S; S = A[1] + p + k | 0, A[1] = A[2] + w + x | 0, A[2] = A[3] + b + B | 0, A[3] = A[4] + i + F | 0, A[4] = A[0] + s + N | 0, A[0] = S; }, _doFinalize: function () { var t = this._data, e = t.words, r = 8 * this._nDataBytes, n = 8 * t.sigBytes; e[n >>> 5] |= 128 << 24 - n % 32, e[14 + (n + 64 >>> 9 << 4)] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8), t.sigBytes = 4 * (e.length + 1), this._process(); for (var o = this._hash, i = o.words, s = 0; s < 5; s++) {\r\n                        var a = i[s];\r\n                        i[s] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);\r\n                    } return o; }, clone: function () { var t = i.clone.call(this); return t._hash = this._hash.clone(), t; } }); function d(t, e, r) { return t ^ e ^ r; } function m(t, e, r) { return t & e | ~t & r; } function y(t, e, r) { return (t | ~e) ^ r; } function g(t, e, r) { return t & r | e & ~r; } function _(t, e, r) { return t ^ (e | ~r); } function v(t, e) { return t << e | t >>> 32 - e; } e.RIPEMD160 = i._createHelper(p), e.HmacRIPEMD160 = i._createHmacHelper(p); }(Math), n.RIPEMD160);\r\n        }, function (t, e, r) { var n, o, i, s, a, c, u, l, h; t.exports = (n = r(0), r(11), r(12), i = (o = n).lib, s = i.Base, a = i.WordArray, c = o.algo, u = c.SHA1, l = c.HMAC, h = c.PBKDF2 = s.extend({ cfg: s.extend({ keySize: 4, hasher: u, iterations: 1 }), init: function (t) { this.cfg = this.cfg.extend(t); }, compute: function (t, e) { for (var r = this.cfg, n = l.create(r.hasher, t), o = a.create(), i = a.create([1]), s = o.words, c = i.words, u = r.keySize, h = r.iterations; s.length < u;) {\r\n                var f = n.update(e).finalize(i);\r\n                n.reset();\r\n                for (var p = f.words, d = p.length, m = f, y = 1; y < h; y++) {\r\n                    m = n.finalize(m), n.reset();\r\n                    for (var g = m.words, _ = 0; _ < d; _++)\r\n                        p[_] ^= g[_];\r\n                }\r\n                o.concat(f), c[0]++;\r\n            } return o.sigBytes = 4 * u, o; } }), o.PBKDF2 = function (t, e, r) { return h.create(r).compute(t, e); }, n.PBKDF2); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.mode.CFB = function () { var t = n.lib.BlockCipherMode.extend(); function e(t, e, r, n) { var o = this._iv; if (o) {\r\n            var i = o.slice(0);\r\n            this._iv = void 0;\r\n        }\r\n        else\r\n            i = this._prevBlock; n.encryptBlock(i, 0); for (var s = 0; s < r; s++)\r\n            t[e + s] ^= i[s]; } return t.Encryptor = t.extend({ processBlock: function (t, r) { var n = this._cipher, o = n.blockSize; e.call(this, t, r, o, n), this._prevBlock = t.slice(r, r + o); } }), t.Decryptor = t.extend({ processBlock: function (t, r) { var n = this._cipher, o = n.blockSize, i = t.slice(r, r + o); e.call(this, t, r, o, n), this._prevBlock = i; } }), t; }(), n.mode.CFB); }, function (t, e, r) { var n, o, i; t.exports = (n = r(0), r(1), n.mode.CTR = (o = n.lib.BlockCipherMode.extend(), i = o.Encryptor = o.extend({ processBlock: function (t, e) { var r = this._cipher, n = r.blockSize, o = this._iv, i = this._counter; o && (i = this._counter = o.slice(0), this._iv = void 0); var s = i.slice(0); r.encryptBlock(s, 0), i[n - 1] = i[n - 1] + 1 | 0; for (var a = 0; a < n; a++)\r\n                t[e + a] ^= s[a]; } }), o.Decryptor = i, o), n.mode.CTR); }, function (t, e, r) {\r\n            var n;\r\n            t.exports = (n = r(0), r(1),\r\n                /** @preserve\r\n                     * Counter block mode compatible with  Dr Brian Gladman fileenc.c\r\n                     * derived from CryptoJS.mode.CTR\r\n                     * Jan Hruby jhruby.web@gmail.com\r\n                     */\r\n                n.mode.CTRGladman = function () { var t = n.lib.BlockCipherMode.extend(); function e(t) { if (255 == (t >> 24 & 255)) {\r\n                    var e = t >> 16 & 255, r = t >> 8 & 255, n = 255 & t;\r\n                    255 === e ? (e = 0, 255 === r ? (r = 0, 255 === n ? n = 0 : ++n) : ++r) : ++e, t = 0, t += e << 16, t += r << 8, t += n;\r\n                }\r\n                else\r\n                    t += 1 << 24; return t; } var r = t.Encryptor = t.extend({ processBlock: function (t, r) { var n = this._cipher, o = n.blockSize, i = this._iv, s = this._counter; i && (s = this._counter = i.slice(0), this._iv = void 0), function (t) { 0 === (t[0] = e(t[0])) && (t[1] = e(t[1])); }(s); var a = s.slice(0); n.encryptBlock(a, 0); for (var c = 0; c < o; c++)\r\n                        t[r + c] ^= a[c]; } }); return t.Decryptor = r, t; }(), n.mode.CTRGladman);\r\n        }, function (t, e, r) { var n, o, i; t.exports = (n = r(0), r(1), n.mode.OFB = (o = n.lib.BlockCipherMode.extend(), i = o.Encryptor = o.extend({ processBlock: function (t, e) { var r = this._cipher, n = r.blockSize, o = this._iv, i = this._keystream; o && (i = this._keystream = o.slice(0), this._iv = void 0), r.encryptBlock(i, 0); for (var s = 0; s < n; s++)\r\n                t[e + s] ^= i[s]; } }), o.Decryptor = i, o), n.mode.OFB); }, function (t, e, r) { var n, o; t.exports = (n = r(0), r(1), n.mode.ECB = ((o = n.lib.BlockCipherMode.extend()).Encryptor = o.extend({ processBlock: function (t, e) { this._cipher.encryptBlock(t, e); } }), o.Decryptor = o.extend({ processBlock: function (t, e) { this._cipher.decryptBlock(t, e); } }), o), n.mode.ECB); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.pad.AnsiX923 = { pad: function (t, e) { var r = t.sigBytes, n = 4 * e, o = n - r % n, i = r + o - 1; t.clamp(), t.words[i >>> 2] |= o << 24 - i % 4 * 8, t.sigBytes += o; }, unpad: function (t) { var e = 255 & t.words[t.sigBytes - 1 >>> 2]; t.sigBytes -= e; } }, n.pad.Ansix923); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.pad.Iso10126 = { pad: function (t, e) { var r = 4 * e, o = r - t.sigBytes % r; t.concat(n.lib.WordArray.random(o - 1)).concat(n.lib.WordArray.create([o << 24], 1)); }, unpad: function (t) { var e = 255 & t.words[t.sigBytes - 1 >>> 2]; t.sigBytes -= e; } }, n.pad.Iso10126); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.pad.Iso97971 = { pad: function (t, e) { t.concat(n.lib.WordArray.create([2147483648], 1)), n.pad.ZeroPadding.pad(t, e); }, unpad: function (t) { n.pad.ZeroPadding.unpad(t), t.sigBytes--; } }, n.pad.Iso97971); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.pad.ZeroPadding = { pad: function (t, e) { var r = 4 * e; t.clamp(), t.sigBytes += r - (t.sigBytes % r || r); }, unpad: function (t) { for (var e = t.words, r = t.sigBytes - 1; !(e[r >>> 2] >>> 24 - r % 4 * 8 & 255);)\r\n                r--; t.sigBytes = r + 1; } }, n.pad.ZeroPadding); }, function (t, e, r) { var n; t.exports = (n = r(0), r(1), n.pad.NoPadding = { pad: function () { }, unpad: function () { } }, n.pad.NoPadding); }, function (t, e, r) { var n, o, i, s; t.exports = (n = r(0), r(1), i = (o = n).lib.CipherParams, s = o.enc.Hex, o.format.Hex = { stringify: function (t) { return t.ciphertext.toString(s); }, parse: function (t) { var e = s.parse(t); return i.create({ ciphertext: e }); } }, n.format.Hex); }, function (t, e, r) { var n; t.exports = (n = r(0), r(6), r(7), r(5), r(1), function () { var t = n, e = t.lib.BlockCipher, r = t.algo, o = [], i = [], s = [], a = [], c = [], u = [], l = [], h = [], f = [], p = []; !function () { for (var t = [], e = 0; e < 256; e++)\r\n            t[e] = e < 128 ? e << 1 : e << 1 ^ 283; var r = 0, n = 0; for (e = 0; e < 256; e++) {\r\n            var d = n ^ n << 1 ^ n << 2 ^ n << 3 ^ n << 4;\r\n            d = d >>> 8 ^ 255 & d ^ 99, o[r] = d, i[d] = r;\r\n            var m = t[r], y = t[m], g = t[y], _ = 257 * t[d] ^ 16843008 * d;\r\n            s[r] = _ << 24 | _ >>> 8, a[r] = _ << 16 | _ >>> 16, c[r] = _ << 8 | _ >>> 24, u[r] = _, _ = 16843009 * g ^ 65537 * y ^ 257 * m ^ 16843008 * r, l[d] = _ << 24 | _ >>> 8, h[d] = _ << 16 | _ >>> 16, f[d] = _ << 8 | _ >>> 24, p[d] = _, r ? (r = m ^ t[t[t[g ^ m]]], n ^= t[t[n]]) : r = n = 1;\r\n        } }(); var d = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], m = r.AES = e.extend({ _doReset: function () { if (!this._nRounds || this._keyPriorReset !== this._key) {\r\n                for (var t = this._keyPriorReset = this._key, e = t.words, r = t.sigBytes / 4, n = 4 * ((this._nRounds = r + 6) + 1), i = this._keySchedule = [], s = 0; s < n; s++)\r\n                    if (s < r)\r\n                        i[s] = e[s];\r\n                    else {\r\n                        var a = i[s - 1];\r\n                        s % r ? r > 6 && s % r == 4 && (a = o[a >>> 24] << 24 | o[a >>> 16 & 255] << 16 | o[a >>> 8 & 255] << 8 | o[255 & a]) : (a = o[(a = a << 8 | a >>> 24) >>> 24] << 24 | o[a >>> 16 & 255] << 16 | o[a >>> 8 & 255] << 8 | o[255 & a], a ^= d[s / r | 0] << 24), i[s] = i[s - r] ^ a;\r\n                    }\r\n                for (var c = this._invKeySchedule = [], u = 0; u < n; u++)\r\n                    s = n - u, a = u % 4 ? i[s] : i[s - 4], c[u] = u < 4 || s <= 4 ? a : l[o[a >>> 24]] ^ h[o[a >>> 16 & 255]] ^ f[o[a >>> 8 & 255]] ^ p[o[255 & a]];\r\n            } }, encryptBlock: function (t, e) { this._doCryptBlock(t, e, this._keySchedule, s, a, c, u, o); }, decryptBlock: function (t, e) { var r = t[e + 1]; t[e + 1] = t[e + 3], t[e + 3] = r, this._doCryptBlock(t, e, this._invKeySchedule, l, h, f, p, i), r = t[e + 1], t[e + 1] = t[e + 3], t[e + 3] = r; }, _doCryptBlock: function (t, e, r, n, o, i, s, a) { for (var c = this._nRounds, u = t[e] ^ r[0], l = t[e + 1] ^ r[1], h = t[e + 2] ^ r[2], f = t[e + 3] ^ r[3], p = 4, d = 1; d < c; d++) {\r\n                var m = n[u >>> 24] ^ o[l >>> 16 & 255] ^ i[h >>> 8 & 255] ^ s[255 & f] ^ r[p++], y = n[l >>> 24] ^ o[h >>> 16 & 255] ^ i[f >>> 8 & 255] ^ s[255 & u] ^ r[p++], g = n[h >>> 24] ^ o[f >>> 16 & 255] ^ i[u >>> 8 & 255] ^ s[255 & l] ^ r[p++], _ = n[f >>> 24] ^ o[u >>> 16 & 255] ^ i[l >>> 8 & 255] ^ s[255 & h] ^ r[p++];\r\n                u = m, l = y, h = g, f = _;\r\n            } m = (a[u >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[h >>> 8 & 255] << 8 | a[255 & f]) ^ r[p++], y = (a[l >>> 24] << 24 | a[h >>> 16 & 255] << 16 | a[f >>> 8 & 255] << 8 | a[255 & u]) ^ r[p++], g = (a[h >>> 24] << 24 | a[f >>> 16 & 255] << 16 | a[u >>> 8 & 255] << 8 | a[255 & l]) ^ r[p++], _ = (a[f >>> 24] << 24 | a[u >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & h]) ^ r[p++], t[e] = m, t[e + 1] = y, t[e + 2] = g, t[e + 3] = _; }, keySize: 8 }); t.AES = e._createHelper(m); }(), n.AES); }, function (t, e, r) { var n; t.exports = (n = r(0), r(6), r(7), r(5), r(1), function () { var t = n, e = t.lib, r = e.WordArray, o = e.BlockCipher, i = t.algo, s = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], a = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], u = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], l = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], h = i.DES = o.extend({ _doReset: function () { for (var t = this._key.words, e = [], r = 0; r < 56; r++) {\r\n                var n = s[r] - 1;\r\n                e[r] = t[n >>> 5] >>> 31 - n % 32 & 1;\r\n            } for (var o = this._subKeys = [], i = 0; i < 16; i++) {\r\n                var u = o[i] = [], l = c[i];\r\n                for (r = 0; r < 24; r++)\r\n                    u[r / 6 | 0] |= e[(a[r] - 1 + l) % 28] << 31 - r % 6, u[4 + (r / 6 | 0)] |= e[28 + (a[r + 24] - 1 + l) % 28] << 31 - r % 6;\r\n                for (u[0] = u[0] << 1 | u[0] >>> 31, r = 1; r < 7; r++)\r\n                    u[r] = u[r] >>> 4 * (r - 1) + 3;\r\n                u[7] = u[7] << 5 | u[7] >>> 27;\r\n            } var h = this._invSubKeys = []; for (r = 0; r < 16; r++)\r\n                h[r] = o[15 - r]; }, encryptBlock: function (t, e) { this._doCryptBlock(t, e, this._subKeys); }, decryptBlock: function (t, e) { this._doCryptBlock(t, e, this._invSubKeys); }, _doCryptBlock: function (t, e, r) { this._lBlock = t[e], this._rBlock = t[e + 1], f.call(this, 4, 252645135), f.call(this, 16, 65535), p.call(this, 2, 858993459), p.call(this, 8, 16711935), f.call(this, 1, 1431655765); for (var n = 0; n < 16; n++) {\r\n                for (var o = r[n], i = this._lBlock, s = this._rBlock, a = 0, c = 0; c < 8; c++)\r\n                    a |= u[c][((s ^ o[c]) & l[c]) >>> 0];\r\n                this._lBlock = s, this._rBlock = i ^ a;\r\n            } var h = this._lBlock; this._lBlock = this._rBlock, this._rBlock = h, f.call(this, 1, 1431655765), p.call(this, 8, 16711935), p.call(this, 2, 858993459), f.call(this, 16, 65535), f.call(this, 4, 252645135), t[e] = this._lBlock, t[e + 1] = this._rBlock; }, keySize: 2, ivSize: 2, blockSize: 2 }); function f(t, e) { var r = (this._lBlock >>> t ^ this._rBlock) & e; this._rBlock ^= r, this._lBlock ^= r << t; } function p(t, e) { var r = (this._rBlock >>> t ^ this._lBlock) & e; this._lBlock ^= r, this._rBlock ^= r << t; } t.DES = o._createHelper(h); var d = i.TripleDES = o.extend({ _doReset: function () { var t = this._key.words; this._des1 = h.createEncryptor(r.create(t.slice(0, 2))), this._des2 = h.createEncryptor(r.create(t.slice(2, 4))), this._des3 = h.createEncryptor(r.create(t.slice(4, 6))); }, encryptBlock: function (t, e) { this._des1.encryptBlock(t, e), this._des2.decryptBlock(t, e), this._des3.encryptBlock(t, e); }, decryptBlock: function (t, e) { this._des3.decryptBlock(t, e), this._des2.encryptBlock(t, e), this._des1.decryptBlock(t, e); }, keySize: 6, ivSize: 2, blockSize: 2 }); t.TripleDES = o._createHelper(d); }(), n.TripleDES); }, function (t, e, r) { var n; t.exports = (n = r(0), r(6), r(7), r(5), r(1), function () { var t = n, e = t.lib.StreamCipher, r = t.algo, o = r.RC4 = e.extend({ _doReset: function () { for (var t = this._key, e = t.words, r = t.sigBytes, n = this._S = [], o = 0; o < 256; o++)\r\n                n[o] = o; o = 0; for (var i = 0; o < 256; o++) {\r\n                var s = o % r, a = e[s >>> 2] >>> 24 - s % 4 * 8 & 255;\r\n                i = (i + n[o] + a) % 256;\r\n                var c = n[o];\r\n                n[o] = n[i], n[i] = c;\r\n            } this._i = this._j = 0; }, _doProcessBlock: function (t, e) { t[e] ^= i.call(this); }, keySize: 8, ivSize: 0 }); function i() { for (var t = this._S, e = this._i, r = this._j, n = 0, o = 0; o < 4; o++) {\r\n            r = (r + t[e = (e + 1) % 256]) % 256;\r\n            var i = t[e];\r\n            t[e] = t[r], t[r] = i, n |= t[(t[e] + t[r]) % 256] << 24 - 8 * o;\r\n        } return this._i = e, this._j = r, n; } t.RC4 = e._createHelper(o); var s = r.RC4Drop = o.extend({ cfg: o.cfg.extend({ drop: 192 }), _doReset: function () { o._doReset.call(this); for (var t = this.cfg.drop; t > 0; t--)\r\n                i.call(this); } }); t.RC4Drop = e._createHelper(s); }(), n.RC4); }, function (t, e, r) { var n; t.exports = (n = r(0), r(6), r(7), r(5), r(1), function () { var t = n, e = t.lib.StreamCipher, r = t.algo, o = [], i = [], s = [], a = r.Rabbit = e.extend({ _doReset: function () { for (var t = this._key.words, e = this.cfg.iv, r = 0; r < 4; r++)\r\n                t[r] = 16711935 & (t[r] << 8 | t[r] >>> 24) | 4278255360 & (t[r] << 24 | t[r] >>> 8); var n = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], o = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]]; for (this._b = 0, r = 0; r < 4; r++)\r\n                c.call(this); for (r = 0; r < 8; r++)\r\n                o[r] ^= n[r + 4 & 7]; if (e) {\r\n                var i = e.words, s = i[0], a = i[1], u = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), l = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), h = u >>> 16 | 4294901760 & l, f = l << 16 | 65535 & u;\r\n                for (o[0] ^= u, o[1] ^= h, o[2] ^= l, o[3] ^= f, o[4] ^= u, o[5] ^= h, o[6] ^= l, o[7] ^= f, r = 0; r < 4; r++)\r\n                    c.call(this);\r\n            } }, _doProcessBlock: function (t, e) { var r = this._X; c.call(this), o[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, o[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, o[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, o[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16; for (var n = 0; n < 4; n++)\r\n                o[n] = 16711935 & (o[n] << 8 | o[n] >>> 24) | 4278255360 & (o[n] << 24 | o[n] >>> 8), t[e + n] ^= o[n]; }, blockSize: 4, ivSize: 2 }); function c() { for (var t = this._X, e = this._C, r = 0; r < 8; r++)\r\n            i[r] = e[r]; for (e[0] = e[0] + 1295307597 + this._b | 0, e[1] = e[1] + 3545052371 + (e[0] >>> 0 < i[0] >>> 0 ? 1 : 0) | 0, e[2] = e[2] + 886263092 + (e[1] >>> 0 < i[1] >>> 0 ? 1 : 0) | 0, e[3] = e[3] + 1295307597 + (e[2] >>> 0 < i[2] >>> 0 ? 1 : 0) | 0, e[4] = e[4] + 3545052371 + (e[3] >>> 0 < i[3] >>> 0 ? 1 : 0) | 0, e[5] = e[5] + 886263092 + (e[4] >>> 0 < i[4] >>> 0 ? 1 : 0) | 0, e[6] = e[6] + 1295307597 + (e[5] >>> 0 < i[5] >>> 0 ? 1 : 0) | 0, e[7] = e[7] + 3545052371 + (e[6] >>> 0 < i[6] >>> 0 ? 1 : 0) | 0, this._b = e[7] >>> 0 < i[7] >>> 0 ? 1 : 0, r = 0; r < 8; r++) {\r\n            var n = t[r] + e[r], o = 65535 & n, a = n >>> 16, c = ((o * o >>> 17) + o * a >>> 15) + a * a, u = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);\r\n            s[r] = c ^ u;\r\n        } t[0] = s[0] + (s[7] << 16 | s[7] >>> 16) + (s[6] << 16 | s[6] >>> 16) | 0, t[1] = s[1] + (s[0] << 8 | s[0] >>> 24) + s[7] | 0, t[2] = s[2] + (s[1] << 16 | s[1] >>> 16) + (s[0] << 16 | s[0] >>> 16) | 0, t[3] = s[3] + (s[2] << 8 | s[2] >>> 24) + s[1] | 0, t[4] = s[4] + (s[3] << 16 | s[3] >>> 16) + (s[2] << 16 | s[2] >>> 16) | 0, t[5] = s[5] + (s[4] << 8 | s[4] >>> 24) + s[3] | 0, t[6] = s[6] + (s[5] << 16 | s[5] >>> 16) + (s[4] << 16 | s[4] >>> 16) | 0, t[7] = s[7] + (s[6] << 8 | s[6] >>> 24) + s[5] | 0; } t.Rabbit = e._createHelper(a); }(), n.Rabbit); }, function (t, e, r) { var n; t.exports = (n = r(0), r(6), r(7), r(5), r(1), function () { var t = n, e = t.lib.StreamCipher, r = t.algo, o = [], i = [], s = [], a = r.RabbitLegacy = e.extend({ _doReset: function () { var t = this._key.words, e = this.cfg.iv, r = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], n = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]]; this._b = 0; for (var o = 0; o < 4; o++)\r\n                c.call(this); for (o = 0; o < 8; o++)\r\n                n[o] ^= r[o + 4 & 7]; if (e) {\r\n                var i = e.words, s = i[0], a = i[1], u = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), l = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), h = u >>> 16 | 4294901760 & l, f = l << 16 | 65535 & u;\r\n                for (n[0] ^= u, n[1] ^= h, n[2] ^= l, n[3] ^= f, n[4] ^= u, n[5] ^= h, n[6] ^= l, n[7] ^= f, o = 0; o < 4; o++)\r\n                    c.call(this);\r\n            } }, _doProcessBlock: function (t, e) { var r = this._X; c.call(this), o[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, o[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, o[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, o[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16; for (var n = 0; n < 4; n++)\r\n                o[n] = 16711935 & (o[n] << 8 | o[n] >>> 24) | 4278255360 & (o[n] << 24 | o[n] >>> 8), t[e + n] ^= o[n]; }, blockSize: 4, ivSize: 2 }); function c() { for (var t = this._X, e = this._C, r = 0; r < 8; r++)\r\n            i[r] = e[r]; for (e[0] = e[0] + 1295307597 + this._b | 0, e[1] = e[1] + 3545052371 + (e[0] >>> 0 < i[0] >>> 0 ? 1 : 0) | 0, e[2] = e[2] + 886263092 + (e[1] >>> 0 < i[1] >>> 0 ? 1 : 0) | 0, e[3] = e[3] + 1295307597 + (e[2] >>> 0 < i[2] >>> 0 ? 1 : 0) | 0, e[4] = e[4] + 3545052371 + (e[3] >>> 0 < i[3] >>> 0 ? 1 : 0) | 0, e[5] = e[5] + 886263092 + (e[4] >>> 0 < i[4] >>> 0 ? 1 : 0) | 0, e[6] = e[6] + 1295307597 + (e[5] >>> 0 < i[5] >>> 0 ? 1 : 0) | 0, e[7] = e[7] + 3545052371 + (e[6] >>> 0 < i[6] >>> 0 ? 1 : 0) | 0, this._b = e[7] >>> 0 < i[7] >>> 0 ? 1 : 0, r = 0; r < 8; r++) {\r\n            var n = t[r] + e[r], o = 65535 & n, a = n >>> 16, c = ((o * o >>> 17) + o * a >>> 15) + a * a, u = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);\r\n            s[r] = c ^ u;\r\n        } t[0] = s[0] + (s[7] << 16 | s[7] >>> 16) + (s[6] << 16 | s[6] >>> 16) | 0, t[1] = s[1] + (s[0] << 8 | s[0] >>> 24) + s[7] | 0, t[2] = s[2] + (s[1] << 16 | s[1] >>> 16) + (s[0] << 16 | s[0] >>> 16) | 0, t[3] = s[3] + (s[2] << 8 | s[2] >>> 24) + s[1] | 0, t[4] = s[4] + (s[3] << 16 | s[3] >>> 16) + (s[2] << 16 | s[2] >>> 16) | 0, t[5] = s[5] + (s[4] << 8 | s[4] >>> 24) + s[3] | 0, t[6] = s[6] + (s[5] << 16 | s[5] >>> 16) + (s[4] << 16 | s[4] >>> 16) | 0, t[7] = s[7] + (s[6] << 8 | s[6] >>> 24) + s[5] | 0; } t.RabbitLegacy = e._createHelper(a); }(), n.RabbitLegacy); }, function (t, e, r) {\r\n            \"use strict\";\r\n            var n = this && this.__decorate || function (t, e, r, n) { var o, i = arguments.length, s = i < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n                s = Reflect.decorate(t, e, r, n);\r\n            else\r\n                for (var a = t.length - 1; a >= 0; a--)\r\n                    (o = t[a]) && (s = (i < 3 ? o(s) : i > 3 ? o(e, r, s) : o(e, r)) || s); return i > 3 && s && Object.defineProperty(e, r, s), s; }, o = this && this.__metadata || function (t, e) { if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.metadata)\r\n                return Reflect.metadata(t, e); };\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var i = r(56), s = r(13), a = r(9), c = r(21), u = r(58), l = r(59);\r\n            function h(t, e) { var r = c.eth[e]; if (!r)\r\n                throw new Error(\"Could not find the method/property named \" + e.toString()); Object.defineProperty(t, e, { value: function () {\r\n                    var _a;\r\n                    return (_a = r.execute).call.apply(_a, __spread([r, this], arguments));\r\n                } }); }\r\n            e.TRANSACTION_FETCH_DELAY = 2e3, e.inject = h;\r\n            var f = /** @class */ (function () {\r\n                function f(t) {\r\n                    this.provider = t, this.requests = new Map;\r\n                }\r\n                f.prototype.sendAsync = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var e, r;\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            if (!this.provider)\r\n                                throw s.InvalidProvider();\r\n                            e = i.toPayload(t.method, t.params);\r\n                            r = a.future();\r\n                            return [2 /*return*/, (this.requests.set(e.id, r), this.provider.sendAsync(e, function (t, n) { _this.requests.delete(e.id), t ? r.reject(t) : i.isValidResponse(n) ? r.resolve(n.result) : r.reject(s.InvalidResponse(n)); }), r)];\r\n                        });\r\n                    });\r\n                };\r\n                f.prototype.setProvider = function (t) { this.provider = t; };\r\n                f.prototype.getConfirmedTransaction = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var e; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.waitForCompletion(t)];\r\n                            case 1:\r\n                                e = _a.sent();\r\n                                if (this.isFailure(e))\r\n                                    throw new Error(\"Transaction \\\"\" + t + \"\\\" failed\");\r\n                                return [2 /*return*/, e];\r\n                        }\r\n                    }); });\r\n                };\r\n                f.prototype.waitForCompletion = function (t, r) {\r\n                    return __awaiter(this, void 0, void 0, function () { var e_9, r_6; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, this.isTxDropped(t, r)];\r\n                            case 1:\r\n                                if (!_a.sent()) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, this.getTransactionAndReceipt(t)];\r\n                            case 2:\r\n                                e_9 = _a.sent();\r\n                                return [2 /*return*/, Object.assign({}, e_9, { status: u.TransactionStatus.failed })];\r\n                            case 3: return [4 /*yield*/, this.getTransactionAndReceipt(t)];\r\n                            case 4:\r\n                                r_6 = _a.sent();\r\n                                if (!this.isPending(r_6) && r_6.receipt)\r\n                                    return [2 /*return*/, Object.assign({}, r_6, { status: this.isFailure(r_6) ? u.TransactionStatus.failed : u.TransactionStatus.confirmed })];\r\n                                return [4 /*yield*/, l.sleep(e.TRANSACTION_FETCH_DELAY)];\r\n                            case 5:\r\n                                _a.sent();\r\n                                _a.label = 6;\r\n                            case 6: return [3 /*break*/, 3];\r\n                            case 7: return [2 /*return*/];\r\n                        }\r\n                    }); });\r\n                };\r\n                f.prototype.getTransaction = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var e, r, n, t_15, _a, t_12, _c, t_13, _d, t_14; return __generator(this, function (_e) {\r\n                        switch (_e.label) {\r\n                            case 0:\r\n                                _e.trys.push([0, 4, , 5]);\r\n                                return [4 /*yield*/, this.eth_accounts()];\r\n                            case 1:\r\n                                t_15 = (_e.sent())[0];\r\n                                _a = t_15;\r\n                                if (!_a) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, this.eth_getTransactionCount(t_15, \"latest\")];\r\n                            case 2:\r\n                                _a = (e = _e.sent());\r\n                                _e.label = 3;\r\n                            case 3:\r\n                                _a;\r\n                                return [3 /*break*/, 5];\r\n                            case 4:\r\n                                t_12 = _e.sent();\r\n                                e = null;\r\n                                return [3 /*break*/, 5];\r\n                            case 5:\r\n                                _e.trys.push([5, 7, , 8]);\r\n                                _c = null;\r\n                                return [4 /*yield*/, this.eth_getTransactionByHash(t)];\r\n                            case 6:\r\n                                if (_c == (r = _e.sent()))\r\n                                    return [2 /*return*/, null];\r\n                                return [3 /*break*/, 8];\r\n                            case 7:\r\n                                t_13 = _e.sent();\r\n                                return [2 /*return*/, null];\r\n                            case 8:\r\n                                if (null == r.blockNumber) {\r\n                                    if (null != e) {\r\n                                        if (r.nonce < e) {\r\n                                            return [2 /*return*/, { hash: t, type: u.TransactionType.replaced, nonce: r.nonce }];\r\n                                        }\r\n                                        if (r.nonce > e) {\r\n                                            return [2 /*return*/, { hash: t, type: u.TransactionType.queued, nonce: r.nonce }];\r\n                                        }\r\n                                    }\r\n                                    return [2 /*return*/, Object.assign({ type: u.TransactionType.pending }, r)];\r\n                                }\r\n                                _e.label = 9;\r\n                            case 9:\r\n                                _e.trys.push([9, 11, , 12]);\r\n                                _d = null;\r\n                                return [4 /*yield*/, this.eth_getTransactionReceipt(t)];\r\n                            case 10:\r\n                                if (_d == (n = _e.sent()) || 0 === n.status) {\r\n                                    return [2 /*return*/, Object.assign({ type: u.TransactionType.reverted }, r)];\r\n                                }\r\n                                return [3 /*break*/, 12];\r\n                            case 11:\r\n                                t_14 = _e.sent();\r\n                                return [2 /*return*/, null];\r\n                            case 12: return [2 /*return*/, Object.assign({ type: u.TransactionType.confirmed }, r, { receipt: n })];\r\n                        }\r\n                    }); });\r\n                };\r\n                f.prototype.isTxDropped = function (t, r) {\r\n                    if (r === void 0) { r = 15; }\r\n                    return __awaiter(this, void 0, void 0, function () { var n, _a; return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                n = r;\r\n                                _c.label = 1;\r\n                            case 1:\r\n                                if (!(n > 0)) return [3 /*break*/, 5];\r\n                                _a = null;\r\n                                return [4 /*yield*/, this.getTransactionAndReceipt(t)];\r\n                            case 2:\r\n                                if (_a !== (_c.sent()))\r\n                                    return [2 /*return*/, !1];\r\n                                n -= 1;\r\n                                return [4 /*yield*/, l.sleep(e.TRANSACTION_FETCH_DELAY)];\r\n                            case 3:\r\n                                _c.sent();\r\n                                _c.label = 4;\r\n                            case 4: return [3 /*break*/, 1];\r\n                            case 5: return [2 /*return*/, !0];\r\n                        }\r\n                    }); });\r\n                };\r\n                f.prototype.getTransactionAndReceipt = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var _a, e, r; return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0: return [4 /*yield*/, Promise.all([this.eth_getTransactionByHash(t), this.eth_getTransactionReceipt(t)])];\r\n                            case 1:\r\n                                _a = __read.apply(void 0, [_c.sent(), 2]), e = _a[0], r = _a[1];\r\n                                return [2 /*return*/, e ? Object.assign({}, e, { receipt: r }) : null];\r\n                        }\r\n                    }); });\r\n                };\r\n                f.prototype.isPending = function (t) { return t && null === t.blockNumber; };\r\n                f.prototype.isFailure = function (t) { return t && (!t.receipt || 0 === t.receipt.status); };\r\n                return f;\r\n            }());\r\n            n([h, o(\"design:type\", Function)], f.prototype, \"web3_clientVersion\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"web3_sha3\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"net_version\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"net_peerCount\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"net_listening\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_protocolVersion\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_syncing\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_coinbase\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_mining\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_hashrate\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_gasPrice\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_accounts\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_blockNumber\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getBalance\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getStorageAt\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getTransactionCount\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getBlockTransactionCountByHash\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getBlockTransactionCountByNumber\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getUncleCountByBlockHash\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getUncleCountByBlockNumber\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getCode\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_sign\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_sendTransaction\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_sendRawTransaction\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_call\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_estimateGas\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getBlockByHash\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getBlockByNumber\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getTransactionByHash\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getTransactionByBlockHashAndIndex\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getTransactionByBlockNumberAndIndex\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getTransactionReceipt\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getUncleByBlockHashAndIndex\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getUncleByBlockNumberAndIndex\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_newFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_newBlockFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_newPendingTransactionFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_uninstallFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getFilterChanges\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getFilterLogs\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getLogs\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_getWork\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_submitWork\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"eth_submitHashrate\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_post\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_version\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_newIdentity\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_hasIdentity\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_newGroup\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_addToGroup\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_newFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_uninstallFilter\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_getFilterChanges\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"shh_getMessages\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_unlockAccount\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_newAccount\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_listAccounts\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_lockAccount\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_importRawKey\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_sendTransaction\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_sign\", void 0), n([h, o(\"design:type\", Function)], f.prototype, \"personal_ecRecover\", void 0), e.RequestManager = f;\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            function n(t, r) { if (!t)\r\n                throw new Error(\"jsonrpc method should be specified!\"); if (\"string\" != typeof t)\r\n                throw new Error(\"jsonrpc must be a string, got \" + typeof t + \"!\"); return e.messageId++, { jsonrpc: \"2.0\", id: e.messageId, method: t, params: r || [] }; }\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), e.messageId = 0, e.toPayload = n, e.isValidResponse = function (t) { return Array.isArray(t) ? t.every(e) : e(t); function e(t) { return !(!t || t.error || \"2.0\" !== t.jsonrpc || \"number\" != typeof t.id || null == t.result && void 0 === t.result); } }, e.toBatchPayload = function (t) { return t.map(function (t) { return n(t.method, t.params); }); };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), function (t) { t[t.ROUND_UP = 0] = \"ROUND_UP\", t[t.ROUND_DOWN = 1] = \"ROUND_DOWN\", t[t.ROUND_CE = 2] = \"ROUND_CE\", t[t.ROUND_FLOOR = 3] = \"ROUND_FLOOR\", t[t.ROUND_HALF_UP = 4] = \"ROUND_HALF_UP\", t[t.ROUND_HALF_DOWN = 5] = \"ROUND_HALF_DOWN\", t[t.ROUND_HALF_EVEN = 6] = \"ROUND_HALF_EVEN\", t[t.ROUND_HALF_CEIL = 7] = \"ROUND_HALF_CEIL\", t[t.ROUND_HALF_FLOOR = 8] = \"ROUND_HALF_FLOOR\"; }(e.BigNumberRoundingMode || (e.BigNumberRoundingMode = {}));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), function (t) { t.pending = \"pending\", t.confirmed = \"confirmed\", t.failed = \"failed\"; }(e.TransactionStatus || (e.TransactionStatus = {})), function (t) { t.queued = \"queued\", t.dropped = \"dropped\", t.replaced = \"replaced\", t.pending = \"pending\", t.reverted = \"reverted\", t.confirmed = \"confirmed\"; }(e.TransactionType || (e.TransactionType = {}));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 }), e.sleep = function (t) { return new Promise(function (e) { return setTimeout(e, t); }); };\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(8), i = r(13), s = r(15);\r\n            e.SolidityFunction = /** @class */ (function () {\r\n                function class_8(t, e, r) {\r\n                    this.requestManager = t, this.json = e, this._inputTypes = e.inputs.map(function (t) { return t.type; }), this._outputTypes = e.outputs.map(function (t) { return t.type; }), this._constant = e.constant, this._payable = e.payable, this.needsToBeTransaction = \"payable\" in e && e.payable || \"constant\" in e && !e.constant || \"stateMutability\" in e && \"nonpayable\" === e.stateMutability, this._name = n.transformToFullName(e), this._address = r;\r\n                }\r\n                class_8.prototype.extractDefaultBlock = function (t) { if (t.length > this._inputTypes.length && !n.isObject(t[t.length - 1]))\r\n                    return o.inputDefaultBlockNumberFormatter(t.pop()); };\r\n                class_8.prototype.validateArgs = function (t) { if (t.some(function (t) { return void 0 === t; }))\r\n                    throw new Error(\"Invalid call, some arguments are undefined\"); var e = t.filter(function (t) { return !(!0 === n.isObject(t) && !1 === n.isArray(t) && !1 === n.isBigNumber(t)); }); if (e.length !== this._inputTypes.length)\r\n                    throw i.InvalidNumberOfSolidityArgs(e.length, this._inputTypes.length); };\r\n                class_8.prototype.toPayload = function (t) { var e = { to: void 0, data: void 0, value: void 0, from: void 0 }; return t.length > this._inputTypes.length && n.isObject(t[t.length - 1]) && (e = t[t.length - 1]), this.validateArgs(t), e.to = this._address, e.data = \"0x\" + this.signature() + s.coder.encodeParams(this._inputTypes, t), e; };\r\n                class_8.prototype.signature = function () { return n.sha3(this._name).slice(0, 8); };\r\n                class_8.prototype.unpackOutput = function (t) { if (!t)\r\n                    return; var e = t.length >= 2 ? t.slice(2) : t; var r = s.coder.decodeParams(this._outputTypes, e); return 1 === r.length ? r[0] : r; };\r\n                class_8.prototype.execute = function (t) {\r\n                    var e = [];\r\n                    for (var _a = 1; _a < arguments.length; _a++) {\r\n                        e[_a - 1] = arguments[_a];\r\n                    }\r\n                    return __awaiter(this, void 0, void 0, function () { var r_7, r_8, n_10, o_9; return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                if (!t)\r\n                                    throw new Error(\"Cannot call function \" + this.displayName() + \" because there is no requestManager\");\r\n                                if (!this.needsToBeTransaction) return [3 /*break*/, 2];\r\n                                r_7 = this.toPayload(e);\r\n                                if (r_7.value > 0 && !this._payable)\r\n                                    throw new Error(\"Cannot send value to non-payable function\");\r\n                                if (!r_7.from)\r\n                                    throw new Error('Missing \"from\" in transaction options');\r\n                                return [4 /*yield*/, t.eth_sendTransaction(r_7)];\r\n                            case 1: return [2 /*return*/, _c.sent()];\r\n                            case 2:\r\n                                r_8 = this.extractDefaultBlock(e), n_10 = this.toPayload(e);\r\n                                return [4 /*yield*/, t.eth_call(n_10, r_8)];\r\n                            case 3:\r\n                                o_9 = _c.sent();\r\n                                return [2 /*return*/, this.unpackOutput(o_9)];\r\n                        }\r\n                    }); });\r\n                };\r\n                class_8.prototype.estimateGas = function () {\r\n                    var t = [];\r\n                    for (var _a = 0; _a < arguments.length; _a++) {\r\n                        t[_a] = arguments[_a];\r\n                    }\r\n                    var e = this.toPayload(t);\r\n                    return this.requestManager.eth_estimateGas(e);\r\n                };\r\n                class_8.prototype.getData = function () {\r\n                    var t = [];\r\n                    for (var _a = 0; _a < arguments.length; _a++) {\r\n                        t[_a] = arguments[_a];\r\n                    }\r\n                    return this.toPayload(t).data;\r\n                };\r\n                class_8.prototype.displayName = function () { return n.extractDisplayName(this._name); };\r\n                class_8.prototype.typeName = function () { return n.extractTypeName(this._name) || \"void\"; };\r\n                class_8.prototype.attachToContract = function (t) { var e = this.displayName(); var r = this, n = Object.assign(function () {\r\n                    var t = [];\r\n                    for (var _a = 0; _a < arguments.length; _a++) {\r\n                        t[_a] = arguments[_a];\r\n                    }\r\n                    var e = this.requestManager || r.requestManager;\r\n                    return r.execute.apply(r, __spread([e], t));\r\n                }, { estimateGas: this.estimateGas.bind(this) }); t[e] || (t[e] = n), t[e][this.typeName()] = n; };\r\n                return class_8;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeAddress = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeAddress, _super);\r\n                function SolidityTypeAddress() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputInt, outputFormatter: n.formatOutputAddress }) || this;\r\n                }\r\n                SolidityTypeAddress.prototype.isType = function (t) { return !!t.match(/address(\\[([0-9]*)\\])?/); };\r\n                return SolidityTypeAddress;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeBool = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeBool, _super);\r\n                function SolidityTypeBool() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputBool, outputFormatter: n.formatOutputBool }) || this;\r\n                }\r\n                SolidityTypeBool.prototype.isType = function (t) { return !!t.match(/^bool(\\[([0-9]*)\\])*$/); };\r\n                return SolidityTypeBool;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeInt = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeInt, _super);\r\n                function SolidityTypeInt() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputInt, outputFormatter: n.formatOutputInt }) || this;\r\n                }\r\n                SolidityTypeInt.prototype.isType = function (t) { return !!t.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/); };\r\n                return SolidityTypeInt;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeUInt = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeUInt, _super);\r\n                function SolidityTypeUInt() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputInt, outputFormatter: n.formatOutputUInt }) || this;\r\n                }\r\n                SolidityTypeUInt.prototype.isType = function (t) { return !!t.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/); };\r\n                return SolidityTypeUInt;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeDynamicBytes = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeDynamicBytes, _super);\r\n                function SolidityTypeDynamicBytes() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputDynamicBytes, outputFormatter: n.formatOutputDynamicBytes }) || this;\r\n                }\r\n                SolidityTypeDynamicBytes.prototype.isType = function (t) { return !!t.match(/^bytes(\\[([0-9]*)\\])*$/); };\r\n                SolidityTypeDynamicBytes.prototype.isDynamicType = function () { return !0; };\r\n                return SolidityTypeDynamicBytes;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeString = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeString, _super);\r\n                function SolidityTypeString() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputString, outputFormatter: n.formatOutputString }) || this;\r\n                }\r\n                SolidityTypeString.prototype.isType = function (t) { return !!t.match(/^string(\\[([0-9]*)\\])*$/); };\r\n                SolidityTypeString.prototype.isDynamicType = function () { return !0; };\r\n                return SolidityTypeString;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeReal = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeReal, _super);\r\n                function SolidityTypeReal() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputReal, outputFormatter: n.formatOutputReal }) || this;\r\n                }\r\n                SolidityTypeReal.prototype.isType = function (t) { return !!t.match(/real([0-9]*)?(\\[([0-9]*)\\])?/); };\r\n                return SolidityTypeReal;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeUReal = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeUReal, _super);\r\n                function SolidityTypeUReal() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputReal, outputFormatter: n.formatOutputUReal }) || this;\r\n                }\r\n                SolidityTypeUReal.prototype.isType = function (t) { return !!t.match(/^ureal([0-9]*)?(\\[([0-9]*)\\])*$/); };\r\n                return SolidityTypeUReal;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(2), o = r(4);\r\n            e.SolidityTypeBytes = /** @class */ (function (_super) {\r\n                __extends(SolidityTypeBytes, _super);\r\n                function SolidityTypeBytes() {\r\n                    return _super.call(this, { inputFormatter: n.formatInputBytes, outputFormatter: n.formatOutputBytes }) || this;\r\n                }\r\n                SolidityTypeBytes.prototype.isType = function (t) { return !!t.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/); };\r\n                return SolidityTypeBytes;\r\n            }(o.SolidityType));\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(8), i = r(26), s = r(27);\r\n            e.AllSolidityEvents = /** @class */ (function () {\r\n                function class_9(t, e, r) {\r\n                    this._requestManager = t, this._json = e, this._address = r;\r\n                }\r\n                class_9.prototype.encode = function (t) {\r\n                    if (t === void 0) { t = {}; }\r\n                    var e = { address: this._address };\r\n                    return [\"fromBlock\", \"toBlock\"].filter(function (e) { return void 0 !== t[e]; }).forEach(function (r) { e[r] = o.inputBlockNumberFormatter(t[r]); }), e;\r\n                };\r\n                class_9.prototype.decode = function (t) { t.data = t.data || \"\"; var e = n.isArray(t.topics) && n.isString(t.topics[0]) ? t.topics[0].slice(2) : \"\", r = this._json.filter(function (t) { return e === n.sha3(n.transformToFullName(t)); })[0]; return r ? new i.SolidityEvent(this._requestManager, r, this._address).decode(t) : o.outputLogFormatter(t); };\r\n                class_9.prototype.execute = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { var e, r; return __generator(this, function (_a) {\r\n                        e = this.encode(t), r = this.decode.bind(this);\r\n                        return [2 /*return*/, new s.EthFilter(this._requestManager, e, r)];\r\n                    }); });\r\n                };\r\n                class_9.prototype.attachToContract = function (t) { var e = this.execute.bind(this); t.allEvents = e; };\r\n                return class_9;\r\n            }());\r\n        }, function (t, e, r) {\r\n            \"use strict\";\r\n            Object.defineProperty(e, \"__esModule\", { value: !0 });\r\n            var n = r(3), o = r(15), i = r(24), s = r(9);\r\n            function a(t, e) { return t.filter(function (t) { return \"constructor\" === t.type && t.inputs.length === e.length; }).map(function (t) { return t.inputs.map(function (t) { return t.type; }); }).map(function (t) { return o.coder.encodeParams(t, e); })[0] || \"\"; }\r\n            e.ContractFactory = /** @class */ (function () {\r\n                function class_10(t, e) {\r\n                    this.requestManager = t, this.abi = e;\r\n                }\r\n                class_10.prototype.deploy = function () {\r\n                    var t = [];\r\n                    for (var _a = 0; _a < arguments.length; _a++) {\r\n                        t[_a] = arguments[_a];\r\n                    }\r\n                    return __awaiter(this, void 0, void 0, function () { var e, r, o, _c, _d, i, c, u; return __generator(this, function (_e) {\r\n                        switch (_e.label) {\r\n                            case 0:\r\n                                r = t[t.length - 1];\r\n                                if (n.isObject(r) && !n.isArray(r) && (e = t.pop()), !e)\r\n                                    throw new Error(\"Missing options object\");\r\n                                if (!e.data || \"string\" != typeof e.data)\r\n                                    throw new Error(\"Invalid options.data\");\r\n                                if (e.value > 0 && !(this.abi.filter(function (e) { return \"constructor\" === e.type && e.inputs.length === t.length; })[0] || {}).payable)\r\n                                    throw new Error(\"Cannot send value to non-payable constructor\");\r\n                                o = a(this.abi, t);\r\n                                e.data += o;\r\n                                _c = e.gas;\r\n                                if (_c) return [3 /*break*/, 2];\r\n                                _d = e;\r\n                                return [4 /*yield*/, this.requestManager.eth_estimateGas(e)];\r\n                            case 1:\r\n                                _c = (_d.gas = _e.sent());\r\n                                _e.label = 2;\r\n                            case 2:\r\n                                _c;\r\n                                return [4 /*yield*/, this.requestManager.eth_sendTransaction(e)];\r\n                            case 3:\r\n                                i = _e.sent();\r\n                                return [4 /*yield*/, function (t, e) {\r\n                                        return __awaiter(this, void 0, void 0, function () { var r, n, o, i, a; return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    r = s.future();\r\n                                                    n = 0;\r\n                                                    o = function () { ++n > 50 ? r.reject(new Error(\"Contract transaction couldn't be found after 50 blocks\")) : t.eth_getTransactionReceipt(e).then(function (t) { t && t.blockHash ? r.resolve(t) : setTimeout(o, 1e3); }, function (t) { return r.reject(t); }); };\r\n                                                    o();\r\n                                                    return [4 /*yield*/, r];\r\n                                                case 1:\r\n                                                    i = _a.sent();\r\n                                                    return [4 /*yield*/, t.eth_getCode(i.contractAddress, \"latest\")];\r\n                                                case 2:\r\n                                                    a = _a.sent();\r\n                                                    if (a.length > 3)\r\n                                                        return [2 /*return*/, i.contractAddress];\r\n                                                    throw Object.assign(new Error(\"The contract code couldn't be stored, please check your gas amount.\"), { response: a, receipt: i });\r\n                                            }\r\n                                        }); });\r\n                                    }(this.requestManager, i)];\r\n                            case 4:\r\n                                c = _e.sent();\r\n                                return [4 /*yield*/, this.at(c)];\r\n                            case 5:\r\n                                u = _e.sent();\r\n                                return [2 /*return*/, (u.transactionHash = i, u)];\r\n                        }\r\n                    }); });\r\n                };\r\n                class_10.prototype.at = function (t) {\r\n                    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                        if (!n.isAddress(t))\r\n                            throw new TypeError(\"Invalid address \" + JSON.stringify(t));\r\n                        return [2 /*return*/, new i.Contract(this.requestManager, this.abi, t)];\r\n                    }); });\r\n                };\r\n                class_10.prototype.getData = function () {\r\n                    var t = [];\r\n                    for (var _a = 0; _a < arguments.length; _a++) {\r\n                        t[_a] = arguments[_a];\r\n                    }\r\n                    return __awaiter(this, void 0, void 0, function () { var e, r, o; return __generator(this, function (_c) {\r\n                        e = { data: void 0 };\r\n                        r = t[t.length - 1];\r\n                        if (n.isObject(r) && !n.isArray(r) && (e = t.pop()), !e)\r\n                            throw new Error(\"Missing options object\");\r\n                        if (!e.data || \"string\" != typeof e.data)\r\n                            throw new Error(\"Invalid options.data\");\r\n                        o = a(this.abi, t);\r\n                        return [2 /*return*/, (e.data += o, e.data)];\r\n                    }); });\r\n                };\r\n                return class_10;\r\n            }());\r\n        }]);\r\n    exports.default = ethconnect;\r\n});\r\n// tslint:disable\r\ndefine(\"node_modules/eth-connect/esm\", [\"require\", \"exports\", \"node_modules/eth-connect/eth-connect.esm\"], function (require, exports, eth_connect_esm_1) {\r\n    \"use strict\";\r\n    var EthConnect = eth_connect_esm_1.default;\r\n    return EthConnect;\r\n});\r\ndefine(\"src/metazone-api\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MetaZoneAPI = void 0;\r\n    var MetaZoneAPI = /** @class */ (function () {\r\n        /**\r\n         * Stores initial user and parcel info to send to the backend on every request.\r\n         *\r\n         * @param callback        Callback after all async calls completed\r\n         */\r\n        function MetaZoneAPI(getProvider, getUserData, getCurrentRealm, EthereumController, EthConnect, dcl, callback) {\r\n            var _this = this;\r\n            this.server = {\r\n                realm: ''\r\n            };\r\n            this.user = {\r\n                name: 'Guest' + Math.floor(Math.random() * 1000000),\r\n                email: '',\r\n                eth_address: '',\r\n                data: null\r\n            };\r\n            this.parcel = {\r\n                plot_owner: '',\r\n                plot_x: 0,\r\n                plot_y: 0,\r\n                plot_contact: '',\r\n                plot_email: '',\r\n                plot_count: 0\r\n            };\r\n            this.eth = null;\r\n            this.getProvider = null;\r\n            this.EthConnect = null;\r\n            this.eth = EthereumController;\r\n            this.EthConnect = EthConnect;\r\n            this.getProvider = getProvider;\r\n            executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var _a, error_1, data, currentRealm;\r\n                var _this = this;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            _b.trys.push([0, 2, , 3]);\r\n                            _a = this.user;\r\n                            return [4 /*yield*/, this.eth.getUserAccount()];\r\n                        case 1:\r\n                            _a.eth_address = _b.sent();\r\n                            log('ETH address: ', this.user.eth_address);\r\n                            return [3 /*break*/, 3];\r\n                        case 2:\r\n                            error_1 = _b.sent();\r\n                            log('ETH address: ', error_1.toString());\r\n                            return [3 /*break*/, 3];\r\n                        case 3: return [4 /*yield*/, getUserData()];\r\n                        case 4:\r\n                            data = _b.sent();\r\n                            log('User Data: ', data);\r\n                            if (data) {\r\n                                this.user.data = data;\r\n                                this.user.name = data.displayName ? data.displayName : this.user.name;\r\n                            }\r\n                            return [4 /*yield*/, getCurrentRealm()];\r\n                        case 5:\r\n                            currentRealm = _b.sent();\r\n                            log('Realm: ', currentRealm);\r\n                            if (currentRealm) {\r\n                                this.server.realm = currentRealm.displayName;\r\n                            }\r\n                            // Retrieve Parcel Data\r\n                            dcl.loadModule('ParcelIdentity').then(function () {\r\n                                dcl.callRpc('ParcelIdentity', 'getParcel', []).then(function (data) {\r\n                                    log('Parcel', data);\r\n                                    // Store scene data\r\n                                    var sceneBase = data.land.sceneJsonData ? data.land.sceneJsonData.scene.base : data.land.scene.scene.base;\r\n                                    var sceenBaseAxis = sceneBase.split(',');\r\n                                    _this.parcel.plot_x = sceenBaseAxis[0];\r\n                                    _this.parcel.plot_y = sceenBaseAxis[1];\r\n                                    _this.parcel.plot_owner = data.land.sceneJsonData ? data.land.sceneJsonData.owner : data.land.scene.owner;\r\n                                    _this.parcel.plot_contact = data.land.sceneJsonData ? data.land.sceneJsonData.contact.name : data.land.scene.contact.name;\r\n                                    _this.parcel.plot_email = data.land.sceneJsonData ? data.land.sceneJsonData.contact.email : data.land.scene.contact.email;\r\n                                    _this.parcel.plot_count = data.land.sceneJsonData ? data.land.sceneJsonData.scene.parcels.length : data.land.scene.parcels.length;\r\n                                    callback();\r\n                                });\r\n                            });\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n        return MetaZoneAPI;\r\n    }());\r\n    exports.MetaZoneAPI = MetaZoneAPI;\r\n});\r\ndefine(\"metas/sammichgame/meta\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = (function (e) { var t = {}; function n(i) { if (t[i])\r\n        return t[i].exports; var r = t[i] = { i: i, l: 0, exports: {} }; e[i].call(r.exports, r, r.exports, n); r.l = 1; return r.exports; } n.m = e; n.c = t; n.d = function (e, t, i) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: 1, get: i }); }; n.r = function (e) { \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }); Object.defineProperty(e, \"__esModule\", { value: 1 }); }; n.t = function (e, t) { 1 & t && (e = n(e)); if (8 & t)\r\n        return e; if (4 & t && \"object\" == typeof e && e && e.__esModule)\r\n        return e; var i = Object.create(null); n.r(i); Object.defineProperty(i, \"default\", { enumerable: 1, value: e }); if (2 & t && \"string\" != typeof e)\r\n        for (var r in e)\r\n            n.d(i, r, function (t) { return e[t]; }.bind(null, r)); return i; }; n.n = function (e) { var t = e && e.__esModule ? function t() { return e[\"default\"]; } : function t() { return e; }; n.d(t, \"a\", t); return t; }; n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }; n.p = \"\"; return n(n.s = 51); }([function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getSpriteUv = t.SpriteAnimationSystem = t.createSpriteEntity = void 0; var i = n(1), r = { time: .5, frames: [], init: 1, position: void 0, scale: void 0 }, s = function (e, _a) {\r\n            var _b = _a.position, t = _b === void 0 ? new Vector3(0, 0, 0) : _b, _c = _a.scale, n = _c === void 0 ? new Vector3(1, 1, 1) : _c, r = _a.uvs;\r\n            var s = new Entity, o = new PlaneShape;\r\n            o.withCollisions = 0;\r\n            o.isPointerBlocker = 0;\r\n            var a = new Transform({ position: t, scale: n });\r\n            o.uvs = r;\r\n            s.addComponent(o);\r\n            s.addComponent(i.spriteMaterial);\r\n            s.addComponent(a);\r\n            s.setParent(e);\r\n            return { show: function () { o.visible = 1; }, hide: function () { o.visible = 0; }, getEntity: function () { return s; }, getShape: function () { return o; }, getTransform: function () { return a; }, updateUvs: function (e) { return o.uvs = e; } };\r\n        }; t.createSpriteEntity = s;\r\n            var o = /** @class */ (function () {\r\n                function o(e, t) {\r\n                    if (t === void 0) { t = r; }\r\n                    var n = t.scale, s = t.time, o = t.position, a = t.frames, c = t.init;\r\n                    this.globalOptions = Object.assign(Object.assign({}, r), t);\r\n                    this.root = e;\r\n                    this.setInitialState();\r\n                    this.sprite = new Entity;\r\n                    this.plane = new PlaneShape;\r\n                    this.sprite.addComponent(i.spriteMaterial);\r\n                    this.sprite.addComponent(this.plane);\r\n                    (o || n) && this.sprite.addComponent(new Transform({ scale: n, position: o }));\r\n                    this.plane.uvs = a[0].uvs;\r\n                    engine.addSystem(this);\r\n                }\r\n                o.prototype.setPosition = function (e) { this.sprite.getComponent(Transform).position.set(e.x, e.y, e.z); };\r\n                o.prototype.getPosition = function () { return this.sprite.getComponent(Transform).position; };\r\n                o.prototype.setRotation = function (e) { this.sprite.getComponent(Transform).rotation.setEuler(0, 0, e); };\r\n                o.prototype.addComponentOrReplace = function (e) { this.sprite.addComponentOrReplace(e); };\r\n                o.prototype.addComponent = function (e) { this.sprite.addComponent(e); };\r\n                o.prototype.removeComponent = function (e) { this.sprite.removeComponent(e); };\r\n                o.prototype.init = function () { this.state.initialized = 1; this.sprite.setParent(this.root); };\r\n                o.prototype.nextFrame = function () { this.state.currentFrame++; this.state.currentFrame >= this.state.playtrack.length - 1 && this.state.playing && !this.state.loop && (this.state.playing = 0); this.state.currentFrame >= this.state.playtrack.length && (this.state.loop ? this.state.currentFrame = 0 : this.state.currentFrame = this.state.playtrack.length - 1); this.plane.uvs = this.globalOptions.frames[this.state.playtrack[this.state.currentFrame]].uvs; };\r\n                o.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (this.state.playing) {\r\n                        this.state.dtCount += e;\r\n                        if (this.state.dtCount >= this.state.time) {\r\n                            this.state.dtCount = 0;\r\n                            this.nextFrame();\r\n                        }\r\n                    }\r\n                    else\r\n                        this.state.dtCount = 0; };\r\n                o.prototype.play = function (e, t) { this.state.playtrack = e; this.state.dtCount = 0; this.state.currentFrame = -1; this.state.initialized = 1; this.state.playing = 1; this.state.end = e.length - 1; this.state.time = (null == t ? void 0 : t.time) || this.globalOptions.time; this.state.loop = (null == t ? void 0 : t.loop) || 0; this.nextFrame(); };\r\n                o.prototype.stop = function (e) {\r\n                    if (e === void 0) { e = 0; }\r\n                    this.plane.uvs = this.globalOptions.frames[0].uvs;\r\n                    this.state.playing = 0;\r\n                };\r\n                o.prototype.destroy = function () { engine.removeSystem(this); };\r\n                o.prototype.setInitialState = function () { this.state = { initialized: 0, playing: 0, currentFrame: 0, dtCount: 0, start: 0, end: 0, loop: 0, time: this.globalOptions.time || .5, playtrack: [0] }; };\r\n                o.prototype.resetState = function () { this.state = Object.assign(Object.assign({}, this.state), { playing: 0 }); };\r\n                return o;\r\n            }());  t.SpriteAnimationSystem = o; var a = function (e, t, n, i) {\r\n            if (t === void 0) { t = 0; }\r\n            if (n === void 0) { n = 64; }\r\n            if (i === void 0) { i = n; }\r\n            var r = 1024 / n, s = 1024 / i, o = e + t, a = 1 / r, c = 1 / s, u = s - Math.floor((o - 1) / r), l = Math.floor((o - 1) % r);\r\n            var h = l * a, d = (l + 1) * a, p = (u - 1) * c, f = u * c;\r\n            return [0, 0, 0, 0, 0, 0, 0, 0, d, p, h, p, h, f, d, f];\r\n        }; t.getSpriteUv = a; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.loadTexture = t.spriteMaterial = void 0; t.spriteMaterial = new Material; var i = function () { var e = (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\") + \"images/sprite3.png\", n = new Texture(e, { samplingMode: 0, hasAlpha: 1 }); t.spriteMaterial.albedoTexture = n; t.spriteMaterial.alphaTexture = n; t.spriteMaterial.emissiveTexture = n; }; t.loadTexture = i; void 0; var r = (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\") + \"images/sprite3.png\"; void 0; t.spriteMaterial.emissiveIntensity = .5; t.spriteMaterial.emissiveColor = new Color3(1, 1, 1); t.spriteMaterial.transparencyMode = 1; t.spriteMaterial.specularIntensity = 0; t.spriteMaterial.roughness = 1; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.removeSoundsFromEntity = t.addSoundsToEntity = t.stopAllSounds = t.stopSound = t.isMusic = t.playOnce = t.playLoop = t.isPlaying = t.toggleMusic = t.setTotalMute = t.getTotalMute = t.loadSounds = void 0; var i = {}, r = []; var s = function () { var e = \"\" + (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\"), t = new AudioClip(e + \"sounds/error.mp3\"), n = new AudioClip(e + \"sounds/music1.mp3\"), s = new AudioClip(e + \"sounds/music2b.mp3\"), o = new AudioClip(e + \"sounds/vs.mp3\"), a = new AudioClip(e + \"sounds/pwned.mp3\"), c = new AudioClip(e + \"sounds/race.mp3\"), u = new AudioClip(e + \"sounds/ok.mp3\"), l = new AudioClip(e + \"sounds/wow.mp3\"), h = new AudioClip(e + \"sounds/swing.mp3\"), d = new AudioClip(e + \"sounds/battle.mp3\"), p = new AudioClip(e + \"sounds/money.mp3\"), f = new AudioClip(e + \"sounds/jump.mp3\"), m = new AudioClip(e + \"sounds/readygo.mp3\"), g = new AudioClip(e + \"sounds/hit.mp3\"), y = new AudioSource(t), v = new AudioSource(n), S = new AudioSource(s), b = new AudioSource(o), w = new AudioSource(a), T = new AudioSource(c), C = new AudioSource(u), _ = new AudioSource(l), P = new AudioSource(h), E = new AudioSource(d), I = new AudioSource(p), O = new AudioSource(f), R = new AudioSource(m), A = new AudioSource(g); i = { fail: y, music2: S, music1: v, vs: b, pwned: w, race: T, ok: C, wow: _, swing: P, battle: E, money: I, jump: O, readygo: R, hit: A }; r = [i.music2, i.pwned, i.race, i.battle, i.money, i.music1]; r.forEach(function (e) { e.volume = .5; }); }; t.loadSounds = s; var o = { music: 1, fx: 1, totalMute: 0 }, a = function () { return o.totalMute; }; t.getTotalMute = a; var c = function (e) { o.totalMute = e; e ? Object.values(i).forEach(function (e) { e.volume = 0; }) : Object.values(i).forEach(function (e) { t.isMusic(e) ? e.volume = o.music ? .5 : 0 : e.volume = 1; }); }; t.setTotalMute = c; var u = function () { o.music = !o.music; r.forEach(function (e) { e.volume = !o.music || o.totalMute ? 0 : .5; }); }; t.toggleMusic = u; var l = function (e) { return i[e].playing; }; t.isPlaying = l; var h = function (e, _a) {\r\n            var _b = _a === void 0 ? { volume: void 0 } : _a, t = _b.volume;\r\n            i[e].loop = 1;\r\n            i[e].playing = 1;\r\n            void 0 === t || ~r.indexOf(i[e]) || (i[e].volume = t);\r\n        }; t.playLoop = h; var d = function (e, _a) {\r\n            var _b = _a === void 0 ? { volume: void 0 } : _a, t = _b.volume;\r\n            i[e].playOnce();\r\n            void 0 === t || ~r.indexOf(i[e]) || (i[e].volume = t);\r\n        }; t.playOnce = d; var p = function (e) { return ~r.indexOf(e); }; t.isMusic = p; var f = function (e) { i[e].playing = 0; }; t.stopSound = f; var m = function () { Object.values(i).forEach(function (e) { return e.playing = 0; }); }; t.stopAllSounds = m; var g = function (e) { Object.values(i).forEach(function (t) { var n = new Entity; n.setParent(e); n.addComponent(t); t.volume = 1; }); }; t.addSoundsToEntity = g; var y = function (e) { Object.values(i).forEach(function (e) { }); }; t.removeSoundsFromEntity = y; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.seedGen = void 0; t.seedGen = { create: function (e) { var t = e; return { random: function () { t = 16807 * t % 2147483647; return t / 2147483647; } }; } }; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.sleep = t.createUI = t.createRoundResult = t.createTimeResult = t.createPlayerAnswer = void 0; var i = n(0), r = { player1: { correct: 1, wrong: 3 }, player2: { correct: 2, wrong: 4 } }, s = 2068, o = function (e, _a) {\r\n            var t = _a.player, _b = _a.size, n = _b === void 0 ? 16 : _b;\r\n            var o = new Entity;\r\n            o.addComponent(new Transform({ scale: new Vector3(.5, .5, 1), position: new Vector3(1 === t ? -.3 : .3, -10, -.01) }));\r\n            var a = i.createSpriteEntity(o, { uvs: i.getSpriteUv(r[\"player\" + t].correct, s, 16, 16), position: new Vector3(0, 0, -.001) });\r\n            o.setParent(e);\r\n            var c = function (e) { var n = 5; n = e ? r[\"player\" + t].correct : r[\"player\" + t].wrong; a.getShape().uvs = i.getSpriteUv(n, s, 16, 16); }, u = function () { a.getShape().visible = 1; }, l = function () { a.getShape().visible = 0; };\r\n            return { wrapperEntity: o, sprite: a, setSprite: c, show: u, hide: l };\r\n        }; t.createPlayerAnswer = o; var a = function (e, _a) {\r\n            var t = _a.player, _b = _a.position, n = _b === void 0 ? new Vector3(1 === t ? -2.4 : 2.4, .1, -.007) : _b, _c = _a.fontSize, r = _c === void 0 ? 2.5 : _c;\r\n            var s = new Entity, o = new TextShape, a = i.createSpriteEntity(s, { uvs: i.getSpriteUv(25, 2048, 16, 16), scale: new Vector3(.25, .25, 1), position: new Vector3(1 === t ? -.25 : .25, .125, 0) });\r\n            o.isPointerBlocker = 0;\r\n            o.hTextAlign = 1 === t ? \"left\" : \"right\";\r\n            o.vTextAlign = \"bottom\";\r\n            o.fontSize = r;\r\n            o.font = new Font(Fonts.SanFrancisco_Heavy);\r\n            o.shadowOffsetX = 2;\r\n            o.shadowOffsetY = 2;\r\n            o.shadowColor = Color3.FromHexString(\"#000000\");\r\n            o.withCollisions = 0;\r\n            var c = new Transform({ position: n });\r\n            s.addComponent(c);\r\n            s.addComponent(o);\r\n            s.setParent(e);\r\n            var u = undefined, l = undefined, h = undefined;\r\n            return { show: function () { o.visible = 1; a.getShape().visible = 1; }, hide: function () { o.visible = 0; o.value = \"\"; a.getShape().visible = 0; }, update: function (e) { o.value = (Math.floor(1e4 * e) / 1e4 / 1e3).toString(); }, getTransform: function () { return c; }, getEntity: function () { return s; } };\r\n        }; t.createTimeResult = a; var c = function (e, _a) {\r\n            var t = _a.player, _b = _a.position, n = _b === void 0 ? new Vector3(1 === t ? -2 : 2, 3, -.007) : _b;\r\n            var r = 104, s = 4 / 128 / 2, o = i.createSpriteEntity(e, { uvs: i.getSpriteUv(12, r, 128, 32), scale: new Vector3(128 * s, 32 * s, 1), position: n }), a = undefined, c = undefined, u = undefined;\r\n            return { show: function () { o.getShape().visible = 1; }, hide: function () { o.getShape().visible = 0; }, update: function (e) { o.getShape().uvs = e ? i.getSpriteUv(12, r, 128, 32) : i.getSpriteUv(4, r, 128, 32); }, getTransform: function () { return o.getTransform(); }, getEntity: function () { return o.getEntity(); } };\r\n        }; t.createRoundResult = c; var u = function (e, _a) {\r\n            var _b = _a === void 0 ? { position: void 0 } : _a, n = _b.position;\r\n            var r = t.createTimeResult(e, { player: 1 }), s = t.createTimeResult(e, { player: 2 });\r\n            r.hide();\r\n            s.hide();\r\n            var o = new TextShape(\"0\"), a = new TextShape(\"0\");\r\n            o.withCollisions = a.withCollisions = 0;\r\n            o.isPointerBlocker = a.isPointerBlocker = 0;\r\n            o.font = a.font = new Font(Fonts.SanFrancisco_Heavy);\r\n            o.fontSize = a.fontSize = 2.5;\r\n            o.vTextAlign = a.vTextAlign = \"bottom\";\r\n            o.hTextAlign = \"right\";\r\n            a.hTextAlign = \"left\";\r\n            var c = new Entity, u = new Entity;\r\n            c.addComponent(o);\r\n            c.addComponent(new Transform({ position: new Vector3(-.5, n ? .1 + n.y : .1, -.003) }));\r\n            u.addComponent(a);\r\n            u.addComponent(new Transform({ position: new Vector3(.5, n ? .1 + n.y : .1, -.003) }));\r\n            c.setParent(e);\r\n            u.setParent(e);\r\n            var l = i.createSpriteEntity(e, { position: new Vector3(0, n ? .5 + n.y : .5, -.001), scale: new Vector3(6, 1, 1), uvs: i.getSpriteUv(2, 64, 192, 32) }), h = undefined, d = undefined, p = undefined, f = undefined, m = undefined, g = undefined, y = undefined;\r\n            return { updateTime: function (_a) {\r\n                    var e = _a.player, t = _a.time;\r\n                    if (1 === e) {\r\n                        r.update(t);\r\n                        r.show();\r\n                    }\r\n                    else {\r\n                        s.update(t);\r\n                        s.show();\r\n                    }\r\n                }, updateScore: function (_a) {\r\n                    var e = _a.player, t = _a.score;\r\n                    \"undefined\" != typeof t && (1 === e ? o.value = t.toString() : a.value = t.toString());\r\n                }, hideTime: function () { r.hide(); s.hide(); }, showTime: function () { }, hideScore: function () { o.value = a.value = \"\"; }, show: function () { l.getShape().visible = 1; }, hide: function () { l.getShape().visible = 0; } };\r\n        }; t.createUI = u; function l(e) { return new Promise(function (t) { return setTimeout(t, e); }); } t.sleep = l; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.showSpritePanel = t.hideSpritePanel = t.updateSpritePanel = t.createSpritePanel = void 0; var i = n(0), r = n(1), s = new PlaneShape; s.withCollisions = 0; s.isPointerBlocker = 0; var o = new Transform({ position: new Vector3(0, 2, -.001), scale: new Vector3(6, 4, 1) }), a = function (e) { var t = new Entity; t.addComponent(s); t.addComponent(r.spriteMaterial); t.addComponent(o); t.setParent(e); }; t.createSpritePanel = a; var c = function (_a) {\r\n            var _b = _a.uvs, e = _b === void 0 ? null : _b, _c = _a.width, t = _c === void 0 ? null : _c, _d = _a.height, n = _d === void 0 ? null : _d, _e = _a.col, r = _e === void 0 ? null : _e, _f = _a.row, a = _f === void 0 ? null : _f, _g = _a.canvasWidth, c = _g === void 0 ? null : _g, _h = _a.scale, u = _h === void 0 ? null : _h;\r\n            s.uvs = e || i.getSpriteUv(1024 / t * a + r, 0, t, n);\r\n            c && o.scale.set(c, o.scale.y, o.scale.z);\r\n            u ? o.scale.set(u.x, u.y, u.z) : o.scale.set(6, 4, 1);\r\n        }; t.updateSpritePanel = c; var u = function () { s.visible = 0; o.scale.set(6, 4, 1); }; t.hideSpritePanel = u; var l = function () { s.visible = 1; }; t.showSpritePanel = l; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getTextPanelValue = t.updateTextPanel = t.createTextPanel = void 0; var i = null; var r = new Transform({ position: new Vector3(0, 4, -.01) }), s = function (e, t) { var n = new Entity; i = new TextShape; i.value = t; i.vTextAlign = \"top\"; i.fontSize = 3; i.font = new Font(Fonts.SanFrancisco_Heavy); i.shadowOffsetX = 2; i.shadowOffsetY = 2; i.shadowColor = Color3.FromHexString(\"#000000\"); n.addComponent(r); n.addComponent(i); n.setParent(e); }; t.createTextPanel = s; var o = function (e) { if (e.bottom) {\r\n            i.vTextAlign = \"bottom\";\r\n            r.position.set(r.position.x, 0, r.position.z);\r\n        }\r\n        else {\r\n            i.vTextAlign = \"top\";\r\n            r.position.set(r.position.x, 4, r.position.z);\r\n        } if (\"left\" === e.hTextAlign) {\r\n            i.hTextAlign = \"left\";\r\n            r.position.set(-3, r.position.y, r.position.z);\r\n        }\r\n        else {\r\n            i.hTextAlign = \"center\";\r\n            r.position.set(0, r.position.y, r.position.z);\r\n        } i.color = e.color || Color3.White(); Object.assign(i, { hTextAlign: \"center\" }, e, { value: \"\" + e.value }); }; t.updateTextPanel = o; var a = function () { return i.value; }; t.getTextPanelValue = a; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.OPERATION = t.TYPE_ID = t.SWITCH_TO_STRUCTURE = void 0; t.SWITCH_TO_STRUCTURE = 255; t.TYPE_ID = 213; var i; (function (e) { e[e[\"ADD\"] = 128] = \"ADD\"; e[e[\"REPLACE\"] = 0] = \"REPLACE\"; e[e[\"DELETE\"] = 64] = \"DELETE\"; e[e[\"DELETE_AND_ADD\"] = 192] = \"DELETE_AND_ADD\"; e[e[\"TOUCH\"] = 1] = \"TOUCH\"; e[e[\"CLEAR\"] = 10] = \"CLEAR\"; })(i = t.OPERATION || (t.OPERATION = {})); }, function (e, t, n) { var i = this && this.__extends || function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (var n in t)\r\n            t.hasOwnProperty(n) && (e[n] = t[n]); })(t, n); }; return function (t, n) { e(t, n); function i() { this.constructor = t; } t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i); }; }(), r = this && this.__read || function (e, t) { var n = \"function\" == typeof Symbol && e[Symbol.iterator]; if (!n)\r\n            return e; var i = n.call(e), r, s = [], o; try {\r\n            for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;)\r\n                s.push(r.value);\r\n        }\r\n        catch (e) {\r\n            o = { error: e };\r\n        }\r\n        finally {\r\n            try {\r\n                r && !r.done && (n = i[\"return\"]) && n.call(i);\r\n            }\r\n            finally {\r\n                if (o)\r\n                    throw o.error;\r\n            }\r\n        } return s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Schema = void 0; var s = n(7), o = n(22), a = n(46), c = n(47), u = n(14), l = n(23), h = n(49), d = n(50), p = n(12), f = n(98), m = n(99), g = n(15), y = function (e) { i(t, e); function t() { return null !== e && e.apply(this, arguments) || this; } return t; }(Error); function v(e, t, n, i) { var r, s = 0; switch (t) {\r\n            case \"number\":\r\n            case \"int8\":\r\n            case \"uint8\":\r\n            case \"int16\":\r\n            case \"uint16\":\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"float32\":\r\n            case \"float64\":\r\n                r = \"number\";\r\n                isNaN(e), 0;\r\n                break;\r\n            case \"string\":\r\n                r = \"string\";\r\n                s = 1;\r\n                break;\r\n            case \"boolean\": return;\r\n        } if (typeof e !== r && (!s || s && null !== e)) {\r\n            var o = \"'\" + JSON.stringify(e) + \"'\" + (e && e.constructor && \" (\" + e.constructor.name + \")\" || \"\");\r\n            throw new y(\"a '\" + r + \"' was expected, but \" + o + \" was provided in \" + n.constructor.name + \"#\" + i);\r\n        } } function S(e, t, n, i) { if (!(e instanceof t))\r\n            throw new y(\"a '\" + t.name + \"' was expected, but '\" + e.constructor.name + \"' was provided in \" + n.constructor.name + \"#\" + i); } function b(e, t, n, i, r) { v(n, e, i, r); var s = a[e]; if (!s)\r\n            throw new y(\"a '\" + e + \"' was expected, but \" + n + \" was provided in \" + i.constructor.name + \"#\" + r); s(t, n); } function w(e, t, n) { return c[e](t, n); } var T = function () { function e() { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; Object.defineProperties(this, { $changes: { value: new p.ChangeTree(this, void 0, new p.Root), enumerable: 0, writable: 1 }, $listeners: { value: {}, enumerable: 0, writable: 1 } }); var n = this._definition.descriptors; n && Object.defineProperties(this, n); e[0] && this.assign(e[0]); } e.onError = function (e) { void 0; }; e.is = function (e) { return e[\"_definition\"] && void 0 !== e[\"_definition\"].schema; }; e.prototype.assign = function (e) { Object.assign(this, e); return this; }; Object.defineProperty(e.prototype, \"_definition\", { get: function () { return this.constructor._definition; }, enumerable: 0, configurable: 1 }); e.prototype.listen = function (e, t) { var n = this; this.$listeners[e] || (this.$listeners[e] = new f.EventEmitter); this.$listeners[e].register(t); return function () { return n.$listeners[e].remove(t); }; }; e.prototype.decode = function (t, n, i, o) { void 0 === n && (n = { offset: 0 }); void 0 === i && (i = this); void 0 === o && (o = new Map); var a = this.$changes.root, p = t.length, f = 0, m = []; a.refs.set(f, this); o.set(f, m); for (; n.offset < p;) {\r\n            var y = t[n.offset++];\r\n            if (y != s.SWITCH_TO_STRUCTURE) {\r\n                var v = i[\"$changes\"], S = void 0 !== i[\"_definition\"], b = S ? y >> 6 << 6 : y;\r\n                if (b !== s.OPERATION.CLEAR) {\r\n                    var T = S ? y % (b || 255) : c.number(t, n), C = S ? i[\"_definition\"].fieldsByIndex[T] : \"\", _ = v.getType(T), P = void 0, E = void 0, I = void 0;\r\n                    if (S)\r\n                        E = i[\"_\" + C];\r\n                    else {\r\n                        E = i[\"getByIndex\"](T);\r\n                        if ((b & s.OPERATION.ADD) === s.OPERATION.ADD) {\r\n                            I = i instanceof l.MapSchema ? c.string(t, n) : T;\r\n                            i[\"setIndex\"](T, I);\r\n                        }\r\n                        else\r\n                            I = i[\"getIndex\"](T);\r\n                    }\r\n                    if ((b & s.OPERATION.DELETE) === s.OPERATION.DELETE) {\r\n                        b !== s.OPERATION.DELETE_AND_ADD && i[\"deleteByIndex\"](T);\r\n                        E && E[\"$changes\"] && a.removeRef(E[\"$changes\"].refId);\r\n                        P = null;\r\n                    }\r\n                    if (void 0 !== C) {\r\n                        if (b === s.OPERATION.DELETE)\r\n                            ;\r\n                        else if (e.is(_)) {\r\n                            var O = c.number(t, n);\r\n                            P = a.refs.get(O);\r\n                            if (b !== s.OPERATION.REPLACE) {\r\n                                var R = this.getSchemaType(t, n, _);\r\n                                if (!P) {\r\n                                    (P = this.createTypeInstance(R)).$changes.refId = O;\r\n                                    if (E) {\r\n                                        P.onChange = E.onChange;\r\n                                        P.onRemove = E.onRemove;\r\n                                        P.$listeners = E.$listeners;\r\n                                        E[\"$changes\"].refId && O !== E[\"$changes\"].refId && a.removeRef(E[\"$changes\"].refId);\r\n                                    }\r\n                                }\r\n                                a.addRef(O, P, P !== E);\r\n                            }\r\n                        }\r\n                        else if (\"string\" == typeof _)\r\n                            P = w(_, t, n);\r\n                        else {\r\n                            var A = g.getType(Object.keys(_)[0]), x = c.number(t, n), k = a.refs.has(x) ? E : new A.constructor;\r\n                            (P = k.clone(1)).$changes.refId = x;\r\n                            if (E) {\r\n                                P.onAdd = E.onAdd;\r\n                                P.onRemove = E.onRemove;\r\n                                P.onChange = E.onChange;\r\n                                if (E[\"$changes\"].refId && x !== E[\"$changes\"].refId) {\r\n                                    a.removeRef(E[\"$changes\"].refId);\r\n                                    for (var M = [], N = E.entries(), D = void 0; (D = N.next()) && !D.done;) {\r\n                                        var F = r(D.value, 2), U = F[0], j = F[1];\r\n                                        M.push({ op: s.OPERATION.DELETE, field: U, value: void 0, previousValue: j });\r\n                                    }\r\n                                    o.set(E[\"$changes\"].refId, M);\r\n                                }\r\n                            }\r\n                            a.addRef(x, P, k !== E);\r\n                            A.getProxy && (P = A.getProxy(P));\r\n                        }\r\n                        var $ = E !== P;\r\n                        if (null != P) {\r\n                            P[\"$changes\"] && P[\"$changes\"].setParent(v.ref, v.root, T);\r\n                            if (i instanceof e)\r\n                                i[C] = P;\r\n                            else if (i instanceof l.MapSchema) {\r\n                                var U = I;\r\n                                i[\"$items\"].set(U, P);\r\n                            }\r\n                            else if (i instanceof u.ArraySchema)\r\n                                i.setAt(T, P);\r\n                            else if (i instanceof h.CollectionSchema || i instanceof d.SetSchema) {\r\n                                var B = i.add(P);\r\n                                i[\"setIndex\"](T, B);\r\n                            }\r\n                        }\r\n                        $ && m.push({ op: b, field: C, dynamicIndex: I, value: P, previousValue: E });\r\n                    }\r\n                    else {\r\n                        void 0;\r\n                        for (var V = { offset: n.offset }; n.offset < p;) {\r\n                            if (c.switchStructureCheck(t, n)) {\r\n                                V.offset = n.offset + 1;\r\n                                if (a.refs.has(c.number(t, V)))\r\n                                    break;\r\n                            }\r\n                            n.offset++;\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                    i.clear(1);\r\n            }\r\n            else {\r\n                f = c.number(t, n);\r\n                var z = a.refs.get(f);\r\n                if (!z)\r\n                    throw new Error('\"refId\" not found: ' + f);\r\n                i = z;\r\n                m = [];\r\n                o.set(f, m);\r\n            }\r\n        } this._triggerChanges(o); a.garbageCollectDeletedRefs(); return o; }; e.prototype.encode = function (t, n, i) { void 0 === t && (t = 0); void 0 === n && (n = []); void 0 === i && (i = 0); for (var r = this.$changes, o = new WeakSet, c = [r], u = 1, h = 0; h < u; h++) {\r\n            var d = c[h], p = d.ref, f = p instanceof e;\r\n            d.ensureRefId();\r\n            o.add(d);\r\n            if (d !== r && (d.changed || t)) {\r\n                a.uint8(n, s.SWITCH_TO_STRUCTURE);\r\n                a.number(n, d.refId);\r\n            }\r\n            for (var m = t ? Array.from(d.allChanges) : Array.from(d.changes.values()), y = 0, v = m.length; y < v; y++) {\r\n                var w = t ? { op: s.OPERATION.ADD, index: m[y] } : m[y], T = w.index, C = f ? p[\"_definition\"].fieldsByIndex && p[\"_definition\"].fieldsByIndex[T] : T, _ = n.length;\r\n                if (w.op !== s.OPERATION.TOUCH)\r\n                    if (f)\r\n                        a.uint8(n, T | w.op);\r\n                    else {\r\n                        a.uint8(n, w.op);\r\n                        if (w.op === s.OPERATION.CLEAR)\r\n                            continue;\r\n                        a.number(n, T);\r\n                    }\r\n                if (!f && (w.op & s.OPERATION.ADD) == s.OPERATION.ADD && p instanceof l.MapSchema) {\r\n                    var P = d.ref[\"$indexes\"].get(T);\r\n                    a.string(n, P);\r\n                }\r\n                if (w.op !== s.OPERATION.DELETE) {\r\n                    var E = d.getType(T), I = d.getValue(T);\r\n                    if (I && I[\"$changes\"] && !o.has(I[\"$changes\"])) {\r\n                        c.push(I[\"$changes\"]);\r\n                        I[\"$changes\"].ensureRefId();\r\n                        u++;\r\n                    }\r\n                    if (w.op !== s.OPERATION.TOUCH) {\r\n                        if (e.is(E)) {\r\n                            S(I, E, p, C);\r\n                            a.number(n, I.$changes.refId);\r\n                            (w.op & s.OPERATION.ADD) === s.OPERATION.ADD && this.tryEncodeTypeId(n, E, I.constructor);\r\n                        }\r\n                        else if (\"string\" == typeof E)\r\n                            b(E, n, I, p, C);\r\n                        else {\r\n                            var O = g.getType(Object.keys(E)[0]);\r\n                            S(p[\"_\" + C], O.constructor, p, C);\r\n                            a.number(n, I.$changes.refId);\r\n                        }\r\n                        i && d.cache(T, n.slice(_));\r\n                    }\r\n                }\r\n            }\r\n            t || i || d.discard();\r\n        } return n; }; e.prototype.encodeAll = function (e) { return this.encode(1, [], e); }; e.prototype.applyFilters = function (t, n) { void 0 === n && (n = 0); for (var i = this, r = new Set, o = m.ClientState.get(t), c = [this.$changes], u = 1, h = [], d = function (d) { var p = c[d]; if (r.has(p.refId))\r\n            return \"continue\"; var f = p.ref, m = f instanceof e; a.uint8(h, s.SWITCH_TO_STRUCTURE); a.number(h, p.refId); var g = o.refIds.has(p), y = n || !g; o.addRefId(p); var v = o.containerIndexes.get(p), S = y ? Array.from(p.allChanges) : Array.from(p.changes.values()); if (!n && m && f._definition.indexesWithFilters) {\r\n            var b;\r\n            f._definition.indexesWithFilters.forEach((function (e) { !v.has(e) && p.allChanges.has(e) && (y ? S.push(e) : S.push({ op: s.OPERATION.ADD, index: e })); }));\r\n        } for (var w = 0, T = S.length; w < T; w++) {\r\n            var C = y ? { op: s.OPERATION.ADD, index: S[w] } : S[w];\r\n            if (C.op !== s.OPERATION.CLEAR) {\r\n                var _ = C.index;\r\n                if (C.op !== s.OPERATION.DELETE) {\r\n                    var P = p.getValue(_), E = p.getType(_);\r\n                    if (m) {\r\n                        var I;\r\n                        if ((I = f._definition.filters && f._definition.filters[_]) && !I.call(f, t, P, i)) {\r\n                            P && P[\"$changes\"] && r.add(P[\"$changes\"].refId);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        var O = p.parent, I;\r\n                        if ((I = p.getChildrenFilter()) && !I.call(O, t, f[\"$indexes\"].get(_), P, i)) {\r\n                            P && P[\"$changes\"] && r.add(P[\"$changes\"].refId);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    if (P[\"$changes\"]) {\r\n                        c.push(P[\"$changes\"]);\r\n                        u++;\r\n                    }\r\n                    if (C.op !== s.OPERATION.TOUCH)\r\n                        if (C.op === s.OPERATION.ADD || m) {\r\n                            h = h.concat(p.caches[_]);\r\n                            v.add(_);\r\n                        }\r\n                        else if (v.has(_))\r\n                            h = h.concat(p.caches[_]);\r\n                        else {\r\n                            v.add(_);\r\n                            a.uint8(h, s.OPERATION.ADD);\r\n                            a.number(h, _);\r\n                            if (f instanceof l.MapSchema) {\r\n                                var R = p.ref[\"$indexes\"].get(_);\r\n                                a.string(h, R);\r\n                            }\r\n                            P[\"$changes\"] ? a.number(h, P[\"$changes\"].refId) : a[E](h, P);\r\n                        }\r\n                    else if (P[\"$changes\"] && !m) {\r\n                        a.uint8(h, s.OPERATION.ADD);\r\n                        a.number(h, _);\r\n                        if (f instanceof l.MapSchema) {\r\n                            var R = p.ref[\"$indexes\"].get(_);\r\n                            a.string(h, R);\r\n                        }\r\n                        a.number(h, P[\"$changes\"].refId);\r\n                    }\r\n                }\r\n                else if (m)\r\n                    a.uint8(h, C.op | _);\r\n                else {\r\n                    a.uint8(h, C.op);\r\n                    a.number(h, _);\r\n                }\r\n            }\r\n            else\r\n                a.uint8(h, C.op);\r\n        } }, p = 0; p < u; p++)\r\n            d(p); return h; }; e.prototype.clone = function () { var e = new this.constructor, t = this._definition.schema; for (var n in t)\r\n            \"object\" == typeof this[n] && \"function\" == typeof this[n].clone ? e[n] = this[n].clone() : e[n] = this[n]; return e; }; e.prototype.triggerAll = function () { if (0 !== this.$changes.root.refs.size) {\r\n            var t = new Map;\r\n            e.prototype._triggerAllFillChanges.call(this, this, t);\r\n            try {\r\n                e.prototype._triggerChanges.call(this, t);\r\n            }\r\n            catch (t) {\r\n                e.onError(t);\r\n            }\r\n        } }; e.prototype.toJSON = function () { var e = this._definition.schema, t = this._definition.deprecated, n = {}; for (var i in e)\r\n            t[i] || null === this[i] || \"undefined\" == typeof this[i] || (n[i] = \"function\" == typeof this[i][\"toJSON\"] ? this[i][\"toJSON\"]() : this[\"_\" + i]); return n; }; e.prototype.discardAllChanges = function () { this.$changes.discardAll(); }; e.prototype.getByIndex = function (e) { return this[this._definition.fieldsByIndex[e]]; }; e.prototype.deleteByIndex = function (e) { this[this._definition.fieldsByIndex[e]] = void 0; }; e.prototype.tryEncodeTypeId = function (e, t, n) { if (t._typeid !== n._typeid) {\r\n            a.uint8(e, s.TYPE_ID);\r\n            a.number(e, n._typeid);\r\n        } }; e.prototype.getSchemaType = function (e, t, n) { var i; if (e[t.offset] === s.TYPE_ID) {\r\n            t.offset++;\r\n            i = this.constructor._context.get(c.number(e, t));\r\n        } return i || n; }; e.prototype.createTypeInstance = function (e) { var t = new e; t.$changes.root = this.$changes.root; return t; }; e.prototype._triggerAllFillChanges = function (t, n) { if (!n.has(t[\"$changes\"].refId)) {\r\n            var i = [];\r\n            n.set(t[\"$changes\"].refId || 0, i);\r\n            if (t instanceof e) {\r\n                var o = t._definition.schema;\r\n                for (var a in o) {\r\n                    var c, u;\r\n                    if (void 0 !== (u = t[\"_\" + a])) {\r\n                        i.push({ op: s.OPERATION.ADD, field: a, value: u, previousValue: void 0 });\r\n                        void 0 !== u[\"$changes\"] && e.prototype._triggerAllFillChanges.call(this, u, n);\r\n                    }\r\n                }\r\n            }\r\n            else\r\n                for (var l = t.entries(), h = void 0; (h = l.next()) && !h.done;) {\r\n                    var d = r(h.value, 2), p = d[0], u = d[1];\r\n                    i.push({ op: s.OPERATION.ADD, field: p, dynamicIndex: p, value: u, previousValue: void 0 });\r\n                    void 0 !== u[\"$changes\"] && e.prototype._triggerAllFillChanges.call(this, u, n);\r\n                }\r\n        } }; e.prototype._triggerChanges = function (t) { var n = this; t.forEach((function (t, i) { var r, o, a, c, u, l, h, d, p, f, m, g; if (t.length > 0) {\r\n            for (var y = n.$changes.root.refs.get(i), v = y instanceof e, S = 0; S < t.length; S++) {\r\n                var b = t[S], w = y[\"$listeners\"] && y[\"$listeners\"][b.field];\r\n                if (!v)\r\n                    if (b.op === s.OPERATION.ADD && void 0 === b.previousValue)\r\n                        null === (o = (r = y).onAdd) || void 0 === o ? void 0 : o.call(r, b.value, null !== (a = b.dynamicIndex) && void 0 !== a ? a : b.field);\r\n                    else if (b.op === s.OPERATION.DELETE)\r\n                        void 0 !== b.previousValue && (null === (u = (c = y).onRemove) || void 0 === u ? void 0 : u.call(c, b.previousValue, null !== (l = b.dynamicIndex) && void 0 !== l ? l : b.field));\r\n                    else if (b.op === s.OPERATION.DELETE_AND_ADD) {\r\n                        void 0 !== b.previousValue && (null === (d = (h = y).onRemove) || void 0 === d ? void 0 : d.call(h, b.previousValue, b.dynamicIndex));\r\n                        null === (f = (p = y).onAdd) || void 0 === f ? void 0 : f.call(p, b.value, b.dynamicIndex);\r\n                    }\r\n                    else\r\n                        b.op !== s.OPERATION.REPLACE && b.value === b.previousValue || (null === (g = (m = y).onChange) || void 0 === g ? void 0 : g.call(m, b.value, b.dynamicIndex));\r\n                (b.op & s.OPERATION.DELETE) === s.OPERATION.DELETE && b.previousValue instanceof e && b.previousValue.onRemove && b.previousValue.onRemove();\r\n                if (w)\r\n                    try {\r\n                        w.invoke(b.value, b.previousValue);\r\n                    }\r\n                    catch (t) {\r\n                        e.onError(t);\r\n                    }\r\n            }\r\n            if (v && y.onChange)\r\n                try {\r\n                    y.onChange(t);\r\n                }\r\n                catch (t) {\r\n                    e.onError(t);\r\n                }\r\n        } })); }; e._definition = o.SchemaDefinition.create(); return e; }(); t.Schema = T; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.TransformSystem = void 0; var i = n(19), r = n(27), s = n(28), o = n(29), a = n(30);\r\n            var c = /** @class */ (function () {\r\n                function c() {\r\n                    this._components = [];\r\n                    c._instance = this;\r\n                    this._components.push(i.MoveTransformComponent);\r\n                    this._components.push(r.RotateTransformComponent);\r\n                    this._components.push(s.ScaleTransformComponent);\r\n                    this._components.push(o.FollowPathComponent);\r\n                    this._components.push(a.KeepRotatingComponent);\r\n                }\r\n                c.createAndAddToEngine = function () { if (null == this._instance) {\r\n                    this._instance = new c;\r\n                    engine.addSystem(this._instance);\r\n                } return this._instance; };\r\n                c.registerCustomComponent = function (e) { this.createAndAddToEngine()._components.push(e); };\r\n                c.prototype.update = function (e) {\r\n                    var _this = this;\r\n                    this._components.forEach(function (t) { _this.updateComponent(e, t); });\r\n                };\r\n                c.prototype.updateComponent = function (e, t) { var n = undefined; engine.getComponentGroup(t, Transform).entities.forEach(function (n) { var i = n.getComponent(Transform), r = n.getComponent(t); r.update(e); r.assignValueToTransform(i); if (r.hasFinished()) {\r\n                    n.removeComponent(r);\r\n                    null != r.onFinishCallback && r.onFinishCallback();\r\n                } }); };\r\n                return c;\r\n            }());  t.TransformSystem = c; c._instance = null; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getTimeSinceStart = void 0; var i = function (e) { return Date.now() - e; }; t.getTimeSinceStart = i; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.PART_TYPE_OFFSET_Y = t.PART_OFFSET_INDEX = t.PART_SIZE_HEIGHT = t.PART_SIZE_WIDTH = void 0; t.PART_SIZE_WIDTH = { shirt: 64, pants: 64, hair: 64, glasses: 64 }; t.PART_SIZE_HEIGHT = { shirt: 64, pants: 64, hair: 64, glasses: 64 }; t.PART_OFFSET_INDEX = { shirt: 64, pants: 80, hair: 224, glasses: 208 }; t.PART_TYPE_OFFSET_Y = { shirt: -.2, pants: .2, hair: 0, glasses: 0 }; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ChangeTree = t.Root = void 0; var i = n(7), r = n(8), s = function () { function e() { this.refs = new Map; this.refCounts = {}; this.deletedRefs = new Set; this.nextUniqueId = 0; } e.prototype.getNextUniqueId = function () { return this.nextUniqueId++; }; e.prototype.addRef = function (e, t, n) { void 0 === n && (n = 1); this.refs.set(e, t); n && (this.refCounts[e] = (this.refCounts[e] || 0) + 1); }; e.prototype.removeRef = function (e) { this.refCounts[e] = this.refCounts[e] - 1; this.deletedRefs.add(e); }; e.prototype.clearRefs = function () { this.refs.clear(); this.deletedRefs.clear(); this.refCounts = {}; }; e.prototype.garbageCollectDeletedRefs = function () { var e = this; this.deletedRefs.forEach((function (t) { if (e.refCounts[t] <= 0) {\r\n            var n = e.refs.get(t);\r\n            if (n instanceof r.Schema)\r\n                for (var i in n[\"_definition\"].schema)\r\n                    \"string\" != typeof n[\"_definition\"].schema[i] && n[i] && n[i][\"$changes\"] && e.removeRef(n[i][\"$changes\"].refId);\r\n            else {\r\n                var s = n[\"$changes\"].parent._definition, o = s.schema[s.fieldsByIndex[n[\"$changes\"].parentIndex]];\r\n                \"function\" == typeof Object.values(o)[0] && Array.from(n.values()).forEach((function (t) { return e.removeRef(t[\"$changes\"].refId); }));\r\n            }\r\n            e.refs.delete(t);\r\n            delete e.refCounts[t];\r\n        } })); this.deletedRefs.clear(); }; return e; }(); t.Root = s; var o = function () { function e(e, t, n) { this.changed = 0; this.changes = new Map; this.allChanges = new Set; this.caches = {}; this.currentCustomOperation = 0; this.ref = e; this.setParent(t, n); } e.prototype.setParent = function (e, t, n) { var i = this; this.indexes || (this.indexes = this.ref instanceof r.Schema ? this.ref[\"_definition\"].indexes : {}); this.parent = e; this.parentIndex = n; if (t) {\r\n            this.root = t;\r\n            if (this.ref instanceof r.Schema) {\r\n                var s = this.ref[\"_definition\"];\r\n                for (var o in s.schema) {\r\n                    var a = this.ref[o];\r\n                    if (a && a[\"$changes\"]) {\r\n                        var c = s.indexes[o];\r\n                        a[\"$changes\"].setParent(this.ref, t, c);\r\n                    }\r\n                }\r\n            }\r\n            else\r\n                \"object\" == typeof this.ref && this.ref.forEach((function (e, t) { if (e instanceof r.Schema) {\r\n                    var n = e[\"$changes\"], s = i.ref[\"$changes\"].indexes[t];\r\n                    n.setParent(i.ref, i.root, s);\r\n                } }));\r\n        } }; e.prototype.operation = function (e) { this.changes.set(--this.currentCustomOperation, e); }; e.prototype.change = function (e, t) { void 0 === t && (t = i.OPERATION.ADD); var n = \"number\" == typeof e ? e : this.indexes[e]; this.assertValidIndex(n, e); var r = this.changes.get(n); r && r.op !== i.OPERATION.DELETE && r.op !== i.OPERATION.TOUCH || this.changes.set(n, { op: r && r.op === i.OPERATION.DELETE ? i.OPERATION.DELETE_AND_ADD : t, index: n }); this.allChanges.add(n); this.changed = 1; this.touchParents(); }; e.prototype.touch = function (e) { var t = \"number\" == typeof e ? e : this.indexes[e]; this.assertValidIndex(t, e); this.changes.has(t) || this.changes.set(t, { op: i.OPERATION.TOUCH, index: t }); this.allChanges.add(t); this.touchParents(); }; e.prototype.touchParents = function () { this.parent && this.parent[\"$changes\"].touch(this.parentIndex); }; e.prototype.getType = function (e) { if (this.ref[\"_definition\"]) {\r\n            var t;\r\n            return (t = this.ref[\"_definition\"]).schema[t.fieldsByIndex[e]];\r\n        } var t, n = (t = this.parent[\"_definition\"]).schema[t.fieldsByIndex[this.parentIndex]]; return Object.values(n)[0]; }; e.prototype.getChildrenFilter = function () { var e = this.parent[\"_definition\"].childFilters; return e && e[this.parentIndex]; }; e.prototype.getValue = function (e) { return this.ref[\"getByIndex\"](e); }; e.prototype.delete = function (e) { var t = \"number\" == typeof e ? e : this.indexes[e]; if (void 0 !== t) {\r\n            var n = this.getValue(t);\r\n            this.changes.set(t, { op: i.OPERATION.DELETE, index: t });\r\n            this.allChanges.delete(t);\r\n            delete this.caches[t];\r\n            n && n[\"$changes\"] && (n[\"$changes\"].parent = void 0);\r\n            this.changed = 1;\r\n            this.touchParents();\r\n        }\r\n        else\r\n            void 0; }; e.prototype.discard = function (e, t) { var n = this; void 0 === e && (e = 0); void 0 === t && (t = 0); this.ref instanceof r.Schema || this.changes.forEach((function (e) { if (e.op === i.OPERATION.DELETE) {\r\n            var t = n.ref[\"getIndex\"](e.index);\r\n            delete n.indexes[t];\r\n        } })); this.changes.clear(); this.changed = e; t && this.allChanges.clear(); this.currentCustomOperation = 0; }; e.prototype.discardAll = function () { var e = this; this.changes.forEach((function (t) { var n = e.getValue(t.index); n && n[\"$changes\"] && n[\"$changes\"].discardAll(); })); this.discard(); }; e.prototype.cache = function (e, t) { this.caches[e] = t; }; e.prototype.clone = function () { return new e(this.ref, this.parent, this.root); }; e.prototype.ensureRefId = function () { void 0 === this.refId && (this.refId = this.root.getNextUniqueId()); }; e.prototype.assertValidIndex = function (e, t) { if (void 0 === e)\r\n            throw new Error('ChangeTree: missing index for field \"' + t + '\"'); }; return e; }(); t.ChangeTree = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Interpolate = t.InterpolationType = void 0; var i; (function (e) { e[e[\"LINEAR\"] = 0] = \"LINEAR\"; e[e[\"EASEINQUAD\"] = 1] = \"EASEINQUAD\"; e[e[\"EASEOUTQUAD\"] = 2] = \"EASEOUTQUAD\"; e[e[\"EASEQUAD\"] = 3] = \"EASEQUAD\"; })(i = t.InterpolationType || (t.InterpolationType = {})); function r(e, t) { switch (e) {\r\n            case i.LINEAR: return s(t);\r\n            case i.EASEINQUAD: return o(t);\r\n            case i.EASEOUTQUAD: return a(t);\r\n            case i.EASEQUAD: return c(t);\r\n            default: return s(t);\r\n        } } t.Interpolate = r; function s(e) { return e; } function o(e) { return e * e; } function a(e) { return e * (2 - e); } function c(e) { return e * e / (2 * (e * e - e) + 1); } }, function (e, t, n) { var i = this && this.__read || function (e, t) { var n = \"function\" == typeof Symbol && e[Symbol.iterator]; if (!n)\r\n            return e; var i = n.call(e), r, s = [], o; try {\r\n            for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;)\r\n                s.push(r.value);\r\n        }\r\n        catch (e) {\r\n            o = { error: e };\r\n        }\r\n        finally {\r\n            try {\r\n                r && !r.done && (n = i[\"return\"]) && n.call(i);\r\n            }\r\n            finally {\r\n                if (o)\r\n                    throw o.error;\r\n            }\r\n        } return s; }, r = this && this.__spread || function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e = e.concat(i(arguments[t])); return e; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ArraySchema = t.getArrayProxy = void 0; var s = n(12), o = n(7), a = n(8), c = function (e, t) { var n = e.toString(), i = t.toString(); return n < i ? -1 : n > i ? 1 : 0; }; function u(e) { e[\"$proxy\"] = 1; return e = new Proxy(e, { get: function (e, t) { return \"symbol\" == typeof t || isNaN(t) ? e[t] : e.at(t); }, set: function (e, t, n) { if (\"symbol\" == typeof t || isNaN(t))\r\n                e[t] = n;\r\n            else {\r\n                var i = Array.from(e[\"$items\"].keys()), r = parseInt(i[t] || t);\r\n                null == n ? e.deleteAt(r) : e.setAt(r, n);\r\n            } return 1; }, deleteProperty: function (e, t) { \"number\" == typeof t ? e.deleteAt(t) : delete e[t]; return 1; } }); } t.getArrayProxy = u; var l = function () { function e() { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; this.$changes = new s.ChangeTree(this); this.$items = new Map; this.$indexes = new Map; this.$refId = 0; this.push.apply(this, r(e)); } e.is = function (e) { return Array.isArray(e); }; Object.defineProperty(e.prototype, \"length\", { get: function () { return this.$items.size; }, set: function (e) { 0 === e ? this.clear() : this.splice(e, this.length - e); }, enumerable: 0, configurable: 1 }); e.prototype.push = function () { for (var e = this, t = [], n = 0, i; n < arguments.length; n++)\r\n            t[n] = arguments[n]; t.forEach((function (t) { i = e.$refId++; e.setAt(i, t); })); return i; }; e.prototype.pop = function () { var e = Array.from(this.$indexes.values()).pop(); if (void 0 !== e) {\r\n            this.$changes.delete(e);\r\n            this.$indexes.delete(e);\r\n            var t = this.$items.get(e);\r\n            this.$items.delete(e);\r\n            return t;\r\n        } }; e.prototype.at = function (e) { var t = Array.from(this.$items.keys())[e]; return this.$items.get(t); }; e.prototype.setAt = function (e, t) { var n, i; void 0 !== t[\"$changes\"] && t[\"$changes\"].setParent(this, this.$changes.root, e); var r = null !== (i = null === (n = this.$changes.indexes[e]) || void 0 === n ? void 0 : n.op) && void 0 !== i ? i : o.OPERATION.ADD; this.$changes.indexes[e] = e; this.$indexes.set(e, e); this.$items.set(e, t); this.$changes.change(e, r); }; e.prototype.deleteAt = function (e) { var t = Array.from(this.$items.keys())[e]; return void 0 === t ? 0 : this.$deleteAt(t); }; e.prototype.$deleteAt = function (e) { this.$changes.delete(e); this.$indexes.delete(e); return this.$items.delete(e); }; e.prototype.clear = function (e) { var t = this; this.$changes.discard(1, 1); this.$changes.indexes = {}; this.$indexes.clear(); e && \"string\" != typeof this.$changes.getType() && this.$items.forEach((function (e) { t.$changes.root.removeRef(e[\"$changes\"].refId); })); this.$items.clear(); this.$changes.operation({ index: 0, op: o.OPERATION.CLEAR }); this.$changes.touchParents(); }; e.prototype.concat = function () { for (var t, n = [], i = 0; i < arguments.length; i++)\r\n            n[i] = arguments[i]; return new (e.bind.apply(e, r([void 0], (t = Array.from(this.$items.values())).concat.apply(t, r(n))))); }; e.prototype.join = function (e) { return Array.from(this.$items.values()).join(e); }; e.prototype.reverse = function () { var e = this, t = Array.from(this.$items.keys()), n; Array.from(this.$items.values()).reverse().forEach((function (n, i) { e.setAt(t[i], n); })); return this; }; e.prototype.shift = function () { var e, t = Array.from(this.$items.keys()).shift(); if (void 0 !== t) {\r\n            var n = this.$items.get(t);\r\n            this.$deleteAt(t);\r\n            return n;\r\n        } }; e.prototype.slice = function (t, n) { return new (e.bind.apply(e, r([void 0], Array.from(this.$items.values()).slice(t, n)))); }; e.prototype.sort = function (e) { var t = this; void 0 === e && (e = c); var n = Array.from(this.$items.keys()), i; Array.from(this.$items.values()).sort(e).forEach((function (e, i) { t.setAt(n[i], e); })); return this; }; e.prototype.splice = function (e, t) { void 0 === t && (t = this.length - e); for (var n = [], i = 2; i < arguments.length; i++)\r\n            n[i - 2] = arguments[i]; for (var r = Array.from(this.$items.keys()), s = [], o = e; o < e + t; o++) {\r\n            s.push(this.$items.get(r[o]));\r\n            this.$deleteAt(r[o]);\r\n        } return s; }; e.prototype.unshift = function () { for (var e = this, t = [], n = 0; n < arguments.length; n++)\r\n            t[n] = arguments[n]; var i = this.length, r = t.length, s = Array.from(this.$items.values()); t.forEach((function (t, n) { e.setAt(n, t); })); s.forEach((function (t, n) { e.setAt(r + n, t); })); return i + r; }; e.prototype.indexOf = function (e, t) { return Array.from(this.$items.values()).indexOf(e, t); }; e.prototype.lastIndexOf = function (e, t) { void 0 === t && (t = this.length - 1); return Array.from(this.$items.values()).lastIndexOf(e, t); }; e.prototype.every = function (e, t) { return Array.from(this.$items.values()).every(e, t); }; e.prototype.some = function (e, t) { return Array.from(this.$items.values()).some(e, t); }; e.prototype.forEach = function (e, t) { Array.from(this.$items.values()).forEach(e, t); }; e.prototype.map = function (e, t) { return Array.from(this.$items.values()).map(e, t); }; e.prototype.filter = function (e, t) { return Array.from(this.$items.values()).filter(e, t); }; e.prototype.reduce = function (e, t) { return Array.from(this.$items.values()).reduce(e, t); }; e.prototype.reduceRight = function (e, t) { return Array.from(this.$items.values()).reduceRight(e, t); }; e.prototype.find = function (e, t) { return Array.from(this.$items.values()).find(e, t); }; e.prototype.findIndex = function (e, t) { return Array.from(this.$items.values()).findIndex(e, t); }; e.prototype.fill = function (e, t, n) { throw new Error(\"ArraySchema#fill() not implemented\"); }; e.prototype.copyWithin = function (e, t, n) { throw new Error(\"ArraySchema#copyWithin() not implemented\"); }; e.prototype.toString = function () { return this.$items.toString(); }; e.prototype.toLocaleString = function () { return this.$items.toLocaleString(); }; e.prototype[Symbol.iterator] = function () { return Array.from(this.$items.values())[Symbol.iterator](); }; e.prototype[Symbol.unscopables] = function () { return this.$items[Symbol.unscopables](); }; e.prototype.entries = function () { return this.$items.entries(); }; e.prototype.keys = function () { return this.$items.keys(); }; e.prototype.values = function () { return this.$items.values(); }; e.prototype.includes = function (e, t) { return Array.from(this.$items.values()).includes(e, t); }; e.prototype.flatMap = function (e, t) { throw new Error(\"ArraySchema#flatMap() is not supported.\"); }; e.prototype.flat = function (e) { throw new Error(\"ArraySchema#flat() is not supported.\"); }; e.prototype.setIndex = function (e, t) { this.$indexes.set(e, t); }; e.prototype.getIndex = function (e) { return this.$indexes.get(e); }; e.prototype.getByIndex = function (e) { return this.$items.get(this.$indexes.get(e)); }; e.prototype.deleteByIndex = function (e) { var t = this.$indexes.get(e); this.$items.delete(t); this.$indexes.delete(e); }; e.prototype.toArray = function () { return Array.from(this.$items.values()); }; e.prototype.toJSON = function () { return this.toArray().map((function (e) { return \"function\" == typeof e[\"toJSON\"] ? e[\"toJSON\"]() : e; })); }; e.prototype.clone = function (t) { var n; return n = t ? new (e.bind.apply(e, r([void 0], Array.from(this.$items.values())))) : new (e.bind.apply(e, r([void 0], this.map((function (e) { return e[\"$changes\"] ? e.clone() : e; }))))); }; e.prototype.triggerAll = function () { a.Schema.prototype.triggerAll.apply(this); }; return e; }(); t.ArraySchema = l; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getType = t.registerType = void 0; var i = {}; function r(e, t) { i[e] = t; } t.registerType = r; function s(e) { return i[e]; } t.getType = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.HTTP_HOST = t.WS_HOST = void 0; t.WS_HOST = \"ws://localhost:2567\"; t.HTTP_HOST = \"http://localhost:2567\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getHostData = t.setHostData = void 0; var i = null; var r = function (e) { i = e; }; t.setHostData = r; var s = function () { return i; }; t.getHostData = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.removeVideoPanel = t.reproduceVideo = void 0; var i = new Transform({ position: new Vector3(0, 1.975, -.001), scale: new Vector3(-5.95, 3.95, 1) }), r = new Entity; r.addComponent(i); var s = function (e, t) { var n = ~t.indexOf(\"http\"), i = \"\" + (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\"), s = new VideoClip(n ? t : i + \"video/\" + t + \".mp4\"), o = new VideoTexture(s), a = new Material; a.transparencyMode = 1; a.specularIntensity = 1; a.roughness = 1; a.albedoTexture = o; var c = new PlaneShape; c.withCollisions = c.isPointerBlocker = 0; r.addComponentOrReplace(c); r.addComponentOrReplace(a); r.setParent(e); o.playing = 1; o.loop = 1; }; t.reproduceVideo = s; var o = function () { r.setParent(null); engine.removeEntity(r); }; t.removeVideoPanel = o; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.MoveTransformComponent = void 0; var r = n(9), s = n(13); var o = /** @class */ (function () {\r\n            function e(e, t, n, i, o) {\r\n                if (o === void 0) { o = s.InterpolationType.LINEAR; }\r\n                this.start = e;\r\n                this.end = t;\r\n                this.normalizedTime = 0;\r\n                this.lerpTime = 0;\r\n                this.onFinishCallback = i;\r\n                this.interpolationType = o;\r\n                if (0 != n)\r\n                    this.speed = 1 / n;\r\n                else {\r\n                    this.speed = 0;\r\n                    this.normalizedTime = 1;\r\n                    this.lerpTime = 1;\r\n                }\r\n                r.TransformSystem.createAndAddToEngine();\r\n            }\r\n            e.prototype.update = function (e) { this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1); this.lerpTime = s.Interpolate(this.interpolationType, this.normalizedTime); };\r\n            e.prototype.hasFinished = function () { return this.normalizedTime >= 1; };\r\n            e.prototype.assignValueToTransform = function (e) { e.position = Vector3.Lerp(this.start, this.end, this.lerpTime); };\r\n            return e;\r\n        }()); o = i([Component(\"moveTransformComponent\")], o); t.MoveTransformComponent = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.TimerSystem = void 0; var i = n(32), r = n(31), s = n(33);\r\n            var o = /** @class */ (function () {\r\n                function o() {\r\n                    this._components = [];\r\n                    o._instance = this;\r\n                    this._components.push(i.Interval);\r\n                    this._components.push(r.Delay);\r\n                    this._components.push(s.ExpireIn);\r\n                }\r\n                o.createAndAddToEngine = function () { if (null == this._instance) {\r\n                    this._instance = new o;\r\n                    engine.addSystem(this._instance);\r\n                } return this._instance; };\r\n                o.registerCustomComponent = function (e) { this.createAndAddToEngine()._components.push(e); };\r\n                o.prototype.update = function (e) {\r\n                    var _this = this;\r\n                    this._components.forEach(function (t) { _this.updateComponent(e, t); });\r\n                };\r\n                o.prototype.updateComponent = function (e, t) { var n = engine.getEntitiesWithComponent(t); for (var i_5 in n)\r\n                    if (n.hasOwnProperty(i_5)) {\r\n                        var r_9 = n[i_5], s_1 = r_9.getComponent(t);\r\n                        s_1.elapsedTime += e;\r\n                        s_1.elapsedTime >= s_1.targetTime && s_1.onTargetTimeReached(r_9);\r\n                    } };\r\n                return o;\r\n            }());  t.TimerSystem = o; o._instance = null; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.BaseGame = t.GameScene = void 0; var r = /** @class */ (function () {\r\n            function e() {\r\n            }\r\n            return e;\r\n        }()); r = i([Component(\"game_scene\")], r); t.GameScene = r;\r\n            var s = /** @class */ (function () {\r\n                function s() {\r\n                    this.entity = {};\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    var e = engine.getEntitiesWithComponent(\"game_scene\");\r\n                    void 0;\r\n                    Object.keys(e).forEach(function (t) { engine.removeEntity(e[t]); });\r\n                }\r\n                s.prototype.init = function () { };\r\n                s.prototype.destroy = function () { };\r\n                s.prototype.block = function () { };\r\n                s.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                s.prototype.onShareState = function () { };\r\n                s.prototype.shareState = function (e) { };\r\n                s.prototype.update = function (e) { };\r\n                return s;\r\n            }());  t.BaseGame = s; }, function (e, t, n) { var i = this && this.__read || function (e, t) { var n = \"function\" == typeof Symbol && e[Symbol.iterator]; if (!n)\r\n            return e; var i = n.call(e), r, s = [], o; try {\r\n            for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;)\r\n                s.push(r.value);\r\n        }\r\n        catch (e) {\r\n            o = { error: e };\r\n        }\r\n        finally {\r\n            try {\r\n                r && !r.done && (n = i[\"return\"]) && n.call(i);\r\n            }\r\n            finally {\r\n                if (o)\r\n                    throw o.error;\r\n            }\r\n        } return s; }, r = this && this.__spread || function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e = e.concat(i(arguments[t])); return e; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.defineTypes = t.deprecated = t.filterChildren = t.filter = t.type = t.globalContext = t.Context = t.hasFilter = t.SchemaDefinition = void 0; var s = n(8), o = n(14), a = n(23), c = n(15), u = function () { function e() { this.indexes = {}; this.fieldsByIndex = {}; this.deprecated = {}; this.descriptors = {}; } e.create = function (t) { var n = new e; n.schema = Object.assign({}, t && t.schema || {}); n.indexes = Object.assign({}, t && t.indexes || {}); n.fieldsByIndex = Object.assign({}, t && t.fieldsByIndex || {}); n.descriptors = Object.assign({}, t && t.descriptors || {}); n.deprecated = Object.assign({}, t && t.deprecated || {}); return n; }; e.prototype.addField = function (e, t) { var n = this.getNextFieldIndex(); this.fieldsByIndex[n] = e; this.indexes[e] = n; this.schema[e] = Array.isArray(t) ? { array: t[0] } : t; }; e.prototype.addFilter = function (e, t) { if (!this.filters) {\r\n            this.filters = {};\r\n            this.indexesWithFilters = [];\r\n        } this.filters[this.indexes[e]] = t; this.indexesWithFilters.push(this.indexes[e]); return 1; }; e.prototype.addChildrenFilter = function (e, t) { var n = this.indexes[e], i = this.schema[e]; if (c.getType(Object.keys(i)[0])) {\r\n            this.childFilters || (this.childFilters = {});\r\n            this.childFilters[n] = t;\r\n            return 1;\r\n        } void 0; }; e.prototype.getChildrenFilter = function (e) { return this.childFilters && this.childFilters[this.indexes[e]]; }; e.prototype.getNextFieldIndex = function () { return Object.keys(this.schema || {}).length; }; return e; }(); t.SchemaDefinition = u; function l(e) { return e._context && e._context.useFilters; } t.hasFilter = l; var h = function () { function e() { this.types = {}; this.schemas = new Map; this.useFilters = 0; } e.prototype.has = function (e) { return this.schemas.has(e); }; e.prototype.get = function (e) { return this.types[e]; }; e.prototype.add = function (e, t) { void 0 === t && (t = this.schemas.size); e._definition = u.create(e._definition); e._typeid = t; this.types[t] = e; this.schemas.set(e, t); }; e.create = function (t) { void 0 === t && (t = new e); return function (e) { return d(e, t); }; }; return e; }(); t.Context = h; t.globalContext = new h; function d(e, n) { void 0 === n && (n = t.globalContext); return function (t, i) { var c = t.constructor; c._context = n; n.has(c) || n.add(c); var u = c._definition; u.addField(i, e); if (!u.descriptors[i]) {\r\n            var l = o.ArraySchema.is(e), h = !l && a.MapSchema.is(e);\r\n            if (\"string\" != typeof e && !s.Schema.is(e)) {\r\n                var d = Object.values(e)[0];\r\n                \"string\" == typeof d || n.has(d) || n.add(d);\r\n            }\r\n            var p = \"_\" + i;\r\n            u.descriptors[p] = { enumerable: 0, configurable: 0, writable: 1 };\r\n            u.descriptors[i] = { get: function () { return this[p]; }, set: function (e) { if (e !== this[p]) {\r\n                    if (null != e) {\r\n                        !l || e instanceof o.ArraySchema || (e = new (o.ArraySchema.bind.apply(o.ArraySchema, r([void 0], e))));\r\n                        !h || e instanceof a.MapSchema || (e = new a.MapSchema(e));\r\n                        void 0 === e[\"$proxy\"] && (h ? e = a.getMapProxy(e) : l && (e = o.getArrayProxy(e)));\r\n                        this.$changes.change(i);\r\n                        e[\"$changes\"] && e[\"$changes\"].setParent(this, this.$changes.root, this._definition.indexes[i]);\r\n                    }\r\n                    else\r\n                        this.$changes.delete(i);\r\n                    this[p] = e;\r\n                } }, enumerable: 1, configurable: 1 };\r\n        } }; } t.type = d; function p(e) { return function (t, n) { var i = t.constructor, r; i._definition.addFilter(n, e) && (i._context.useFilters = 1); }; } t.filter = p; function f(e) { return function (t, n) { var i = t.constructor, r; i._definition.addChildrenFilter(n, e) && (i._context.useFilters = 1); }; } t.filterChildren = f; function m(e, n) { void 0 === e && (e = 1); void 0 === n && (n = t.globalContext); return function (t, n) { var i, r = t.constructor._definition; r.deprecated[n] = 1; e && (r.descriptors[n] = { get: function () { throw new Error(n + \" is deprecated.\"); }, set: function (e) { }, enumerable: 0, configurable: 1 }); }; } t.deprecated = m; function g(e, n, i) { void 0 === i && (i = e._context || t.globalContext); for (var r in n)\r\n            d(n[r], i)(e.prototype, r); return e; } t.defineTypes = g; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.MapSchema = t.getMapProxy = void 0; var i = n(12), r = n(7), s = n(8); function o(e) { e[\"$proxy\"] = 1; return e = new Proxy(e, { get: function (e, t) { return \"symbol\" != typeof t && \"undefined\" == typeof e[t] ? e.get(t) : e[t]; }, set: function (e, t, n) { \"symbol\" != typeof t && -1 === t.indexOf(\"$\") && \"onAdd\" !== t && \"onRemove\" !== t && \"onChange\" !== t ? e.set(t, n) : e[t] = n; return 1; }, deleteProperty: function (e, t) { e.delete(t); return 1; } }); } t.getMapProxy = o; var a = function () { function e(e) { var t = this; this.$changes = new i.ChangeTree(this); this.$items = new Map; this.$indexes = new Map; this.$refId = 0; if (e)\r\n            if (e instanceof Map)\r\n                e.forEach((function (e, n) { return t.set(n, e); }));\r\n            else\r\n                for (var n in e)\r\n                    this.set(n, e[n]); } e.is = function (e) { return void 0 !== e[\"map\"]; }; e.prototype[Symbol.iterator] = function () { return this.$items[Symbol.iterator](); }; Object.defineProperty(e.prototype, Symbol.toStringTag, { get: function () { return this.$items[Symbol.toStringTag]; }, enumerable: 0, configurable: 1 }); e.prototype.set = function (e, t) { var n = \"undefined\" != typeof this.$changes.indexes[e], i = n ? this.$changes.indexes[e] : this.$refId++, s = n ? r.OPERATION.REPLACE : r.OPERATION.ADD, o = void 0 !== t[\"$changes\"]; o && t[\"$changes\"].setParent(this, this.$changes.root, i); if (n)\r\n            o && this.$items.get(e) !== t && (s = r.OPERATION.ADD);\r\n        else {\r\n            this.$changes.indexes[e] = i;\r\n            this.$indexes.set(i, e);\r\n        } this.$items.set(e, t); this.$changes.change(e, s); return this; }; e.prototype.get = function (e) { return this.$items.get(e); }; e.prototype.delete = function (e) { this.$changes.delete(e); return this.$items.delete(e); }; e.prototype.clear = function (e) { var t = this; this.$changes.discard(1, 1); this.$changes.indexes = {}; this.$indexes.clear(); e && \"string\" != typeof this.$changes.getType() && this.$items.forEach((function (e) { t.$changes.root.removeRef(e[\"$changes\"].refId); })); this.$items.clear(); this.$changes.operation({ index: 0, op: r.OPERATION.CLEAR }); this.$changes.touchParents(); }; e.prototype.has = function (e) { return this.$items.has(e); }; e.prototype.forEach = function (e) { this.$items.forEach(e); }; e.prototype.entries = function () { return this.$items.entries(); }; e.prototype.keys = function () { return this.$items.keys(); }; e.prototype.values = function () { return this.$items.values(); }; Object.defineProperty(e.prototype, \"size\", { get: function () { return this.$items.size; }, enumerable: 0, configurable: 1 }); e.prototype.setIndex = function (e, t) { this.$indexes.set(e, t); }; e.prototype.getIndex = function (e) { return this.$indexes.get(e); }; e.prototype.getByIndex = function (e) { return this.$items.get(this.$indexes.get(e)); }; e.prototype.deleteByIndex = function (e) { var t = this.$indexes.get(e); this.$items.delete(t); this.$indexes.delete(e); }; e.prototype.toJSON = function () { var e = {}; this.forEach((function (t, n) { e[n] = \"function\" == typeof t[\"toJSON\"] ? t[\"toJSON\"]() : t; })); return e; }; e.prototype.clone = function (t) { var n; if (t)\r\n            n = Object.assign(new e, this);\r\n        else {\r\n            var i = new e;\r\n            this.forEach((function (e, t) { e[\"$changes\"] ? i.set(t, e[\"clone\"]()) : i.set(t, e); }));\r\n        } return n; }; e.prototype.triggerAll = function () { s.Schema.prototype.triggerAll.apply(this); }; return e; }(); t.MapSchema = a; }, function (e, t, n) { var i = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e }; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.generateTrack = void 0; var r = i(n(25)), s = n(37), o = n(36), a = n(26), c = n(38), u = n(3), l = n(39), h = n(34), d = n(40); function p(e, t) { var n = u.seedGen.create(e.toString()), i = t, s = Object.values(r.default); var o = []; for (; o.length < i;) {\r\n            var e_10 = a(0, s.length - 1, o.map(function (e) { return s.indexOf(e); }));\r\n            o.push(s[e_10]);\r\n            o = Array.from(new Set(o));\r\n        } void 0; return o.map(function (e, t) { return ({ Game: e }); }); function a(e, t, i) { var r = Math.floor(n.random() * (t + 1 - e)); if (!i)\r\n            return r; for (; ~i.indexOf(r);)\r\n            r = e + Math.floor(n.random() * (t + 1 - e)); return r; } } t.generateTrack = p; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = n(26), r = n(34), s = n(62), o = n(36), a = n(37), c = n(71), u = n(38), l = n(39), h = n(40); t.default = { DifferentGame: u.DifferentGame, AttackGame: r.AttackGame, RotationGame: i.RotationGame, CostumeGame: s.CostumeGame, ObstacleGame: o.ObstacleGame, MathGame: a.MathGame, SammichGame: c.SammichGame, FroggerGame: l.FroggerGame, InvadersGame: h.InvadersGame }; }, function (e, t, n) { var i = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e }; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.RotationGame = void 0; var r = i(n(58)), s = n(3), o = n(21), a = n(10), c = n(1), u = n(5), l = n(2), h = n(0), d = n(4), p = 5;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.currentPlayer, n = _a.seed, _b = _a.level, i = _b === void 0 ? 1 : _b, r = _a.gameIndex;\r\n                    this.state = { startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, started: 0, roundStarted: 0, round: 0, finished: 0, score1: 0, score2: 0, idle: 1, currentRotation: 0, answered: 0 };\r\n                    this.entity = {};\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: i, gameIndex: r };\r\n                    this.randomizer = s.seedGen.create(n.toString());\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.002) }));\r\n                    this.ui = d.createUI(this.scene);\r\n                    this.scene.addComponent(new o.GameScene);\r\n                    this.player1 = d.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = d.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1 = d.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = d.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    var a = this.entity.image = new Entity, u = undefined;\r\n                    m(this.entity.box = new Entity, c.spriteMaterial, h.getSpriteUv(10, 144, 64, 64));\r\n                    m(a, c.spriteMaterial, h.getSpriteUv(9, 144, 64, 64));\r\n                    this.state.rotationSerie = this.getRotationSerie(this.gameSetup.level);\r\n                    this.state.solution = this.state.rotationSerie.reduce(function (e, t) { return e + t; }, 0);\r\n                    var l = this.state.correctSolution = this.getRandomInt(1, 3);\r\n                    this.state.solutions = [1, 2, 3].map(function (e) { return e === l ? _this.state.solution : 90 * _this.getRandomInt(1, 4, _this.state.solution / 90); });\r\n                    this.entity.solutions = this.state.solutions.map(function (e, t) { var n = new Entity; _this.buildSolution(n, t, e); n.setParent(_this.scene); return n; });\r\n                    engine.addSystem(this);\r\n                    this.onClickAnswer = this.onClickAnswer.bind(this);\r\n                    this.buildSolution = this.buildSolution.bind(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                f.prototype.setRoundStartTime = function (e) { this.state.roundStartTime = e; };\r\n                f.prototype.reset = function () { };\r\n                f.prototype.getRotationSerie = function (e) { var t = 3; e >= 3 && e < 5 ? t = 4 : e >= 5 && (t = 5); var n = t; var i = []; for (; n--;) {\r\n                    var e_11 = this.randomizer.random();\r\n                    i.push(Math.floor(2 * e_11) ? 90 : -90);\r\n                } return i; };\r\n                f.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    e === this.gameSetup.currentPlayer ? l.playOnce(\"wow\") : l.playOnce(\"fail\");\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.state[\"score\" + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state[\"score\" + e] });\r\n                    e === this.gameSetup.currentPlayer ? l.playOnce(\"wow\") : l.playOnce(\"fail\");\r\n                    this.entity.box.getComponent(Transform).rotation.setEuler(0, 0, 0);\r\n                    this.entity.box.getComponent(PlaneShape).visible = 0;\r\n                    this.entity.image.getComponent(PlaneShape).visible = 1;\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.shareState = function (e) { this.state.shared = e; var t = e.round; if (t === this.state.round && \"election\" === e.type && e.player !== this.gameSetup.currentPlayer) {\r\n                    var _a = this.entity.solutions[e.election - 1].getComponent(Transform).position, t_16 = _a.x, n_11 = _a.y, i_6 = _a.z, r_10 = this.getIsWinner(this.state, e.election);\r\n                    this[\"player\" + e.player].wrapperEntity.getComponent(Transform).position.set(t_16 + (1 === e.player ? -.3 : .3), n_11, i_6);\r\n                    this[\"player\" + e.player].show();\r\n                    this[\"player\" + e.player].setSprite(r_10);\r\n                    this.ui.updateTime({ player: e.player, time: e.timeSinceAnswers });\r\n                } };\r\n                f.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                f.prototype.init = function () { l.playLoop(\"money\", { volume: .5 }); u.updateSpritePanel({ uvs: h.getSpriteUv(2, 0, 192, 128) }); u.showSpritePanel(); this.entity.image.setParent(this.scene); this.entity.box.setParent(this.scene); this.entity.box.getComponent(PlaneShape).visible = 0; this.state.initialized = 1; this.scene.setParent(this.root); };\r\n                f.prototype.destroy = function () { l.stopSound(\"money\"); u.hideSpritePanel(); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); this.callbacks.onFinish = null; this.callbacks.onShareState = null; };\r\n                f.prototype.update = function (e) { if (!this.state.initialized)\r\n                    return; var t = this.state.round < 2 ? .4 : this.state.round < 3 ? .3 : .2, n = .2; if (!this.state.started && Date.now() >= this.state.startTime)\r\n                    this.start(e);\r\n                else if (!this.state.started || this.state.waitingRound || this.state.roundStarted) {\r\n                    if (this.state.started && !this.state.waitingRound && this.state.roundStarted) {\r\n                        this.state.nextTime += e;\r\n                        if (this.state.nextTime >= t + n) {\r\n                            this.state.nextTime = 0;\r\n                            if (this.state.currentRotation < this.state.rotationSerie.length) {\r\n                                var e_12 = Quaternion.Euler(0, 0, 0), n_12 = Quaternion.Euler(0, 0, this.state.rotationSerie[this.state.currentRotation]);\r\n                                l.playOnce(\"swing\");\r\n                                this.entity.box.addComponentOrReplace(new r.default.RotateTransformComponent(e_12, n_12, t));\r\n                                this.state.nextTime = 0;\r\n                                this.state.currentRotation++;\r\n                                this.entity.solutions.forEach(function (e) { return e.getComponent(PlaneShape).visible = 0; });\r\n                                this.state.answersShown = 0;\r\n                            }\r\n                            else if (!this.state.waitingRound && !this.state.answersShown) {\r\n                                this.state.blocked = 0;\r\n                                this.state.answersShown = 1;\r\n                                this.state.shownAnswersTime = Date.now();\r\n                                this.entity.solutions.forEach(function (e) { return e.getComponent(PlaneShape).visible = 1; });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.state.nextTime += e;\r\n                    if (this.state.nextTime >= t + n) {\r\n                        this.state.nextTime = 0;\r\n                        if (this.state.currentRotation < this.state.rotationSerie.length) {\r\n                            var e_13 = Quaternion.Euler(0, 0, 0), n_13 = Quaternion.Euler(0, 0, this.state.rotationSerie[this.state.currentRotation]);\r\n                            l.playOnce(\"swing\");\r\n                            this.entity.box.addComponentOrReplace(new r.default.RotateTransformComponent(e_13, n_13, t));\r\n                            this.state.nextTime = 0;\r\n                            this.state.currentRotation++;\r\n                            this.entity.solutions.forEach(function (e) { return e.getComponent(PlaneShape).visible = 0; });\r\n                            this.state.answersShown = 0;\r\n                        }\r\n                        else if (!this.state.waitingRound && !this.state.answersShown) {\r\n                            this.state.answersShown = 1;\r\n                            this.state.shownAnswersTime = Date.now();\r\n                            this.entity.solutions.forEach(function (e) { return e.getComponent(PlaneShape).visible = 1; });\r\n                        }\r\n                    }\r\n                } this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime && this.startRound(); };\r\n                f.prototype.block = function () { this.state.blocked = 1; };\r\n                f.prototype.start = function (e) {\r\n                    var _this = this;\r\n                    setTimeout(function () { _this.state.idle = 0; _this.state.started = 1; _this.state.finished = 0; _this.state.nextTime = 0; _this.entity.box.getComponent(PlaneShape).visible = 1; _this.entity.image.getComponent(PlaneShape).visible = 0; }, 1e3);\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.ui.hideTime();\r\n                    this.entity.solutions.forEach(function (e) { e.getComponent(PlaneShape).visible = 0; });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    setTimeout(function () { _this.state.blocked = 0; _this.state.waitingRound = 0; _this.state.answered = 0; _this.state.roundStarted = 1; _this.state.nextTime = 0; _this.entity.box.getComponent(PlaneShape).visible = 1; _this.entity.image.getComponent(PlaneShape).visible = 0; _this.state.rotationSerie = _this.getRotationSerie(_this.state.round + 1); _this.state.solution = _this.state.rotationSerie.reduce(function (e, t) { return e + t; }, 0); var e = _this.state.correctSolution = _this.getRandomInt(1, 3); _this.state.solutions = [1, 2, 3].map(function (t) { return t === e ? _this.state.solution : 90 * _this.getRandomInt(1, 4, _this.state.solution / 90); }); _this.state.currentRotation = 0; _this.entity.solutions.forEach(function (e, t) { e.getComponent(Transform).rotation.setEuler(0, 0, 0); e.getComponent(Transform).rotate(new Vector3(0, 0, 1), _this.state.solutions[t]); }); }, 1e3 / (500 * this.state.round) * 1e3);\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return _this.callbacks.onFinishRound = null; };\r\n                };\r\n                f.prototype.getIsWinner = function (e, t) { var n = this.entity.solutions[t - 1], i = undefined; if (r(this.entity.solutions[e.correctSolution - 1]) === r(n))\r\n                    return 1; void 0; return 0; function r(e) { var t = Math.round(e.getComponent(Transform).rotation.eulerAngles.z) % 360; return t < 0 ? 360 - t : t; } };\r\n                f.prototype.buildSolution = function (e, t, n) {\r\n                    var _this = this;\r\n                    var i = new PlaneShape;\r\n                    i.visible = 0;\r\n                    i.withCollisions = 0;\r\n                    var r = { x: 1.1 * t - 1.1, y: 1.15, z: 0 }, s = new Transform({ position: new Vector3(r.x, r.y, r.z), scale: new Vector3(1, 1, 1e-7) });\r\n                    s.rotate(new Vector3(0, 0, 1), n);\r\n                    e.addComponent(c.spriteMaterial);\r\n                    i.withCollisions = 0;\r\n                    i.uvs = h.getSpriteUv(12, 480, 32, 32);\r\n                    e.addComponent(i);\r\n                    e.addComponent(s);\r\n                    this.gameSetup.currentPlayer && e.addComponent(new OnClick(function () { return _this.onClickAnswer(e, r, t); }));\r\n                };\r\n                f.prototype.onClickAnswer = function (e, t, n) { if (this.state.answered)\r\n                    return; if (this.state.blocked)\r\n                    return; if (!this.state.initialized)\r\n                    return; if (this.state.finished)\r\n                    return; l.playOnce(\"swing\"); this[\"player\" + this.gameSetup.currentPlayer].wrapperEntity.getComponent(Transform).position.set(t.x + (1 === this.gameSetup.currentPlayer ? -.2 : .2), t.y, t.z); this[\"player\" + this.gameSetup.currentPlayer].show(); this.state.blocked = 1; this.state.answered = 1; var i = this.getIsWinner(this.state, n + 1); this[\"player\" + this.gameSetup.currentPlayer].setSprite(i); var r = a.getTimeSinceStart(0 === this.state.round ? this.state.startTime : this.state.lastRoundStartTime), s = i ? r : 999999999 - r, o = Date.now() - this.state.shownAnswersTime; this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: o }); this.callbacks.onShareState({ type: \"election\", player: this.gameSetup.currentPlayer, election: n + 1, time: r, timeSinceAnswers: o, round: this.state.round }); this.state.round < p - 1 ? this.callbacks.onFinishRound({ time: s, player: this.gameSetup.currentPlayer, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round }) : this.callbacks.onFinish({ time: s, isWinner: i, round: this.state.round, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round }); };\r\n                f.prototype.getRandomInt = function (e, t, n) { var i = Math.floor(this.randomizer.random() * (t - e + 1)) + e; return i === n ? this.getRandomInt(e, t, n) : i; };\r\n                return f;\r\n            }());  t.RotationGame = f; f.id = \"Rotation\"; f.timeToWaitForOtherAnswer = 2; f.instructions = \"Image is hidden and start rotating\\n    Click the correct solution\"; function m(e, t, n) { var i = new PlaneShape; i.withCollisions = 0; i.uvs = n; var r = new Transform({ scale: new Vector3(2, 2, 1e-6), position: new Vector3(0, 2.7, 0) }); e.addComponent(i); e.addComponent(t); e.addComponent(r); } }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.RotateTransformComponent = void 0; var r = n(9), s = n(13); var o = /** @class */ (function () {\r\n            function e(e, t, n, i, o) {\r\n                if (o === void 0) { o = s.InterpolationType.LINEAR; }\r\n                this.start = e;\r\n                this.end = t;\r\n                this.normalizedTime = 0;\r\n                this.lerpTime = 0;\r\n                this.onFinishCallback = i;\r\n                this.interpolationType = o;\r\n                if (0 != n)\r\n                    this.speed = 1 / n;\r\n                else {\r\n                    this.speed = 0;\r\n                    this.normalizedTime = 1;\r\n                    this.lerpTime = 1;\r\n                }\r\n                r.TransformSystem.createAndAddToEngine();\r\n            }\r\n            e.prototype.update = function (e) { this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1); this.lerpTime = s.Interpolate(this.interpolationType, this.normalizedTime); };\r\n            e.prototype.hasFinished = function () { return this.normalizedTime >= 1; };\r\n            e.prototype.assignValueToTransform = function (e) { e.rotation = Quaternion.Slerp(this.start, this.end, this.lerpTime); };\r\n            return e;\r\n        }()); o = i([Component(\"rotateTransformComponent\")], o); t.RotateTransformComponent = o; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ScaleTransformComponent = void 0; var r = n(9), s = n(13); var o = /** @class */ (function () {\r\n            function e(e, t, n, i, o) {\r\n                if (o === void 0) { o = s.InterpolationType.LINEAR; }\r\n                this.start = e;\r\n                this.end = t;\r\n                this.normalizedTime = 0;\r\n                this.lerpTime = 0;\r\n                this.onFinishCallback = i;\r\n                this.interpolationType = o;\r\n                if (0 != n)\r\n                    this.speed = 1 / n;\r\n                else {\r\n                    this.speed = 0;\r\n                    this.normalizedTime = 1;\r\n                    this.lerpTime = 1;\r\n                }\r\n                r.TransformSystem.createAndAddToEngine();\r\n            }\r\n            e.prototype.update = function (e) { this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed, 0, 1); this.lerpTime = s.Interpolate(this.interpolationType, this.normalizedTime); };\r\n            e.prototype.hasFinished = function () { return this.normalizedTime >= 1; };\r\n            e.prototype.assignValueToTransform = function (e) { e.scale = Vector3.Lerp(this.start, this.end, this.lerpTime); };\r\n            return e;\r\n        }()); o = i([Component(\"scaleTransformComponent\")], o); t.ScaleTransformComponent = o; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.FollowPathComponent = void 0; var r = n(9); var s = /** @class */ (function () {\r\n            function e(e, t, n, i) {\r\n                this.speed = [];\r\n                this.normalizedTime = 0;\r\n                this.currentIndex = 0;\r\n                this.points = e;\r\n                this.onFinishCallback = n;\r\n                this.onPointReachedCallback = i;\r\n                if (e.length < 2)\r\n                    throw new Error(\"At least 2 points are needed for FollowPathComponent.\");\r\n                if (t > 0) {\r\n                    var n_14 = 0, i_7 = [];\r\n                    for (var t_17 = 0; t_17 < e.length - 1; t_17++) {\r\n                        var r_11 = Vector3.DistanceSquared(e[t_17], e[t_17 + 1]);\r\n                        n_14 += r_11;\r\n                        i_7.push(r_11);\r\n                    }\r\n                    for (var e_14 = 0; e_14 < i_7.length; e_14++)\r\n                        this.speed.push(1 / (i_7[e_14] / n_14 * t));\r\n                }\r\n                else {\r\n                    this.normalizedTime = 1;\r\n                    this.currentIndex = e.length - 2;\r\n                }\r\n                r.TransformSystem.createAndAddToEngine();\r\n            }\r\n            e.prototype.update = function (e) { this.normalizedTime = Scalar.Clamp(this.normalizedTime + e * this.speed[this.currentIndex], 0, 1); if (this.normalizedTime >= 1 && this.currentIndex < this.points.length - 2) {\r\n                this.currentIndex++;\r\n                this.normalizedTime = 0;\r\n                this.onPointReachedCallback && this.currentIndex < this.points.length - 1 && this.onPointReachedCallback(this.points[this.currentIndex], this.points[this.currentIndex + 1]);\r\n            } };\r\n            e.prototype.hasFinished = function () { return this.currentIndex >= this.points.length - 2 && this.normalizedTime >= 1; };\r\n            e.prototype.assignValueToTransform = function (e) { e.position = Vector3.Lerp(this.points[this.currentIndex], this.points[this.currentIndex + 1], this.normalizedTime); };\r\n            return e;\r\n        }()); s = i([Component(\"followPathComponent\")], s); t.FollowPathComponent = s; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.KeepRotatingComponent = void 0; var r = n(9); var s = /** @class */ (function () {\r\n            function e(e, t) {\r\n                this.rotationVelocity = e;\r\n                this.onFinishCallback = t;\r\n                this.rotation = Quaternion.Identity;\r\n                this.finished = 0;\r\n                r.TransformSystem.createAndAddToEngine();\r\n            }\r\n            e.prototype.update = function (e) { this.rotation = Quaternion.Slerp(Quaternion.Identity, this.rotationVelocity, e); };\r\n            e.prototype.hasFinished = function () { return this.finished; };\r\n            e.prototype.assignValueToTransform = function (e) { e.rotation = e.rotation.multiply(this.rotation); };\r\n            e.prototype.stop = function () { this.finished = 1; };\r\n            return e;\r\n        }()); s = i([Component(\"keepRotatingComponent\")], s); t.KeepRotatingComponent = s; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Delay = void 0; var r = n(20); var s = /** @class */ (function () {\r\n            function e(e, t) {\r\n                var _this = this;\r\n                r.TimerSystem.createAndAddToEngine();\r\n                this.elapsedTime = 0;\r\n                this.targetTime = e / 1e3;\r\n                this.onTimeReachedCallback = t;\r\n                this.onTargetTimeReached = function (e) { _this.onTimeReachedCallback && _this.onTimeReachedCallback(); e.removeComponent(_this); };\r\n            }\r\n            e.prototype.setCallback = function (e) { this.onTimeReachedCallback = e; };\r\n            return e;\r\n        }()); s = i([Component(\"timerDelay\")], s); t.Delay = s; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Interval = void 0; var r = n(20); var s = /** @class */ (function () {\r\n            function e(e, t) {\r\n                var _this = this;\r\n                r.TimerSystem.createAndAddToEngine();\r\n                this.elapsedTime = 0;\r\n                this.targetTime = e / 1e3;\r\n                this.onTimeReachedCallback = t;\r\n                this.onTargetTimeReached = function () { _this.elapsedTime = 0; _this.onTimeReachedCallback && _this.onTimeReachedCallback(); };\r\n            }\r\n            e.prototype.setCallback = function (e) { this.onTimeReachedCallback = e; };\r\n            return e;\r\n        }()); s = i([Component(\"timerInterval\")], s); t.Interval = s; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ExpireIn = void 0; var r = n(20); var s = /** @class */ (function () {\r\n            function e(e, t) {\r\n                var _this = this;\r\n                r.TimerSystem.createAndAddToEngine();\r\n                this.elapsedTime = 0;\r\n                this.targetTime = e / 1e3;\r\n                this.onTimeReachedCallback = t;\r\n                this.onTargetTimeReached = function (e) { _this.onTimeReachedCallback && _this.onTimeReachedCallback(); e.removeComponent(_this); engine.removeEntity(e); };\r\n            }\r\n            e.prototype.setCallback = function (e) { this.onTimeReachedCallback = e; };\r\n            return e;\r\n        }()); s = i([Component(\"timerExpireIn\")], s); t.ExpireIn = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.AttackGame = void 0; var i = n(21), r = n(3), s = n(10), o = n(1), a = n(5), c = n(2), u = n(0), l = n(4), h = { DEFEND: 0, ATTACK: 1 }, d = 640 / 71 * 16, p = 11; var f = 0; var m = { E: 1, F: 2, CLICK: 3 };\r\n            var g = /** @class */ (function () {\r\n                function g(e, _a) {\r\n                    var t = _a.currentPlayer, n = _a.seed, s = _a.level, a = _a.gameIndex;\r\n                    this.state = { startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, initialized: 0, round: 0, idle: 1, started: 0, blocked: 0, finished: 0, player1Key: -1, player2Key: -2 };\r\n                    this.callbacks = { onFinish: null, onFinishRound: null, onShareState: null };\r\n                    this.score1 = 0;\r\n                    this.score2 = 0;\r\n                    void 0;\r\n                    f++;\r\n                    this.id = f;\r\n                    var c = engine.getEntitiesWithComponent(\"game_scene\");\r\n                    void 0;\r\n                    Object.keys(c).forEach(function (e) { engine.removeEntity(c[e]); });\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: s, gameIndex: a };\r\n                    this.randomizer = r.seedGen.create(n.toString());\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new i.GameScene);\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.002) }));\r\n                    this.ui = l.createUI(this.scene);\r\n                    this.label1 = u.createSpriteEntity(this.scene, { position: new Vector3(-1.5, 3.5, -.001), uvs: u.getSpriteUv(4, 384, 32, 32), scale: new Vector3(1, 1, 1) });\r\n                    this.label2 = u.createSpriteEntity(this.scene, { position: new Vector3(1.5, 3.5, -.001), uvs: u.getSpriteUv(4, 384, 32, 32), scale: new Vector3(1, 1, 1) });\r\n                    this.label1.hide();\r\n                    this.label2.hide();\r\n                    this.char1 = new Entity;\r\n                    this.char2 = new Entity;\r\n                    this.char1.addComponent(o.spriteMaterial);\r\n                    this.char2.addComponent(o.spriteMaterial);\r\n                    this.char1.addComponent(new Transform({ position: new Vector3(-1, 2, 0), scale: new Vector3(2, 2, 1) }));\r\n                    this.char2.addComponent(new Transform({ position: new Vector3(1, 2, 0), scale: new Vector3(-2, 2, 1) }));\r\n                    this.char1.setParent(this.scene);\r\n                    this.char2.setParent(this.scene);\r\n                    this.char1Shape = new PlaneShape;\r\n                    this.char1Shape.uvs = u.getSpriteUv(1, d, 64, 71);\r\n                    this.char2Shape = new PlaneShape;\r\n                    this.char2Shape.uvs = u.getSpriteUv(1, d, 64, 71);\r\n                    this.char1.addComponent(this.char1Shape);\r\n                    this.char2.addComponent(this.char2Shape);\r\n                    this.roundResult1 = l.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = l.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.state = Object.assign(Object.assign({}, this.state), { player1Key: 1 + Math.floor(3 * this.randomizer.random()), player2Key: 1 + Math.floor(3 * this.randomizer.random()), started: 0 });\r\n                    engine.addSystem(this);\r\n                }\r\n                g.prototype.setStartTime = function (e) { void 0; this.state.startTime = e; };\r\n                g.prototype.reset = function () { };\r\n                g.prototype.setRoundStartTime = function (e) { void 0; this.state.roundStartTime = e; };\r\n                g.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.label1.hide();\r\n                    this.label2.hide();\r\n                    c.stopSound(\"swing\");\r\n                    c.playOnce(\"hit\");\r\n                    this[\"score\" + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this[\"score\" + e] });\r\n                    e !== this.gameSetup.currentPlayer ? setTimeout(function () { c.playOnce(\"fail\"); }, 500) : setTimeout(function () { c.playOnce(\"ok\"); }, 500);\r\n                    Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.primaryButtonCallback);\r\n                    Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.secondaryButtonCallback);\r\n                    Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.clickButtonCallback);\r\n                    void 0;\r\n                    var t = [3, 640 / 71 * 8, 128, 71];\r\n                    if (1 === e) {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_15 = this.char1.getComponent(Transform);\r\n                        e_15.scale.set(4, 2, 1);\r\n                        e_15.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = u.getSpriteUv.apply(u, __spread(t));\r\n                    }\r\n                    else {\r\n                        this.char2Shape.visible = 0;\r\n                        var e_16 = this.char1.getComponent(Transform);\r\n                        e_16.scale.set(-4, 2, 1);\r\n                        e_16.position.set(0, 2, 0);\r\n                        this.char1Shape.uvs = u.getSpriteUv.apply(u, __spread(t));\r\n                    }\r\n                    var n = 1 === e ? 2 : 1;\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + n].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                g.prototype.handleAction = function (e) { Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.primaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.secondaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.clickButtonCallback); this[\"char\" + this.gameSetup.currentPlayer + \"Shape\"].uvs = u.getSpriteUv(3, d, 64, 71); var t = s.getTimeSinceStart(0 === this.state.round ? this.state.startTime : this.state.lastRoundStartTime); void 0; var n = e ? t : 999999999 - t; this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: t }); this.callbacks.onShareState({ player: this.gameSetup.currentPlayer, time: n, timeSinceStart: t, round: this.state.round }); if (this.state.round < p - 1) {\r\n                    this.callbacks.onFinishRound({ player: this.gameSetup.currentPlayer, time: n, isWinner: e, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round });\r\n                    this.state.waitingRound = 1;\r\n                }\r\n                else\r\n                    this.callbacks.onFinish({ player: this.gameSetup.currentPlayer, time: n, isWinner: e, gameIndex: this.gameSetup.gameIndex }); };\r\n                g.prototype.clickButtonCallback = function (e) { c.playOnce(\"swing\"); var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.CLICK; this.handleAction(t); };\r\n                g.prototype.primaryButtonCallback = function (e) { c.playOnce(\"swing\"); var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.E; this.handleAction(t); };\r\n                g.prototype.secondaryButtonCallback = function (e) { c.playOnce(\"swing\"); var t = this.state[\"player\" + this.gameSetup.currentPlayer + \"Key\"] === m.F; this.handleAction(t); };\r\n                g.prototype.init = function () { a.updateSpritePanel({ uvs: u.getSpriteUv(4, 0, 192, 128) }); a.showSpritePanel(); c.playLoop(\"battle\", { volume: .5 }); void 0; this.scene.setParent(this.root); this.state.initialized = 1; };\r\n                g.prototype.start = function () { void 0; this.state.round = 0; this.state.idle = 0; this.state.finished = 0; this.state.started = 1; this.primaryButtonCallback = this.primaryButtonCallback.bind(this); this.secondaryButtonCallback = this.secondaryButtonCallback.bind(this); this.clickButtonCallback = this.clickButtonCallback.bind(this); this.gameSetup.currentPlayer && Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, 0, this.primaryButtonCallback); this.gameSetup.currentPlayer && Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, 0, this.secondaryButtonCallback); this.gameSetup.currentPlayer && Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, this.clickButtonCallback); this.label1.show(); this.label2.show(); this.label1.updateUvs(u.getSpriteUv(this.state.player1Key, 387, 32, 32)); this.label2.updateUvs(u.getSpriteUv(this.state.player2Key, 387, 32, 32)); };\r\n                g.prototype.startRound = function () { this.state.round++; this.ui.hideTime(); this.char2Shape.visible = 1; var e = this.char1.getComponent(Transform); e.scale.set(2, 2, 1); e.position.set(-1, 2, 0); this.char1Shape.uvs = u.getSpriteUv(1, d, 64, 71); this.char2Shape.uvs = u.getSpriteUv(1, d, 64, 71); this.roundResult1.hide(); this.roundResult2.hide(); this.state.lastRoundStartTime = this.state.roundStartTime; this.state.roundStartTime = Number.MAX_VALUE; void 0; this.state.idle = 0; this.state.started = 1; this.state.waitingRound = 0; Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, 0, this.primaryButtonCallback); Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, 0, this.secondaryButtonCallback); Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, this.clickButtonCallback); this.state = Object.assign(Object.assign({}, this.state), { player1Key: 1 + Math.floor(3 * this.randomizer.random()), player2Key: 1 + Math.floor(3 * this.randomizer.random()) }); this.label1.show(); this.label2.show(); this.label1.updateUvs(u.getSpriteUv(this.state.player1Key, 387, 32, 32)); this.label2.updateUvs(u.getSpriteUv(this.state.player2Key, 387, 32, 32)); };\r\n                g.prototype.destroy = function () { c.stopAllSounds(); a.hideSpritePanel(); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.primaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.secondaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.clickButtonCallback); void 0; var e = engine.getEntitiesWithComponent(\"game_scene\"); void 0; Object.keys(e).forEach(function (e) { }); this.scene.setParent(null); engine.removeEntity(this.scene); void 0; engine.removeSystem(this); };\r\n                g.prototype.finish = function (e) { this.label1.hide(); this.label2.hide(); var t = e.winner; void 0; var n = 1 === t ? 2 : 1; c.stopSound(\"swing\"); c.playOnce(\"hit\"); t !== this.gameSetup.currentPlayer ? c.playOnce(\"fail\") : c.playOnce(\"ok\"); var i = [3, 640 / 71 * 8, 128, 71]; if (1 === t) {\r\n                    this.char2Shape.visible = 0;\r\n                    var e_17 = this.char1.getComponent(Transform);\r\n                    e_17.scale.set(4, 2, 1);\r\n                    e_17.position.set(0, 2, 0);\r\n                    this.char1Shape.uvs = u.getSpriteUv.apply(u, __spread(i));\r\n                }\r\n                else {\r\n                    this.char2Shape.visible = 0;\r\n                    var e_18 = this.char1.getComponent(Transform);\r\n                    e_18.scale.set(-4, 2, 1);\r\n                    e_18.position.set(0, 2, 0);\r\n                    this.char1Shape.uvs = u.getSpriteUv.apply(u, __spread(i));\r\n                } this.roundResult1.show(); this.roundResult2.show(); this[\"roundResult\" + t].update(1); this[\"roundResult\" + n].update(0); };\r\n                g.prototype.block = function () { this.state.blocked = 1; Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.primaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.secondaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.clickButtonCallback); };\r\n                g.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { _this.callbacks.onFinish = null; };\r\n                };\r\n                g.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return _this.callbacks.onFinishRound = null; };\r\n                };\r\n                g.prototype.shareState = function (e) { void 0; var t = e.player, n = e.timeSinceStart, i = e.time, r = e.round; if (r === this.state.round) {\r\n                    this[\"char\" + t + \"Shape\"].uvs = u.getSpriteUv(3, d, 64, 71);\r\n                    this.ui.updateTime({ player: t, time: n });\r\n                } };\r\n                g.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                g.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (!this.state.waitingRound && !this.state.started && Date.now() >= this.state.startTime) {\r\n                        void 0;\r\n                        this.start();\r\n                    }\r\n                    else if (this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime) {\r\n                        void 0;\r\n                        this.startRound();\r\n                    }\r\n                    else\r\n                        Date.now() >= this.state.roundStartTime; };\r\n                return g;\r\n            }());  t.AttackGame = g; g.id = \"Attack\"; g.timeToWaitForOtherAnswer = 1; g.instructions = \"2 old warriors on each player side, \\n    faster than your opponent,\\n    press the appropriate key: E, F or CLICK\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createCross = void 0; var i = n(1), r = n(0), s = function (e, _a) {\r\n            var t = _a.position, n = _a.scale;\r\n            var s = new Entity, o = new PlaneShape;\r\n            o.withCollisions = 0;\r\n            s.addComponent(i.spriteMaterial);\r\n            o.uvs = r.getSpriteUv(993, 0, 32);\r\n            s.addComponent(o);\r\n            var a = new Transform({ position: t, scale: n });\r\n            s.addComponent(a);\r\n            s.setParent(e);\r\n            return { dispose: function () { s.setParent(null); engine.removeEntity(s); s.removeComponent(i.spriteMaterial); s.removeComponent(a); s.removeComponent(o); }, hide: function () { o.visible = 0; }, show: function () { o.visible = 1; }, setPosition: function (_a) {\r\n                    var e = _a.x, t = _a.y, n = _a.z;\r\n                    a.position.set(e, t, n);\r\n                } };\r\n        }; t.createCross = s; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ObstacleGame = void 0; var r = n(3), s = n(70), o = n(2), a = n(6), c = n(4), u = function (_a) {\r\n            var e = _a.getRandomInt, t = _a.level;\r\n            var n = 80 * Math.log(t + 1);\r\n            var i = n, r = [];\r\n            var s = 2, o = 8;\r\n            var a = 1;\r\n            for (; r.length < n;) {\r\n                r.push.apply(r, __spread(new Array(e(s, o) + (a ? 4 : 0)).fill(0), [1]));\r\n                a = 0;\r\n            }\r\n            r.push.apply(r, __spread(new Array(3).fill(0)));\r\n            return r;\r\n        };\r\n            var l = /** @class */ (function () {\r\n                function l(e, _a) {\r\n                    var t = _a.seed, n = _a.currentPlayer, _b = _a.level, i = _b === void 0 ? 1 : _b, o = _a.gameIndex;\r\n                    this.state = { initialized: 0, started: 0, currentLeg: 1, blocked: 1, startTime: Number.MAX_VALUE };\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    this.root = e;\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.001) }));\r\n                    this.ui = c.createUI(this.scene);\r\n                    this.gameSetup = { seed: t.toString(), currentPlayer: n, level: i, gameIndex: o };\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    var a = 1 === n ? 2 : 1, l = u({ getRandomInt: this.getRandomInt.bind(this), level: i });\r\n                    void 0;\r\n                    this.screen1 = s.createScreen(this.scene, { player: 1, track: l });\r\n                    this.screen2 = s.createScreen(this.scene, { player: 2, track: l });\r\n                    this.roundResult1 = c.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = c.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.moveLeg1 = this.moveLeg1.bind(this);\r\n                    this.moveLeg2 = this.moveLeg2.bind(this);\r\n                    this.jump = this.jump.bind(this);\r\n                    engine.addSystem(this);\r\n                }\r\n                l.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                l.prototype.getPlayerScreen = function (e) { return this[\"screen\" + e]; };\r\n                l.prototype.init = function () { this.state.initialized = 1; this.scene.setParent(this.root); };\r\n                l.prototype.tempBlock = function () {\r\n                    var _this = this;\r\n                    this.state.blocked = 1;\r\n                    this[\"screen\" + this.gameSetup.currentPlayer].showCross();\r\n                    o.playOnce(\"fail\");\r\n                    setTimeout(function () { _this.state.blocked = 0; _this[\"screen\" + _this.gameSetup.currentPlayer].hideCross(); }, 1e3);\r\n                };\r\n                l.prototype.moveLeg1 = function () { if (this.state.blocked || !this.state.started)\r\n                    return; var e = this.getPlayerScreen(this.gameSetup.currentPlayer); if (this.state.blocked || 1 !== this.state.currentLeg || e.getScreenState().moving)\r\n                    return; e.moveScreen(); this.state.currentLeg = 2; e.getNextStepValue() ? this.tempBlock() : o.playOnce(\"ok\"); var t = this.getPercentage(this.gameSetup.currentPlayer); void 0; this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t }); this.callbacks.onShareState({ movement: \"1\", player: this.gameSetup.currentPlayer, percentage: t }); };\r\n                l.prototype.moveLeg2 = function () { if (this.state.blocked || !this.state.started)\r\n                    return; var e = this.getPlayerScreen(this.gameSetup.currentPlayer); if (this.state.blocked || 2 !== this.state.currentLeg || e.getScreenState().moving)\r\n                    return; e.moveScreen(); this.state.currentLeg = 1; e.getNextStepValue() ? this.tempBlock() : o.playOnce(\"ok\"); var t = this.getPercentage(this.gameSetup.currentPlayer); this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t }); this.callbacks.onShareState({ movement: \"2\", player: this.gameSetup.currentPlayer, percentage: t }); };\r\n                l.prototype.jump = function () { if (this.state.blocked || !this.state.started)\r\n                    return; var e = this.getPlayerScreen(this.gameSetup.currentPlayer); if (1 !== e.getNextStepValue())\r\n                    return; if (e.getScreenState().moving)\r\n                    return; e.moveScreen(1); var t = this.getPercentage(this.gameSetup.currentPlayer, 1); this.ui.updateScore({ player: this.gameSetup.currentPlayer, score: t }); this.callbacks.onShareState({ movement: \"jump\", player: this.gameSetup.currentPlayer, percentage: t }); o.playOnce(\"jump\"); };\r\n                l.prototype.getPercentage = function (e, t) { var n = this[\"screen\" + e].getScreenState().currentStep + (t ? 2 : 1), i = this[\"screen\" + e].getTotalSteps() - 4; return Math.floor(100 * n / i); };\r\n                l.prototype.start = function () {\r\n                    var _this = this;\r\n                    this.state.started = 1;\r\n                    (function () { return i(_this, void 0, void 0, (function () {\r\n                        var e;\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    o.playLoop(\"race\", { volume: .5 });\r\n                                    return [4 /*yield*/, h(3e3)];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    o.playOnce(\"readygo\");\r\n                                    a.updateTextPanel({ value: \"READY!\" });\r\n                                    return [4 /*yield*/, h(700)];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    a.updateTextPanel({ value: \"STEADY!\" });\r\n                                    return [4 /*yield*/, h(800)];\r\n                                case 3:\r\n                                    _a.sent();\r\n                                    a.updateTextPanel({ value: \"GO!\" });\r\n                                    void 0;\r\n                                    e = this.getPlayerScreen(this.gameSetup.currentPlayer);\r\n                                    this.state.blocked = 0;\r\n                                    if (this.gameSetup.currentPlayer) {\r\n                                        this.state.blocked = 0;\r\n                                        Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, 0, this.moveLeg1);\r\n                                        Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, 0, this.moveLeg2);\r\n                                        Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, this.jump);\r\n                                    }\r\n                                    e.onMove(function (e) { e % 2 == 0; });\r\n                                    e.onFinishScreen(function () { _this.block(); o.stopSound(\"race\"); var e = Date.now() - _this.state.startTime; _this.callbacks.onFinish({ time: e, isWinner: 1, gameIndex: _this.gameSetup.gameIndex, roundIndex: 0 }); _this.ui.updateTime({ player: _this.gameSetup.currentPlayer, time: e }); _this.ui.updateScore({ player: _this.gameSetup.currentPlayer, score: 100 }); _this.callbacks.onShareState({ player: _this.gameSetup.currentPlayer, timeSinceStart: e, percentage: 100 }); });\r\n                                    this.screen1.handleVisibility();\r\n                                    this.screen2.handleVisibility();\r\n                                    return [4 /*yield*/, h(1e3)];\r\n                                case 4:\r\n                                    _a.sent();\r\n                                    a.updateTextPanel({ value: \"\" });\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    })); })();\r\n                };\r\n                l.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (!this.state.started && Date.now() - 4e3 >= this.state.startTime)\r\n                        this.start();\r\n                    else {\r\n                        this.state.started && this.getPlayerScreen(1).getScreenState().moving && this.getPlayerScreen(1).updateScreen(e);\r\n                        this.state.started && this.getPlayerScreen(2).getScreenState().moving && this.getPlayerScreen(2).updateScreen(e);\r\n                    } };\r\n                l.prototype.destroy = function () { o.stopSound(\"race\"); a.updateTextPanel({ value: \"\" }); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.moveLeg1); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.moveLeg2); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.jump); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); };\r\n                l.prototype.block = function () { this.state.blocked = 1; Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.moveLeg1); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.moveLeg2); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.jump); };\r\n                l.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                l.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                l.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                l.prototype.shareState = function (e) { void 0; var t = e.movement, n = e.player, i = e.timeSinceStart, r = e.percentage; if (i)\r\n                    this.ui.updateTime({ player: n, time: i });\r\n                else {\r\n                    var e_19 = this.getPlayerScreen(n);\r\n                    \"1\" === t || \"2\" === t ? e_19.moveScreen() : e_19.moveScreen(1);\r\n                } this.ui.updateScore({ player: n, score: r }); };\r\n                l.prototype.getRandomInt = function (e, t, n) { var i = Math.floor(this.randomizer.random() * (t - e + 1)) + e; return i === n ? this.getRandomInt(e, t, n) : i; };\r\n                return l;\r\n            }());  t.ObstacleGame = l; l.id = \"Obstacle\"; l.instructions = \"Alternate E and F  with rythm to run,\\n    when red obstacle right in front,\\n    Press click to jump!\\n    \"; function h(e) { return new Promise(function (t) { return setTimeout(t, e); }); } }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.MathGame = void 0; var i = n(2), r = n(1), s = n(5), o = n(3), a = n(10), c = n(0), u = n(4), l = 5, h = 4 / 128, d = 144, p = function (e, _a) {\r\n            var t = _a.player;\r\n            var n = new Entity, i = new PlaneShape;\r\n            i.withCollisions = 0;\r\n            i.uvs = c.getSpriteUv(1, d, 64, 64);\r\n            n.addComponent(r.spriteMaterial);\r\n            n.addComponent(i);\r\n            n.addComponent(new Transform({ position: new Vector3(1 === t ? -(2.2 + 2 * h) : 2.2 - 3 * h, 1.5 - 2 * h, -.002), scale: new Vector3(1 === t ? 2 : -2, 2, 1) }));\r\n            n.setParent(e);\r\n            return i;\r\n        };\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var t = _a.seed, n = _a.level, i = _a.currentPlayer, r = _a.gameIndex;\r\n                    this.state = { blocked: 0, started: 0, initialized: 0, startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, round: 0, finished: 0, score1: 0, score2: 0 };\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.002) }));\r\n                    this.ui = u.createUI(this.scene);\r\n                    this.teacher1 = p(this.scene, { player: 1 });\r\n                    this.teacher2 = p(this.scene, { player: 2 });\r\n                    this.player1 = u.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = u.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.roundResult1 = u.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = u.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.gameSetup = { seed: t, currentPlayer: i, level: n, gameIndex: r };\r\n                    this.root = e;\r\n                    this.randomizer = o.seedGen.create(t.toString());\r\n                    var s = new Entity;\r\n                    this.question = new TextShape(\"\");\r\n                    this.question.withCollisions = 0;\r\n                    this.question.vTextAlign = \"top\";\r\n                    this.question.fontSize = 5;\r\n                    s.addComponent(this.question);\r\n                    s.addComponent(new Transform({ position: new Vector3(0, 3.5, -.001) }));\r\n                    s.setParent(this.scene);\r\n                    engine.addSystem(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                f.prototype.setRoundStartTime = function (e) { void 0; this.state.roundStartTime = e; };\r\n                f.prototype.onClickAnswer = function (e) { if (this.state.blocked || !this.state.started)\r\n                    return; this.state.blocked = 1; i.playOnce(\"swing\"); var t = this[\"player\" + this.gameSetup.currentPlayer]; t.show(); t.wrapperEntity.getComponent(Transform).position.set(this.answersT[e].position.x + (1 === this.gameSetup.currentPlayer ? -.2 : .2), this.answersT[e].position.y, this.answersT[e].position.z); var n = this.answers[e].value === this.answers[this.solutionIndex].value; t.setSprite(n); var r = a.getTimeSinceStart(0 === this.state.round ? this.state.startTime : this.state.lastRoundStartTime), s = n ? r : 999999999 - r; this.callbacks.onShareState({ type: \"election\", player: this.gameSetup.currentPlayer, index: e, time: s, timeSinceStart: r, round: this.state.round }); this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: r }); if (this.state.round < l - 1) {\r\n                    this.callbacks.onFinishRound({ player: this.gameSetup.currentPlayer, time: s, round: this.state.round, isWinner: n, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round });\r\n                    this.state.waitingRound = 1;\r\n                }\r\n                else\r\n                    this.callbacks.onFinish({ player: this.gameSetup.currentPlayer, time: s, round: this.state.round, isWinner: n, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round }); };\r\n                f.prototype.init = function () { i.playLoop(\"money\", { volume: .5 }); this.state.initialized = 1; s.updateSpritePanel({ uvs: c.getSpriteUv(3, 0, 192, 128) }); s.showSpritePanel(); this.scene.setParent(this.root); };\r\n                f.prototype.block = function () { this.state.blocked = 1; };\r\n                f.prototype.destroy = function () {\r\n                    var _this = this;\r\n                    Object.keys(this.callbacks).forEach(function (e) { _this.callbacks[e] = null; });\r\n                    i.stopSound(\"money\");\r\n                    s.hideSpritePanel();\r\n                    this.scene.setParent(null);\r\n                    engine.removeEntity(this.scene);\r\n                };\r\n                f.prototype.start = function () {\r\n                    var _this = this;\r\n                    this.ui.hideTime();\r\n                    var e = Math.floor(50 * this.randomizer.random()), t = Math.floor(50 * this.randomizer.random());\r\n                    this.question.value = e + \" + \" + t;\r\n                    this.state.started = 1;\r\n                    var n = e + t, i = this.solutionIndex = Math.floor(6 * this.randomizer.random()), r = n - 1, s = this.getRandomIntExcept(0, 5, [i]), o = n - 10, a = this.getRandomIntExcept(0, 5, [i, s]);\r\n                    this.answers = Array(6).fill(null);\r\n                    this.answersT = Array(6).fill(null);\r\n                    var c = [], u = new PlaneShape, l = new Material;\r\n                    l.albedoColor = new Color4(1, 1, 1, .05);\r\n                    this.answers.forEach(function (e, t) { var h = new Entity, d = new Entity; u.withCollisions = 0; d.addComponent(u); d.addComponent(l); _this.answers[t] = new TextShape; _this.answers[t].withCollisions = 0; _this.answers[t].fontSize = 3; h.addComponent(_this.answers[t]); _this.answers[t].value = c[t] = t === i ? n : t === s ? r : t === a ? o : _this.getRandomIntExcept(0, 100, c); h.addComponent(new Transform({ position: new Vector3(0, 0, -.01) })); _this.answersT[t] = new Transform({ position: new Vector3(0 === t || 3 === t ? -1 : 1 === t || 4 === t ? 0 : 1, t < 3 ? 2.5 : 1.5, 0), scale: new Vector3(.9, .9, .9) }); d.addComponent(_this.answersT[t]); d.addComponent(new OnClick(function () { _this.onClickAnswer(t); })); d.setParent(_this.scene); h.setParent(d); });\r\n                };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.ui.hideTime();\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.question.value = \"\";\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    this.answers.forEach(function (e, t) { _this.answers[t].value = \"\"; });\r\n                    this.question.value = \"\";\r\n                    this.teacher1.uvs = c.getSpriteUv(1, d, 64, 64);\r\n                    this.teacher2.uvs = c.getSpriteUv(1, d, 64, 64);\r\n                    setTimeout(function () { _this.gameSetup.currentPlayer && (_this.state.blocked = 0); var e = Math.floor(50 * _this.randomizer.random()), t = Math.floor(50 * _this.randomizer.random()); _this.question.value = e + \" + \" + t; var n = e + t, i = _this.solutionIndex = Math.floor(6 * _this.randomizer.random()), r = n - 1, s = _this.getRandomIntExcept(0, 5, [i]), o = n - 10, a = _this.getRandomIntExcept(0, 5, [i, s]), c = []; _this.answers.forEach(function (e, t) { _this.answers[t].value = c[t] = t === i ? n : t === s ? r : t === a ? o : _this.getRandomIntExcept(0, 100, c); }); }, 500);\r\n                };\r\n                f.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (!this.state.waitingRound && !this.state.started && Date.now() >= this.state.startTime) {\r\n                        void 0;\r\n                        this.start();\r\n                    }\r\n                    else\r\n                        this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime ? this.startRound() : Date.now() >= this.state.roundStartTime; };\r\n                f.prototype.finish = function (e) { var t = e.winner, n = 1 === t ? 2 : 1; this.state.blocked = 1; this[\"teacher\" + t].uvs = c.getSpriteUv(3, d, 64, 64); this[\"teacher\" + n].uvs = c.getSpriteUv(2, d, 64, 64); t === this.gameSetup.currentPlayer ? i.playOnce(\"wow\") : i.playOnce(\"fail\"); this.roundResult1.show(); this.roundResult2.show(); this[\"roundResult\" + t].update(1); this[\"roundResult\" + n].update(0); };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    this.state.blocked = 1;\r\n                    this.state[\"score\" + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state[\"score\" + e] });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    void 0;\r\n                    this[\"teacher\" + e].uvs = c.getSpriteUv(3, d, 64, 64);\r\n                    this[\"teacher\" + t].uvs = c.getSpriteUv(2, d, 64, 64);\r\n                    e === this.gameSetup.currentPlayer ? i.playOnce(\"wow\") : i.playOnce(\"fail\");\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.onFinish = function (e) { this.callbacks.onFinish = e; };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return _this.callbacks.onFinishRound = null; };\r\n                };\r\n                f.prototype.shareState = function (e) { var t = e.player, n = e.index, i = e.timeSinceStart, r = e.time, s = e.round; if (s !== this.state.round)\r\n                    return; var o = n === this.solutionIndex, a = this[\"player\" + t]; a.show(); a.wrapperEntity.getComponent(Transform).position.set(this.answersT[n].position.x + (1 === t ? -.2 : .2), this.answersT[n].position.y, this.answersT[n].position.z); a.setSprite(o); this.ui.updateTime({ player: t, time: i }); };\r\n                f.prototype.onShareState = function (e) { this.callbacks.onShareState = e; };\r\n                f.prototype.getRandomIntExcept = function (e, t, n) { var i = e + Math.floor(this.randomizer.random() * (t + 1 - e)); if (!n)\r\n                    return i; for (; ~n.indexOf(i);)\r\n                    i = e + Math.floor(this.randomizer.random() * (t + 1 - e)); return i; };\r\n                return f;\r\n            }());  t.MathGame = f; f.id = \"Math\"; f.instructions = \"Math\\nClick the correct answer\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.DifferentGame = void 0; var i = n(4), r = n(3), s = n(1), o = n(0), a = n(2), c = n(5), u = n(6), l = n(10), h = 192, d = function (e, t, n) { var i = new Entity, r = new PlaneShape; var a = 0; i.addComponent(r); i.addComponent(s.spriteMaterial); i.addComponent(new Transform({ scale: new Vector3(1.9, 1.9, 1.9), position: new Vector3(0 === t ? -2 : 1 === t ? 0 : 2, 2, -.001) })); r.uvs = o.getSpriteUv(1, h, 64, 64); r.uvs = o.getSpriteUv(0, 0, 0, 0); i.setParent(e); i.addComponent(new OnClick(function () { n(t); })); return { setIndex: function (e) { a = e; r.uvs = o.getSpriteUv(a, h, 64, 64); }, getSpriteIndex: function () { return a; }, hide: function () { r.uvs = o.getSpriteUv(0, 0, 0, 0); } }; }, p = 5;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.seed, n = _a.level, s = _a.currentPlayer, o = _a.gameIndex;\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.state = { blocked: 0, started: 0, initialized: 0, startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, round: 0, finished: 0, score1: 0, score2: 0, equalSpriteIndex: 0, differentSpriteIndex: 0, answerPositions: [1, 0, 0] };\r\n                    this.gameSetup = { seed: t, currentPlayer: s, level: n, gameIndex: o };\r\n                    this.root = e;\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.002) }));\r\n                    this.ui = i.createUI(this.scene);\r\n                    this.player1 = i.createPlayerAnswer(this.scene, { player: 1 });\r\n                    this.player2 = i.createPlayerAnswer(this.scene, { player: 2 });\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    void 0;\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    this.onClickAnswer = this.onClickAnswer.bind(this);\r\n                    this.answers = [0, 1, 2].map(function (e) { return d(_this.scene, e, _this.onClickAnswer); });\r\n                    engine.addSystem(this);\r\n                    s || (this.state.blocked = 1);\r\n                }\r\n                f.prototype.onClickAnswer = function (e) { if (this.state.blocked || !this.state.started)\r\n                    return; this.state.blocked = 1; a.playOnce(\"swing\"); var t = !!this.state.answerPositions[e]; void 0; var n = this[\"player\" + this.gameSetup.currentPlayer]; n.show(); n.wrapperEntity.getComponent(Transform).position.set((0 === e ? -2 : 1 === e ? 0 : 2) + (1 === this.gameSetup.currentPlayer ? -.5 : .5), 2, -.002); n.setSprite(t); var i = l.getTimeSinceStart(0 === this.state.round ? this.state.startTime : this.state.lastRoundStartTime), r = t ? i : 999999999 - i; this.callbacks.onShareState({ player: this.gameSetup.currentPlayer, isWinner: t, answerIndex: e, time: r, timeSinceStart: i, round: this.state.round }); this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: i }); if (this.state.round < p - 1) {\r\n                    this.callbacks.onFinishRound({ player: this.gameSetup.currentPlayer, time: r, roundIndex: this.state.round, gameIndex: this.gameSetup.gameIndex, isWinner: t });\r\n                    this.state.waitingRound = 1;\r\n                }\r\n                else\r\n                    this.callbacks.onFinish({ player: this.gameSetup.currentPlayer, time: r, roundIndex: this.state.round, gameIndex: this.gameSetup.gameIndex, isWinner: t }); };\r\n                f.prototype.init = function () { u.updateTextPanel({ value: \"Which is different?\", color: Color3.Black() }); a.playLoop(\"money\", { volume: .5 }); this.state.initialized = 1; c.updateSpritePanel({ uvs: o.getSpriteUv(9, 0, 192, 128) }); c.showSpritePanel(); this.scene.setParent(this.root); };\r\n                f.prototype.setStartTime = function (e) { void 0; this.state.startTime = e; };\r\n                f.prototype.setRoundStartTime = function (e) { this.state.roundStartTime = e; };\r\n                f.prototype.finish = function (e) { var t = e.winner, n = 1 === t ? 2 : 1; this.state.blocked = 1; t === this.gameSetup.currentPlayer ? a.playOnce(\"wow\") : a.playOnce(\"fail\"); };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.blocked = 1;\r\n                    this.state[\"score\" + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state[\"score\" + e] });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    e === this.gameSetup.currentPlayer ? a.playOnce(\"wow\") : a.playOnce(\"fail\");\r\n                    this.state.waitingRound = 1;\r\n                };\r\n                f.prototype.reproduceRound = function () {\r\n                    var _this = this;\r\n                    this.gameSetup.currentPlayer && (this.state.blocked = 0);\r\n                    this.ui.hideTime();\r\n                    u.updateTextPanel({ value: \"Which is different?\", color: Color3.Black() });\r\n                    this.state.equalSpriteIndex = this.getRandomIntExcept(1, 9);\r\n                    this.state.differentSpriteIndex = this.getRandomIntExcept(1, 9, [this.state.equalSpriteIndex]);\r\n                    void 0;\r\n                    this.state.answerPositions = m([1, 0, 0], this.randomizer.random);\r\n                    this.state.answerPositions.forEach(function (e, t) { e ? _this.answers[t].setIndex(_this.state.differentSpriteIndex) : _this.answers[t].setIndex(_this.state.equalSpriteIndex); });\r\n                };\r\n                f.prototype.start = function () { void 0; this.state.started = 1; this.reproduceRound(); };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    this.player1.hide();\r\n                    this.player2.hide();\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    this.answers.forEach(function (e) { return e.hide(); });\r\n                    setTimeout(function () { _this.reproduceRound(); }, 500);\r\n                };\r\n                f.prototype.block = function () { this.state.blocked = 1; };\r\n                f.prototype.update = function (e) { this.state.initialized && (!this.state.waitingRound && !this.state.started && Date.now() >= this.state.startTime ? this.start() : this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime && this.startRound()); };\r\n                f.prototype.shareState = function (_a) {\r\n                    var e = _a.player, t = _a.answerIndex, n = _a.isWinner, i = _a.timeSinceStart, r = _a.round;\r\n                    this.ui.updateTime({ player: e, time: i });\r\n                    var s = this[\"player\" + e], o = t;\r\n                    s.setSprite(n);\r\n                    s.show();\r\n                    s.wrapperEntity.getComponent(Transform).position.set((0 === o ? -2 : 1 === o ? 0 : 2) + (1 === e ? -.5 : .5), 2, -.002);\r\n                };\r\n                f.prototype.destroy = function () { a.stopSound(\"money\"); c.hideSpritePanel(); this.scene.setParent(null); engine.removeEntity(this.scene); };\r\n                f.prototype.onFinish = function (e) { this.callbacks.onFinish = e; };\r\n                f.prototype.onFinishRound = function (e) { this.callbacks.onFinishRound = e; };\r\n                f.prototype.onShareState = function (e) { this.callbacks.onShareState = e; };\r\n                f.prototype.getRandomIntExcept = function (e, t, n) { var i = e + Math.floor(this.randomizer.random() * (t + 1 - e)); if (!n)\r\n                    return i; for (; ~n.indexOf(i);)\r\n                    i = e + Math.floor(this.randomizer.random() * (t + 1 - e)); return i; };\r\n                return f;\r\n            }());  t.DifferentGame = f; f.id = \"Different\"; f.instructions = \"Different\\nClick the image that is different\"; function m(e, t) { for (var n = e.length, i, r; 0 !== n;) {\r\n            r = Math.floor(t() * n);\r\n            i = e[n -= 1];\r\n            e[n] = e[r];\r\n            e[r] = i;\r\n        } return e; } }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.FroggerGame = void 0; var i = n(73), r = n(3), s = n(4), o = n(2), a = n(6), c = { UP: ActionButton.POINTER, LEFT: ActionButton.PRIMARY, RIGHT: ActionButton.SECONDARY };\r\n            var u = /** @class */ (function () {\r\n                function u(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.seed, n = _a.currentPlayer, _b = _a.level, o = _b === void 0 ? 1 : _b, a = _a.gameIndex;\r\n                    this.callbacks = { onFinish: null, onShareState: null };\r\n                    this.state = { blocked: 0, started: 0, initialized: 0, startTime: Number.MAX_VALUE, finished: 0 };\r\n                    this.root = e;\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.001) }));\r\n                    this.ui = s.createUI(this.scene);\r\n                    this.gameSetup = { seed: t, currentPlayer: n, level: o, gameIndex: a };\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    this.screen1 = i.createScreen(this.scene, { player: 1, seed: t });\r\n                    this.screen2 = i.createScreen(this.scene, { player: 2, seed: t });\r\n                    this.roundResult1 = s.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = s.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    n && this[\"screen\" + n].onStateChange(function (e) { _this.ui.updateScore({ score: e.score, player: n }); var _a = e.frogPosition, t = _a.x, i = _a.y, r = _a.z; _this.callbacks.onShareState(Object.assign(Object.assign({}, e), { player: n, frogPosition: { x: t, y: i, z: r }, takenSammiches: e.takenSammiches })); void 0; if (5 === e.score && !_this.state.finished) {\r\n                        var e_20 = Date.now() - _this.state.startTime;\r\n                        _this.block();\r\n                        n && _this[\"screen\" + n].block();\r\n                        _this.state.finished = 1;\r\n                        _this.callbacks.onFinish({ isWinner: 1, time: e_20, player: n, gameIndex: _this.gameSetup.gameIndex, roundIndex: 0 });\r\n                    } });\r\n                    engine.addSystem(this);\r\n                    this.up = this.up.bind(this);\r\n                    this.left = this.left.bind(this);\r\n                    this.right = this.right.bind(this);\r\n                }\r\n                u.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                u.prototype.getPlayerScreen = function (e) { return this[\"screen\" + e]; };\r\n                u.prototype.init = function () { this.state.initialized = 1; this.scene.setParent(this.root); o.playLoop(\"race\", { volume: .5 }); };\r\n                u.prototype.start = function () { void 0; this.state.started = 1; if (this.gameSetup.currentPlayer) {\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.UP, 0, this.up);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.LEFT, 0, this.left);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.RIGHT, 0, this.right);\r\n                } };\r\n                u.prototype.up = function () { var e; this.state.started && !this.state.blocked && (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) || void 0 === e ? void 0 : e.up()); };\r\n                u.prototype.left = function () { var e; this.state.started && !this.state.blocked && (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) || void 0 === e ? void 0 : e.left()); };\r\n                u.prototype.right = function () { var e; this.state.started && !this.state.blocked && (null === (e = this.getPlayerScreen(this.gameSetup.currentPlayer)) || void 0 === e ? void 0 : e.right()); };\r\n                u.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (!this.state.started && Date.now() - 4e3 >= this.state.startTime)\r\n                        this.start();\r\n                    else {\r\n                        this.state.started && this.getPlayerScreen(1).updateScreen(e, 1 === this.gameSetup.currentPlayer);\r\n                        this.state.started && this.getPlayerScreen(2).updateScreen(e, 2 === this.gameSetup.currentPlayer);\r\n                    } };\r\n                u.prototype.block = function () { this.state.blocked = 1; this.gameSetup.currentPlayer && this[\"screen\" + this.gameSetup.currentPlayer].block(); };\r\n                u.prototype.destroy = function () { void 0; o.stopSound(\"race\"); a.updateTextPanel({ value: \"\" }); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.UP, this.up); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.LEFT, this.left); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.RIGHT, this.right); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); };\r\n                u.prototype.shareState = function (_a) {\r\n                    var e = _a.score, t = _a.player, n = _a.frogPosition, i = _a.takenSammiches;\r\n                    void 0;\r\n                    var _b = n || {}, r = _b.x, s = _b.y, o = _b.z;\r\n                    this.ui.updateScore({ score: e, player: t });\r\n                    this[\"screen\" + t].setFrogPosition(r, s, o);\r\n                    this[\"screen\" + t].setTakenSammiches(i);\r\n                };\r\n                u.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                u.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                u.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                return u;\r\n            }());  t.FroggerGame = u; u.id = \"Frogger\"; u.instructions = \"cross the roads and\\ntake all sammiches\\npressing E F and CLICK\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.InvadersGame = void 0; var i = n(2), r = n(3), s = n(4), o = n(75), a = n(6), c = { CLICK: ActionButton.POINTER, LEFT: ActionButton.PRIMARY, RIGHT: ActionButton.SECONDARY }, u = 8e4;\r\n            var l = /** @class */ (function () {\r\n                function l(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.seed, n = _a.level, i = _a.currentPlayer, a = _a.gameIndex;\r\n                    this.state = { blocked: 0, started: 0, initialized: 0, startTime: Number.MAX_VALUE, finished: 0 };\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.root = e;\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.001) }));\r\n                    this.gameSetup = { seed: t, currentPlayer: i, level: n, gameIndex: a };\r\n                    this.randomizer = r.seedGen.create(t.toString());\r\n                    this.screen1 = o.createScreen(this.scene, { player: 1, seed: t });\r\n                    this.screen2 = o.createScreen(this.scene, { player: 2, seed: t });\r\n                    this.ui = s.createUI(this.scene);\r\n                    this.roundResult1 = s.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = s.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    i && (this.unsubscribeStateChange = this[\"screen\" + i].onStateChange(function (e) { _this.ui.updateScore({ score: e.score, player: i }); var _a = e.position, t = _a.x, n = _a.y, r = _a.z; _this.callbacks.onShareState(Object.assign(Object.assign({}, e), { player: i, position: { x: t, y: n, z: r } })); }));\r\n                    engine.addSystem(this);\r\n                    this.click = this.click.bind(this);\r\n                    this.left = this.left.bind(this);\r\n                    this.right = this.right.bind(this);\r\n                    this.clickUp = this.clickUp.bind(this);\r\n                    this.leftUp = this.leftUp.bind(this);\r\n                    this.rightUp = this.rightUp.bind(this);\r\n                }\r\n                l.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                l.prototype.getPlayerScreen = function (e) { return this[\"screen\" + e]; };\r\n                l.prototype.init = function () { this.state.initialized = 1; this.scene.setParent(this.root); };\r\n                l.prototype.start = function () { void 0; this.state.started = 1; i.playLoop(\"music1\"); if (this.gameSetup.currentPlayer) {\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.CLICK, 0, this.click);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.LEFT, 0, this.left);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", c.RIGHT, 0, this.right);\r\n                    Input.instance.subscribe(\"BUTTON_UP\", c.CLICK, 0, this.clickUp);\r\n                    Input.instance.subscribe(\"BUTTON_UP\", c.LEFT, 0, this.leftUp);\r\n                    Input.instance.subscribe(\"BUTTON_UP\", c.RIGHT, 0, this.rightUp);\r\n                } };\r\n                l.prototype.click = function () { if (this.state.started && !this.state.blocked && this.gameSetup.currentPlayer) {\r\n                    this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.click = 1;\r\n                    this.getPlayerScreen(this.gameSetup.currentPlayer).shoot();\r\n                } };\r\n                l.prototype.left = function () { this.state.started && !this.state.blocked && this.gameSetup.currentPlayer && (this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.e = 1); };\r\n                l.prototype.right = function () { this.state.started && !this.state.blocked && this.gameSetup.currentPlayer && (this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.f = 1); };\r\n                l.prototype.clickUp = function () { this.state.started && !this.state.blocked && this.gameSetup.currentPlayer && (this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.click = 0); };\r\n                l.prototype.leftUp = function () { this.state.started && !this.state.blocked && this.gameSetup.currentPlayer && (this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.e = 0); };\r\n                l.prototype.rightUp = function () { this.state.started && !this.state.blocked && this.gameSetup.currentPlayer && (this.getPlayerScreen(this.gameSetup.currentPlayer).getScreenState().keyPressed.f = 0); };\r\n                l.prototype.update = function (e) { if (!this.state.initialized || this.state.finished)\r\n                    return; if (!this.state.started && Date.now() - 4e3 >= this.state.startTime) {\r\n                    this.start();\r\n                    return;\r\n                } var t = Date.now() - this.state.startTime, n = 1e3 * Math.floor(t / 1e3); if (this.state.started) {\r\n                    this.getPlayerScreen(1).updateScreen(e, 1 === this.gameSetup.currentPlayer);\r\n                    this.getPlayerScreen(2).updateScreen(e, 2 === this.gameSetup.currentPlayer);\r\n                    this.ui.updateTime({ player: 1, time: n });\r\n                    this.ui.updateTime({ player: 2, time: n });\r\n                } if (this.state.started && t > u) {\r\n                    void 0;\r\n                    this.state.finished = 1;\r\n                    this.callbacks.onFinish({ isWinner: 1, time: t, score: this[\"screen\" + this.gameSetup.currentPlayer].getScreenState().score, player: this.gameSetup.currentPlayer, gameIndex: this.gameSetup.gameIndex, roundIndex: 0 });\r\n                } };\r\n                l.prototype.block = function () { this.state.blocked = 1; this.gameSetup.currentPlayer && this[\"screen\" + this.gameSetup.currentPlayer].block(); };\r\n                l.prototype.destroy = function () { this.unsubscribeStateChange && this.unsubscribeStateChange(); this.unsubscribeStateChange = null; i.stopSound(\"race\"); a.updateTextPanel({ value: \"\" }); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.CLICK, this.click); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.LEFT, this.left); Input.instance.unsubscribe(\"BUTTON_DOWN\", c.RIGHT, this.right); Input.instance.unsubscribe(\"BUTTON_UP\", c.CLICK, this.clickUp); Input.instance.unsubscribe(\"BUTTON_UP\", c.LEFT, this.leftUp); Input.instance.unsubscribe(\"BUTTON_UP\", c.RIGHT, this.rightUp); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); };\r\n                l.prototype.shareState = function (_a) {\r\n                    var e = _a.score, t = _a.player, n = _a.position;\r\n                    var _b = n || {}, i = _b.x, r = _b.y, s = _b.z;\r\n                    this.ui.updateScore({ score: e, player: t });\r\n                    this[\"screen\" + t].setPosition(i, r, s);\r\n                };\r\n                l.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    i.stopSound(\"music1\");\r\n                    void 0;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                l.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                l.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                return l;\r\n            }());  t.InvadersGame = l; l.id = \"Invaders\"; l.instructions = \"Beat as much invaders as possible\\nE/F move sides, CLICK shoots.\"; }, function (e, t) { function n(e, t) { t.headers = e.headers || {}; t.statusMessage = e.statusText; t.statusCode = e.status; t.data = e.response; } t.send = function (e, t, i) { return new Promise((function (r, s) { i = i || {}; var o, a, c, u, l = new XMLHttpRequest, h = i.headers || {}; i.timeout && (l.timeout = i.timeout); l.ontimeout = l.onerror = function (e) { e.timeout = \"timeout\" == e.type; s(e); }; l.open(e, t.href || t); l.onload = function () { u = l.getAllResponseHeaders().trim().split(/[\\r\\n]+/); n(l, l); for (; c = u.shift();) {\r\n            c = c.split(\": \");\r\n            l.headers[c.shift().toLowerCase()] = c.join(\": \");\r\n        } if ((c = l.headers[\"content-type\"]) && ~c.indexOf(\"application/json\"))\r\n            try {\r\n                l.data = JSON.parse(l.data, i.reviver);\r\n            }\r\n            catch (e) {\r\n                n(l, e);\r\n                return s(e);\r\n            } (l.status >= 400 ? s : r)(l); }; if ((a = i.body) && \"object\" == typeof a) {\r\n            h[\"content-type\"] = \"application/json\";\r\n            a = JSON.stringify(a);\r\n        } l.withCredentials = !!i.withCredentials; for (o in h)\r\n            l.setRequestHeader(o, h[o]); l.send(a); })); }; t.get = t.send.bind(t.send, \"GET\"); t.post = t.send.bind(t.send, \"POST\"); t.patch = t.send.bind(t.send, \"PATCH\"); t.del = t.send.bind(t.send, \"DELETE\"); t.put = t.send.bind(t.send, \"PUT\"); }, function (e, t, n) { var i = this && this.__createBinding || (Object.create ? function (e, t, n, i) { void 0 === i && (i = n); Object.defineProperty(e, i, { enumerable: 1, get: function () { return t[n]; } }); } : function (e, t, n, i) { void 0 === i && (i = n); e[i] = t[n]; }), r = this && this.__setModuleDefault || (Object.create ? function (e, t) { Object.defineProperty(e, \"default\", { enumerable: 1, value: t }); } : function (e, t) { e[\"default\"] = t; }), s = this && this.__importStar || function (e) { if (e && e.__esModule)\r\n            return e; var t = {}; if (null != e)\r\n            for (var n in e)\r\n                \"default\" !== n && Object.hasOwnProperty.call(e, n) && i(t, e, n); r(t, e); return t; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Room = void 0; var o = s(n(43)), a = n(83), c = n(84), u = n(85), l = n(44), h = n(45), d = s(n(46)), p = s(n(47)), f = function () { function e(e, t) { var n = this; this.onStateChange = a.createSignal(); this.onError = a.createSignal(); this.onLeave = a.createSignal(); this.onJoin = a.createSignal(); this.hasJoined = 0; this.onMessageHandlers = c.createNanoEvents(); this.id = null; this.name = e; if (t) {\r\n            this.serializer = new (l.getSerializer(\"schema\"));\r\n            this.rootSchema = t;\r\n            this.serializer.state = new t;\r\n        } this.onError((function (e, t) { })); this.onLeave((function () { return n.removeAllListeners(); })); } e.prototype.connect = function (e) { var t = this; this.connection = new u.Connection(e, 0); this.connection.reconnectEnabled = 0; this.connection.onmessage = this.onMessageCallback.bind(this); this.connection.onclose = function (e) { if (t.hasJoined) {\r\n            t.onLeave.invoke(e.code);\r\n            t.destroy();\r\n        }\r\n        else {\r\n            void 0;\r\n            t.onError.invoke(e.code, e.reason);\r\n        } }; this.connection.onerror = function (e) { void 0; t.onError.invoke(e.code, e.reason); }; this.connection.open(); }; e.prototype.leave = function (e) { void 0 === e && (e = 1); this.connection ? e ? this.connection.send([h.Protocol.LEAVE_ROOM]) : this.connection.close() : this.onLeave.invoke(4e3); }; e.prototype.onMessage = function (e, t) { return this.onMessageHandlers.on(this.getMessageHandlerKey(e), t); }; e.prototype.send = function (e, t) { var n = [h.Protocol.ROOM_DATA], i; \"string\" == typeof e ? d.string(n, e) : d.number(n, e); if (void 0 !== t) {\r\n            var r = o.encode(t);\r\n            (i = new Uint8Array(n.length + r.byteLength)).set(new Uint8Array(n), 0);\r\n            i.set(new Uint8Array(r), n.length);\r\n        }\r\n        else\r\n            i = new Uint8Array(n); this.connection.send(i.buffer); }; Object.defineProperty(e.prototype, \"state\", { get: function () { return this.serializer.getState(); }, enumerable: 0, configurable: 1 }); e.prototype.listen = function (e, t, n) { if (\"schema\" !== this.serializerId) {\r\n            this.serializerId;\r\n            return this.serializer.api.listen(e, t, n);\r\n        } void 0; }; e.prototype.removeListener = function (e) { return this.serializer.api.removeListener(e); }; e.prototype.removeAllListeners = function () { this.onJoin.clear(); this.onStateChange.clear(); this.onError.clear(); this.onLeave.clear(); this.onMessageHandlers.events = {}; }; e.prototype.onMessageCallback = function (e) { var t = Array.from(new Uint8Array(e.data)), n = t[0]; if (n === h.Protocol.JOIN_ROOM) {\r\n            var i = 1;\r\n            this.serializerId = h.utf8Read(t, i);\r\n            i += h.utf8Length(this.serializerId);\r\n            if (!this.serializer) {\r\n                var r = l.getSerializer(this.serializerId);\r\n                this.serializer = new r;\r\n            }\r\n            t.length > i && this.serializer.handshake && this.serializer.handshake(t, { offset: i });\r\n            this.hasJoined = 1;\r\n            this.onJoin.invoke();\r\n            this.connection.send([h.Protocol.JOIN_ROOM]);\r\n        }\r\n        else if (n === h.Protocol.ERROR) {\r\n            var s = { offset: 1 }, a = p.number(t, s), c = p.string(t, s);\r\n            this.onError.invoke(a, c);\r\n        }\r\n        else if (n === h.Protocol.LEAVE_ROOM)\r\n            this.leave();\r\n        else if (n === h.Protocol.ROOM_DATA_SCHEMA) {\r\n            var u = { offset: 1 }, d, f, c;\r\n            (c = new (f = this.serializer.getState().constructor._context.get(p.number(t, u)))).decode(t, u);\r\n            this.dispatchMessage(f, c);\r\n        }\r\n        else if (n === h.Protocol.ROOM_STATE) {\r\n            t.shift();\r\n            this.setState(t);\r\n        }\r\n        else if (n === h.Protocol.ROOM_STATE_PATCH) {\r\n            t.shift();\r\n            this.patch(t);\r\n        }\r\n        else if (n === h.Protocol.ROOM_DATA) {\r\n            var m = { offset: 1 }, f = p.stringCheck(t, m) ? p.string(t, m) : p.number(t, m), c = t.length > m.offset ? o.decode(e.data, m.offset) : void 0;\r\n            this.dispatchMessage(f, c);\r\n        } }; e.prototype.setState = function (e) { this.serializer.setState(e); this.onStateChange.invoke(this.serializer.getState()); }; e.prototype.patch = function (e) { this.serializer.patch(e); this.onStateChange.invoke(this.serializer.getState()); }; e.prototype.dispatchMessage = function (e, t) { var n = this.getMessageHandlerKey(e); this.onMessageHandlers.events[n] ? this.onMessageHandlers.emit(n, t) : this.onMessageHandlers.events[\"*\"] ? this.onMessageHandlers.emit(\"*\", e, t) : void 0; }; e.prototype.destroy = function () { this.serializer && this.serializer.teardown(); }; e.prototype.getMessageHandlerKey = function (e) { switch (typeof e) {\r\n            case \"function\": return \"$\" + e._typeid;\r\n            case \"string\": return e;\r\n            case \"number\": return \"i\" + e;\r\n            default: throw new Error(\"invalid message type.\");\r\n        } }; return e; }(); t.Room = f; }, function (e, t, n) { var i = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e }; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.encode = t.decode = void 0; var r = i(n(81)), s = i(n(82)); t.decode = r.default; t.encode = s.default; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getSerializer = t.registerSerializer = void 0; var i = {}; function r(e, t) { i[e] = t; } t.registerSerializer = r; function s(e) { var t = i[e]; if (!t)\r\n            throw new Error(\"missing serializer: \" + e); return t; } t.getSerializer = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.utf8Length = t.utf8Read = t.ErrorCode = t.Protocol = void 0; var i, r; (function (e) { e[e[\"HANDSHAKE\"] = 9] = \"HANDSHAKE\"; e[e[\"JOIN_ROOM\"] = 10] = \"JOIN_ROOM\"; e[e[\"ERROR\"] = 11] = \"ERROR\"; e[e[\"LEAVE_ROOM\"] = 12] = \"LEAVE_ROOM\"; e[e[\"ROOM_DATA\"] = 13] = \"ROOM_DATA\"; e[e[\"ROOM_STATE\"] = 14] = \"ROOM_STATE\"; e[e[\"ROOM_STATE_PATCH\"] = 15] = \"ROOM_STATE_PATCH\"; e[e[\"ROOM_DATA_SCHEMA\"] = 16] = \"ROOM_DATA_SCHEMA\"; })(i = t.Protocol || (t.Protocol = {})); (function (e) { e[e[\"MATCHMAKE_NO_HANDLER\"] = 4210] = \"MATCHMAKE_NO_HANDLER\"; e[e[\"MATCHMAKE_INVALID_CRITERIA\"] = 4211] = \"MATCHMAKE_INVALID_CRITERIA\"; e[e[\"MATCHMAKE_INVALID_ROOM_ID\"] = 4212] = \"MATCHMAKE_INVALID_ROOM_ID\"; e[e[\"MATCHMAKE_UNHANDLED\"] = 4213] = \"MATCHMAKE_UNHANDLED\"; e[e[\"MATCHMAKE_EXPIRED\"] = 4214] = \"MATCHMAKE_EXPIRED\"; e[e[\"AUTH_FAILED\"] = 4215] = \"AUTH_FAILED\"; e[e[\"APPLICATION_ERROR\"] = 4216] = \"APPLICATION_ERROR\"; })(r = t.ErrorCode || (t.ErrorCode = {})); function s(e, t) { for (var n = e[t++], i = \"\", r = 0, s = t, o = t + n; s < o; s++) {\r\n            var a = e[s];\r\n            if (0 != (128 & a))\r\n                if (192 != (224 & a))\r\n                    if (224 != (240 & a)) {\r\n                        if (240 != (248 & a))\r\n                            throw new Error(\"Invalid byte \" + a.toString(16));\r\n                        if ((r = (7 & a) << 18 | (63 & e[++s]) << 12 | (63 & e[++s]) << 6 | (63 & e[++s]) << 0) >= 65536) {\r\n                            r -= 65536;\r\n                            i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                        }\r\n                        else\r\n                            i += String.fromCharCode(r);\r\n                    }\r\n                    else\r\n                        i += String.fromCharCode((15 & a) << 12 | (63 & e[++s]) << 6 | (63 & e[++s]) << 0);\r\n                else\r\n                    i += String.fromCharCode((31 & a) << 6 | 63 & e[++s]);\r\n            else\r\n                i += String.fromCharCode(a);\r\n        } return i; } t.utf8Read = s; function o(e) { void 0 === e && (e = \"\"); for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n            if ((t = e.charCodeAt(i)) < 128)\r\n                n += 1;\r\n            else if (t < 2048)\r\n                n += 2;\r\n            else if (t < 55296 || t >= 57344)\r\n                n += 3;\r\n            else {\r\n                i++;\r\n                n += 4;\r\n            } return n + 1; } t.utf8Length = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.number = t.string = t.boolean = t.writeFloat64 = t.writeFloat32 = t.float64 = t.float32 = t.uint64 = t.int64 = t.uint32 = t.int32 = t.uint16 = t.int16 = t.uint8 = t.int8 = t.utf8Write = void 0; function i(e) { for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n            if ((t = e.charCodeAt(i)) < 128)\r\n                n += 1;\r\n            else if (t < 2048)\r\n                n += 2;\r\n            else if (t < 55296 || t >= 57344)\r\n                n += 3;\r\n            else {\r\n                i++;\r\n                n += 4;\r\n            } return n; } function r(e, t, n) { for (var i = 0, r = 0, s = n.length; r < s; r++)\r\n            if ((i = n.charCodeAt(r)) < 128)\r\n                e[t++] = i;\r\n            else if (i < 2048) {\r\n                e[t++] = 192 | i >> 6;\r\n                e[t++] = 128 | 63 & i;\r\n            }\r\n            else if (i < 55296 || i >= 57344) {\r\n                e[t++] = 224 | i >> 12;\r\n                e[t++] = 128 | i >> 6 & 63;\r\n                e[t++] = 128 | 63 & i;\r\n            }\r\n            else {\r\n                r++;\r\n                i = 65536 + ((1023 & i) << 10 | 1023 & n.charCodeAt(r));\r\n                e[t++] = 240 | i >> 18;\r\n                e[t++] = 128 | i >> 12 & 63;\r\n                e[t++] = 128 | i >> 6 & 63;\r\n                e[t++] = 128 | 63 & i;\r\n            } } t.utf8Write = r; function s(e, t) { e.push(255 & t); } t.int8 = s; function o(e, t) { e.push(255 & t); } t.uint8 = o; function a(e, t) { e.push(255 & t); e.push(t >> 8 & 255); } t.int16 = a; function c(e, t) { e.push(255 & t); e.push(t >> 8 & 255); } t.uint16 = c; function u(e, t) { e.push(255 & t); e.push(t >> 8 & 255); e.push(t >> 16 & 255); e.push(t >> 24 & 255); } t.int32 = u; function l(e, t) { var n = t >> 24, i = t >> 16, r = t >> 8, s = t; e.push(255 & s); e.push(255 & r); e.push(255 & i); e.push(255 & n); } t.uint32 = l; function h(e, t) { var n = Math.floor(t / Math.pow(2, 32)), i; l(e, t >>> 0); l(e, n); } t.int64 = h; function d(e, t) { var n = t / Math.pow(2, 32) >> 0, i; l(e, t >>> 0); l(e, n); } t.uint64 = d; function p(e, t) { S(e, t); } t.float32 = p; function f(e, t) { b(e, t); } t.float64 = f; var m = 1, g = new Int32Array(2), y = new Float32Array(g.buffer), v = new Float64Array(g.buffer); function S(e, t) { y[0] = t; u(e, g[0]); } t.writeFloat32 = S; function b(e, t) { v[0] = t; u(e, g[m ? 0 : 1]); u(e, g[m ? 1 : 0]); } t.writeFloat64 = b; function w(e, t) { return o(e, t ? 1 : 0); } t.boolean = w; function T(e, t) { t || (t = \"\"); var n = i(t), s = 0; if (n < 32) {\r\n            e.push(160 | n);\r\n            s = 1;\r\n        }\r\n        else if (n < 256) {\r\n            e.push(217);\r\n            o(e, n);\r\n            s = 2;\r\n        }\r\n        else if (n < 65536) {\r\n            e.push(218);\r\n            c(e, n);\r\n            s = 3;\r\n        }\r\n        else {\r\n            if (!(n < 4294967296))\r\n                throw new Error(\"String too long\");\r\n            e.push(219);\r\n            l(e, n);\r\n            s = 5;\r\n        } r(e, e.length, t); return s + n; } t.string = T; function C(e, t) { if (isNaN(t))\r\n            return C(e, 0); if (!isFinite(t))\r\n            return C(e, t > 0 ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER); if (t !== (0 | t)) {\r\n            e.push(203);\r\n            b(e, t);\r\n            return 9;\r\n        } if (t >= 0) {\r\n            if (t < 128) {\r\n                o(e, t);\r\n                return 1;\r\n            }\r\n            if (t < 256) {\r\n                e.push(204);\r\n                o(e, t);\r\n                return 2;\r\n            }\r\n            if (t < 65536) {\r\n                e.push(205);\r\n                c(e, t);\r\n                return 3;\r\n            }\r\n            if (t < 4294967296) {\r\n                e.push(206);\r\n                l(e, t);\r\n                return 5;\r\n            }\r\n            e.push(207);\r\n            d(e, t);\r\n            return 9;\r\n        } if (t >= -32) {\r\n            e.push(224 | t + 32);\r\n            return 1;\r\n        } if (t >= -128) {\r\n            e.push(208);\r\n            s(e, t);\r\n            return 2;\r\n        } if (t >= -32768) {\r\n            e.push(209);\r\n            a(e, t);\r\n            return 3;\r\n        } if (t >= -2147483648) {\r\n            e.push(210);\r\n            u(e, t);\r\n            return 5;\r\n        } e.push(211); h(e, t); return 9; } t.number = C; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.switchStructureCheck = t.arrayCheck = t.numberCheck = t.number = t.stringCheck = t.string = t.boolean = t.readFloat64 = t.readFloat32 = t.uint64 = t.int64 = t.float64 = t.float32 = t.uint32 = t.int32 = t.uint16 = t.int16 = t.uint8 = t.int8 = void 0; var i = n(7); function r(e, t, n) { for (var i = \"\", r = 0, s = t, o = t + n; s < o; s++) {\r\n            var a = e[s];\r\n            if (0 != (128 & a))\r\n                if (192 != (224 & a))\r\n                    if (224 != (240 & a))\r\n                        if (240 != (248 & a))\r\n                            void 0;\r\n                        else if ((r = (7 & a) << 18 | (63 & e[++s]) << 12 | (63 & e[++s]) << 6 | (63 & e[++s]) << 0) >= 65536) {\r\n                            r -= 65536;\r\n                            i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                        }\r\n                        else\r\n                            i += String.fromCharCode(r);\r\n                    else\r\n                        i += String.fromCharCode((15 & a) << 12 | (63 & e[++s]) << 6 | (63 & e[++s]) << 0);\r\n                else\r\n                    i += String.fromCharCode((31 & a) << 6 | 63 & e[++s]);\r\n            else\r\n                i += String.fromCharCode(a);\r\n        } return i; } function s(e, t) { return o(e, t) << 24 >> 24; } t.int8 = s; function o(e, t) { return e[t.offset++]; } t.uint8 = o; function a(e, t) { return c(e, t) << 16 >> 16; } t.int16 = a; function c(e, t) { return e[t.offset++] | e[t.offset++] << 8; } t.uint16 = c; function u(e, t) { return e[t.offset++] | e[t.offset++] << 8 | e[t.offset++] << 16 | e[t.offset++] << 24; } t.int32 = u; function l(e, t) { return u(e, t) >>> 0; } t.uint32 = l; function h(e, t) { return S(e, t); } t.float32 = h; function d(e, t) { return b(e, t); } t.float64 = d; function p(e, t) { var n = l(e, t), i; return u(e, t) * Math.pow(2, 32) + n; } t.int64 = p; function f(e, t) { var n = l(e, t), i; return l(e, t) * Math.pow(2, 32) + n; } t.uint64 = f; var m = 1, g = new Int32Array(2), y = new Float32Array(g.buffer), v = new Float64Array(g.buffer); function S(e, t) { g[0] = u(e, t); return y[0]; } t.readFloat32 = S; function b(e, t) { g[m ? 0 : 1] = u(e, t); g[m ? 1 : 0] = u(e, t); return v[0]; } t.readFloat64 = b; function w(e, t) { return o(e, t) > 0; } t.boolean = w; function T(e, t) { var n = e[t.offset++], i; n < 192 ? i = 31 & n : 217 === n ? i = o(e, t) : 218 === n ? i = c(e, t) : 219 === n && (i = l(e, t)); var s = r(e, t.offset, i); t.offset += i; return s; } t.string = T; function C(e, t) { var n = e[t.offset]; return n < 192 && n > 160 || 217 === n || 218 === n || 219 === n; } t.stringCheck = C; function _(e, t) { var n = e[t.offset++]; return n < 128 ? n : 202 === n ? S(e, t) : 203 === n ? b(e, t) : 204 === n ? o(e, t) : 205 === n ? c(e, t) : 206 === n ? l(e, t) : 207 === n ? f(e, t) : 208 === n ? s(e, t) : 209 === n ? a(e, t) : 210 === n ? u(e, t) : 211 === n ? p(e, t) : n > 223 ? -1 * (255 - n + 1) : void 0; } t.number = _; function P(e, t) { var n = e[t.offset]; return n < 128 || n >= 202 && n <= 211; } t.numberCheck = P; function E(e, t) { return e[t.offset] < 160; } t.arrayCheck = E; function I(e, t) { return e[t.offset - 1] === i.SWITCH_TO_STRUCTURE && (e[t.offset] < 128 || e[t.offset] >= 202 && e[t.offset] <= 211); } t.switchStructureCheck = I; }, function (e, t, n) { var i = this && this.__createBinding || (Object.create ? function (e, t, n, i) { void 0 === i && (i = n); Object.defineProperty(e, i, { enumerable: 1, get: function () { return t[n]; } }); } : function (e, t, n, i) { void 0 === i && (i = n); e[i] = t[n]; }), r = this && this.__setModuleDefault || (Object.create ? function (e, t) { Object.defineProperty(e, \"default\", { enumerable: 1, value: t }); } : function (e, t) { e[\"default\"] = t; }), s = this && this.__importStar || function (e) { if (e && e.__esModule)\r\n            return e; var t = {}; if (null != e)\r\n            for (var n in e)\r\n                \"default\" !== n && Object.hasOwnProperty.call(e, n) && i(t, e, n); r(t, e); return t; }, o = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }, a = this && this.__generator || function (e, t) { var n = { label: 0, sent: function () { if (1 & s[0])\r\n                throw s[1]; return s[1]; }, trys: [], ops: [] }, i, r, s, o; return o = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () { return this; }), o; function a(e) { return function (t) { return c([e, t]); }; } function c(o) { if (i)\r\n            throw new TypeError(\"Generator is already executing.\"); for (; n;)\r\n            try {\r\n                if (i = 1, r && (s = 2 & o[0] ? r[\"return\"] : o[0] ? r[\"throw\"] || ((s = r[\"return\"]) && s.call(r), 0) : r.next) && !(s = s.call(r, o[1])).done)\r\n                    return s;\r\n                (r = 0, s) && (o = [2 & o[0], s.value]);\r\n                switch (o[0]) {\r\n                    case 0:\r\n                    case 1:\r\n                        s = o;\r\n                        break;\r\n                    case 4:\r\n                        n.label++;\r\n                        return { value: o[1], done: 0 };\r\n                    case 5:\r\n                        n.label++;\r\n                        r = o[1];\r\n                        o = [0];\r\n                        continue;\r\n                    case 7:\r\n                        o = n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                    default:\r\n                        if (!(s = n.trys, s = s.length > 0 && s[s.length - 1]) && (6 === o[0] || 2 === o[0])) {\r\n                            n = 0;\r\n                            continue;\r\n                        }\r\n                        if (3 === o[0] && (!s || o[1] > s[0] && o[1] < s[3])) {\r\n                            n.label = o[1];\r\n                            break;\r\n                        }\r\n                        if (6 === o[0] && n.label < s[1]) {\r\n                            n.label = s[1];\r\n                            s = o;\r\n                            break;\r\n                        }\r\n                        if (s && n.label < s[2]) {\r\n                            n.label = s[2];\r\n                            n.ops.push(o);\r\n                            break;\r\n                        }\r\n                        s[2] && n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                }\r\n                o = t.call(e, n);\r\n            }\r\n            catch (e) {\r\n                o = [6, e];\r\n                r = 0;\r\n            }\r\n            finally {\r\n                i = s = 0;\r\n            } if (5 & o[0])\r\n            throw o[1]; return { value: o[0] ? o[1] : void 0, done: 1 }; } }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Auth = t.Platform = void 0; var c = s(n(41)), u = n(89), l = \"colyseus-auth-token\", h; (function (e) { e[\"ios\"] = \"ios\"; e[\"android\"] = \"android\"; })(h = t.Platform || (t.Platform = {})); var d = function () { function e(e) { var t = this; this._id = void 0; this.username = void 0; this.displayName = void 0; this.avatarUrl = void 0; this.isAnonymous = void 0; this.email = void 0; this.lang = void 0; this.location = void 0; this.timezone = void 0; this.metadata = void 0; this.devices = void 0; this.facebookId = void 0; this.twitterId = void 0; this.googleId = void 0; this.gameCenterId = void 0; this.steamId = void 0; this.friendIds = void 0; this.blockedUserIds = void 0; this.createdAt = void 0; this.updatedAt = void 0; this.token = void 0; this.endpoint = e.replace(\"ws\", \"http\"); u.getItem(l, (function (e) { return t.token = e; })); } Object.defineProperty(e.prototype, \"hasToken\", { get: function () { return !!this.token; }, enumerable: 0, configurable: 1 }); e.prototype.login = function (e) { void 0 === e && (e = {}); return o(this, void 0, void 0, (function () { var t, n, i; return a(this, (function (r) { switch (r.label) {\r\n            case 0:\r\n                t = Object.assign({}, e);\r\n                this.hasToken && (t.token = this.token);\r\n                return [4, this.request(\"post\", \"/auth\", t)];\r\n            case 1:\r\n                n = r.sent();\r\n                this.token = n.token;\r\n                u.setItem(l, this.token);\r\n                for (i in n)\r\n                    this.hasOwnProperty(i) && (this[i] = n[i]);\r\n                this.registerPingService();\r\n                return [2, this];\r\n        } })); })); }; e.prototype.save = function () { return o(this, void 0, void 0, (function () { return a(this, (function (e) { switch (e.label) {\r\n            case 0: return [4, this.request(\"put\", \"/auth\", {}, { username: this.username, displayName: this.displayName, avatarUrl: this.avatarUrl, lang: this.lang, location: this.location, timezone: this.timezone })];\r\n            case 1:\r\n                e.sent();\r\n                return [2, this];\r\n        } })); })); }; e.prototype.getFriends = function () { return o(this, void 0, void 0, (function () { return a(this, (function (e) { switch (e.label) {\r\n            case 0: return [4, this.request(\"get\", \"/friends/all\")];\r\n            case 1: return [2, e.sent()];\r\n        } })); })); }; e.prototype.getOnlineFriends = function () { return o(this, void 0, void 0, (function () { return a(this, (function (e) { switch (e.label) {\r\n            case 0: return [4, this.request(\"get\", \"/friends/online\")];\r\n            case 1: return [2, e.sent()];\r\n        } })); })); }; e.prototype.getFriendRequests = function () { return o(this, void 0, void 0, (function () { return a(this, (function (e) { switch (e.label) {\r\n            case 0: return [4, this.request(\"get\", \"/friends/requests\")];\r\n            case 1: return [2, e.sent()];\r\n        } })); })); }; e.prototype.sendFriendRequest = function (e) { return o(this, void 0, void 0, (function () { return a(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, this.request(\"post\", \"/friends/requests\", { userId: e })];\r\n            case 1: return [2, t.sent()];\r\n        } })); })); }; e.prototype.acceptFriendRequest = function (e) { return o(this, void 0, void 0, (function () { return a(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, this.request(\"put\", \"/friends/requests\", { userId: e })];\r\n            case 1: return [2, t.sent()];\r\n        } })); })); }; e.prototype.declineFriendRequest = function (e) { return o(this, void 0, void 0, (function () { return a(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, this.request(\"del\", \"/friends/requests\", { userId: e })];\r\n            case 1: return [2, t.sent()];\r\n        } })); })); }; e.prototype.blockUser = function (e) { return o(this, void 0, void 0, (function () { return a(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, this.request(\"post\", \"/friends/block\", { userId: e })];\r\n            case 1: return [2, t.sent()];\r\n        } })); })); }; e.prototype.unblockUser = function (e) { return o(this, void 0, void 0, (function () { return a(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, this.request(\"put\", \"/friends/block\", { userId: e })];\r\n            case 1: return [2, t.sent()];\r\n        } })); })); }; e.prototype.request = function (e, t, n, i, r) { void 0 === n && (n = {}); void 0 === r && (r = {}); return o(this, void 0, void 0, (function () { var s, o, u, l; return a(this, (function (a) { switch (a.label) {\r\n            case 0:\r\n                r[\"Accept\"] = \"application/json\";\r\n                this.hasToken && (r[\"Authorization\"] = \"Bearer \" + this.token);\r\n                s = [];\r\n                for (o in n)\r\n                    s.push(o + \"=\" + n[o]);\r\n                u = s.length > 0 ? \"?\" + s.join(\"&\") : \"\";\r\n                l = { headers: r };\r\n                i && (l.body = i);\r\n                return [4, c[e](\"\" + this.endpoint + t + u, l)];\r\n            case 1: return [2, a.sent().data];\r\n        } })); })); }; e.prototype.logout = function () { this.token = void 0; u.removeItem(l); this.unregisterPingService(); }; e.prototype.registerPingService = function (e) { var t = this; void 0 === e && (e = 15e3); this.unregisterPingService(); this.keepOnlineInterval = setInterval((function () { return t.request(\"get\", \"/auth\"); }), e); }; e.prototype.unregisterPingService = function () { clearInterval(this.keepOnlineInterval); }; return e; }(); t.Auth = d; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.CollectionSchema = void 0; var i = n(12), r = n(7), s = n(8), o = function () { function e(e) { var t = this; this.$changes = new i.ChangeTree(this); this.$items = new Map; this.$indexes = new Map; this.$refId = 0; e && e.forEach((function (e) { return t.add(e); })); } e.is = function (e) { return void 0 !== e[\"collection\"]; }; e.prototype.add = function (e) { var t = this.$refId++, n; void 0 !== e[\"$changes\"] && e[\"$changes\"].setParent(this, this.$changes.root, t); this.$changes.indexes[t] = t; this.$indexes.set(t, t); this.$items.set(t, e); this.$changes.change(t); return t; }; e.prototype.at = function (e) { var t = Array.from(this.$items.keys())[e]; return this.$items.get(t); }; e.prototype.entries = function () { return this.$items.entries(); }; e.prototype.delete = function (e) { for (var t = this.$items.entries(), n, i; (i = t.next()) && !i.done;)\r\n            if (e === i.value[1]) {\r\n                n = i.value[0];\r\n                break;\r\n            } if (void 0 === n)\r\n            return 0; this.$changes.delete(n); this.$indexes.delete(n); return this.$items.delete(n); }; e.prototype.clear = function (e) { var t = this; this.$changes.discard(1, 1); this.$changes.indexes = {}; this.$indexes.clear(); e && \"string\" != typeof this.$changes.getType() && this.$items.forEach((function (e) { t.$changes.root.removeRef(e[\"$changes\"].refId); })); this.$items.clear(); this.$changes.operation({ index: 0, op: r.OPERATION.CLEAR }); this.$changes.touchParents(); }; e.prototype.has = function (e) { return Array.from(this.$items.values()).some((function (t) { return t === e; })); }; e.prototype.forEach = function (e) { var t = this; this.$items.forEach((function (n, i, r) { return e(n, i, t); })); }; e.prototype.values = function () { return this.$items.values(); }; Object.defineProperty(e.prototype, \"size\", { get: function () { return this.$items.size; }, enumerable: 0, configurable: 1 }); e.prototype.setIndex = function (e, t) { this.$indexes.set(e, t); }; e.prototype.getIndex = function (e) { return this.$indexes.get(e); }; e.prototype.getByIndex = function (e) { return this.$items.get(this.$indexes.get(e)); }; e.prototype.deleteByIndex = function (e) { var t = this.$indexes.get(e); this.$items.delete(t); this.$indexes.delete(e); }; e.prototype.toArray = function () { return Array.from(this.$items.values()); }; e.prototype.toJSON = function () { var e = []; this.forEach((function (t, n) { e.push(\"function\" == typeof t[\"toJSON\"] ? t[\"toJSON\"]() : t); })); return e; }; e.prototype.clone = function (t) { var n; if (t)\r\n            n = Object.assign(new e, this);\r\n        else {\r\n            var i = new e;\r\n            this.forEach((function (e) { e[\"$changes\"] ? i.add(e[\"clone\"]()) : i.add(e); }));\r\n        } return n; }; e.prototype.triggerAll = function () { s.Schema.prototype.triggerAll.apply(this); }; return e; }(); t.CollectionSchema = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.SetSchema = void 0; var i = n(12), r = n(7), s = n(8), o = function () { function e(e) { var t = this; this.$changes = new i.ChangeTree(this); this.$items = new Map; this.$indexes = new Map; this.$refId = 0; e && e.forEach((function (e) { return t.add(e); })); } e.is = function (e) { return void 0 !== e[\"set\"]; }; e.prototype.add = function (e) { if (this.has(e))\r\n            return 0; var t = this.$refId++, n; void 0 !== e[\"$changes\"] && e[\"$changes\"].setParent(this, this.$changes.root, t); this.$changes.indexes[t] = t; this.$indexes.set(t, t); this.$items.set(t, e); this.$changes.change(t); return t; }; e.prototype.entries = function () { return this.$items.entries(); }; e.prototype.delete = function (e) { for (var t = this.$items.entries(), n, i; (i = t.next()) && !i.done;)\r\n            if (e === i.value[1]) {\r\n                n = i.value[0];\r\n                break;\r\n            } if (void 0 === n)\r\n            return 0; this.$changes.delete(n); this.$indexes.delete(n); return this.$items.delete(n); }; e.prototype.clear = function (e) { var t = this; this.$changes.discard(1, 1); this.$changes.indexes = {}; this.$indexes.clear(); e && \"string\" != typeof this.$changes.getType() && this.$items.forEach((function (e) { t.$changes.root.removeRef(e[\"$changes\"].refId); })); this.$items.clear(); this.$changes.operation({ index: 0, op: r.OPERATION.CLEAR }); this.$changes.touchParents(); }; e.prototype.has = function (e) { for (var t = this.$items.values(), n = 0, i; (i = t.next()) && !i.done;)\r\n            if (e === i.value) {\r\n                n = 1;\r\n                break;\r\n            } return n; }; e.prototype.forEach = function (e) { var t = this; this.$items.forEach((function (n, i, r) { return e(n, i, t); })); }; e.prototype.values = function () { return this.$items.values(); }; Object.defineProperty(e.prototype, \"size\", { get: function () { return this.$items.size; }, enumerable: 0, configurable: 1 }); e.prototype.setIndex = function (e, t) { this.$indexes.set(e, t); }; e.prototype.getIndex = function (e) { return this.$indexes.get(e); }; e.prototype.getByIndex = function (e) { return this.$items.get(this.$indexes.get(e)); }; e.prototype.deleteByIndex = function (e) { var t = this.$indexes.get(e); this.$items.delete(t); this.$indexes.delete(e); }; e.prototype.toArray = function () { return Array.from(this.$items.values()); }; e.prototype.toJSON = function () { var e = []; this.forEach((function (t, n) { e.push(\"function\" == typeof t[\"toJSON\"] ? t[\"toJSON\"]() : t); })); return e; }; e.prototype.clone = function (t) { var n; if (t)\r\n            n = Object.assign(new e, this);\r\n        else {\r\n            var i = new e;\r\n            this.forEach((function (e) { e[\"$changes\"] ? i.add(e[\"clone\"]()) : i.add(e); }));\r\n        } return n; }; e.prototype.triggerAll = function () { s.Schema.prototype.triggerAll.apply(this); }; return e; }(); t.SetSchema = o; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }, r = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e }; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); var s = n(52), o = n(53), a = n(57), c = n(76), u = n(77), l = n(6), h = n(5), d = n(2), p = n(0), f = n(4), m = r(n(25)), g = n(16), y = n(103), v = n(17), S = n(104), b = n(1); engine[\"PRODI\"] = 1; var w = m.default.InvadersGame, T = 2222222231; void 0; var C = function (e, _a) {\r\n            var t = _a.lobbyRoom, n = _a.trackSeed, r = _a.minGames, _b = _a.alreadyStarted, s = _b === void 0 ? 0 : _b;\r\n            return i(void 0, void 0, void 0, (function () { var i; return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        void 0;\r\n                        return [4 /*yield*/, c.createSpectatorTrack(e, { lobbyRoom: t, trackSeed: n, minGames: r, alreadyStarted: s })];\r\n                    case 1:\r\n                        i = _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            }); }));\r\n        }, _ = function (e, _a) {\r\n            var t = _a.gameRoom, n = _a.lobbyRoom, r = _a.user, s = _a.trackSeed, o = _a.player, c = _a.minGames;\r\n            return i(void 0, void 0, void 0, (function () { var i, u; return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, a.createTrack(e, { gameRoom: t, lobbyRoom: n, user: r, trackSeed: s, minGames: c })];\r\n                    case 1:\r\n                        i = _a.sent();\r\n                        i.onScore(function () {\r\n                            var e = [];\r\n                            for (var _i = 0; _i < arguments.length; _i++) {\r\n                                e[_i] = arguments[_i];\r\n                            }\r\n                            void 0;\r\n                        });\r\n                        i.onFinish(function () { void 0; });\r\n                        t.state.onChange = function (e) { void 0; if (t.state.player1 && t.state.player2 && t.state.minGames <= t.state.currentGameIndex && t.state.score.player1 !== t.state.score.player2) {\r\n                            var e_21 = (t.state.score.player1 || 0) > (t.state.score.player2 || 0) ? 1 : 2, i_8 = 1 === e_21 ? 2 : 1, r_12 = n.state[\"player\" + e_21].displayName + \"\\npwned\\n\" + n.state[\"player\" + i_8].displayName;\r\n                            t.state.player1.skipEnd || t.state.player2.skipEnd ? l.updateTextPanel({ value: \"One player still have to click\\nto skip end screen.\\n\\n\" + r_12 }) : l.updateTextPanel({ value: \"Players must click to skip end screen\\n\\n\" + r_12 });\r\n                        } ![t.state.player1.readyNext, t.state.player2.readyNext].every(function (e) { return e; }) && (t.state.player1.readyNext || t.state.player2.readyNext) && t.state[\"player\" + o].readyNext ? l.updateTextPanel({ value: \"Waiting for other player\" }) : \"Waiting for other player\" === l.getTextPanelValue() && l.updateTextPanel({ value: \"\" }); };\r\n                        t.onMessage(\"*\", function () {\r\n                            var e = [];\r\n                            for (var _i = 0; _i < arguments.length; _i++) {\r\n                                e[_i] = arguments[_i];\r\n                            }\r\n                            void 0;\r\n                        });\r\n                        u = undefined;\r\n                        return [2 /*return*/, function () { t.dispose(); t = null; }];\r\n                }\r\n            }); }));\r\n        }; var P;\r\n            var E = /** @class */ (function () {\r\n                function E(e, t) {\r\n                    var _this = this;\r\n                    this.state = { countToCheckCamera: 0 };\r\n                    (function () { return i(_this, void 0, void 0, (function () { var _a, n, i, r, a, c, m, E, I, O, R, A, x, k, M, N, D, F, _b, _c, U, j, e_22, $, B, e_23, t_18, e_24, t_19, r_13, s_2; return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                _a = JSON.parse(t.host_data).sammichgame, n = _a.position, i = _a.rotation, r = _a.scale, a = _a.hideFrame, c = _a.hideBoard, m = _a.hideAd, E = _a.soundDistance, I = _a.showJoinVoice, O = _a.voiceChannel, R = _a.showScenario, A = _a.serverWs, x = _a.serverHttp, k = JSON.parse(t.host_data).sammichgame.gameID.replace(\",\", \"_\"), M = new u.Client(\"\" + (A || g.WS_HOST));\r\n                                void 0;\r\n                                return [4 /*yield*/, f.sleep(0)];\r\n                            case 1:\r\n                                _d.sent();\r\n                                b.loadTexture();\r\n                                d.loadSounds();\r\n                                if (!e.getUserData) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, e.getUserData()];\r\n                            case 2:\r\n                                _b = _d.sent();\r\n                                return [3 /*break*/, 4];\r\n                            case 3:\r\n                                _b = e.user.data;\r\n                                _d.label = 4;\r\n                            case 4:\r\n                                N = _b;\r\n                                if (!e.getCurrentRealm) return [3 /*break*/, 6];\r\n                                return [4 /*yield*/, e.getCurrentRealm()];\r\n                            case 5:\r\n                                _c = (_d.sent()).displayName;\r\n                                return [3 /*break*/, 7];\r\n                            case 6:\r\n                                _c = e.server.realm.displayName;\r\n                                _d.label = 7;\r\n                            case 7:\r\n                                D = _c;\r\n                                return [4 /*yield*/, S.getLand()];\r\n                            case 8:\r\n                                F = _d.sent();\r\n                                v.setHostData({ realm: D, land: F, gameID: k, position: n, rotation: i, scale: r, hideFrame: a, hideBoard: c, hideAd: m, soundDistance: E, showJoinVoice: I, voiceChannel: O, showScenario: R, serverWs: A, serverHttp: x });\r\n                                void 0;\r\n                                void 0;\r\n                                void 0;\r\n                                U = new Entity;\r\n                                l.createTextPanel(U, \"\");\r\n                                h.createSpritePanel(U);\r\n                                h.updateSpritePanel({ uvs: p.getSpriteUv(1, 0, 192, 128) });\r\n                                this.rootTransform = new Transform({ position: new Vector3(n.x, n.y, n.z), scale: new Vector3(r.x, r.y, r.z) });\r\n                                this.rootTransform.rotation.setEuler(i.x, i.y, i.z);\r\n                                U.addComponent(this.rootTransform);\r\n                                engine.addEntity(U);\r\n                                j = new Entity;\r\n                                j.addComponent(new Transform({ position: new Vector3(0, 2, -2) }));\r\n                                j.setParent(U);\r\n                                d.addSoundsToEntity(j);\r\n                                a || s.createFrame(U);\r\n                                m || p.createSpriteEntity(U, { position: new Vector3(.25, -.4, -.14), scale: new Vector3(6.5, .75, 1), uvs: p.getSpriteUv(1, 40, 384, 64) });\r\n                                P = o.createLobbyControl(U, { gameID: k, client: M, user: N, hideBoard: c });\r\n                                if (!engine[\"PRODI\"]) {\r\n                                    h.hideSpritePanel();\r\n                                    e_22 = new w(U, { seed: T, currentPlayer: 2, level: 1, gameIndex: 0 });\r\n                                    e_22.setStartTime(Date.now() + 1e3);\r\n                                    e_22.onFinish(function () { });\r\n                                    e_22.onFinishRound && e_22.onFinishRound(function () { });\r\n                                    e_22.onShareState(function (t) { e_22.shareState(Object.assign(Object.assign({}, t), { player: 1, senderPlayer: 1 })); });\r\n                                    e_22.init();\r\n                                }\r\n                                $ = function (e, _a) {\r\n                                    var t = _a.trackSeed, n = _a.player, i = _a.minGames;\r\n                                    void 0;\r\n                                    _(U, { gameRoom: e, lobbyRoom: P.getLobbyRoom(), user: N, trackSeed: t, player: n, minGames: i });\r\n                                    P.getLobbyRoom().onMessage(\"PLAYER_LEFT\", function (_a) {\r\n                                        var e = _a.displayName;\r\n                                        void 0;\r\n                                        y.showNotification(e + \" left the game\");\r\n                                    });\r\n                                };\r\n                                P.onPlayersFull(function (_a) {\r\n                                    var e = _a.lobbyRoom, t = _a.trackSeed, n = _a.minGames;\r\n                                    void 0;\r\n                                    C(U, { lobbyRoom: P.getLobbyRoom(), trackSeed: t, minGames: n });\r\n                                    P.getLobbyRoom().onMessage(\"PLAYER_LEFT\", function (_a) {\r\n                                        var e = _a.displayName;\r\n                                        void 0;\r\n                                        y.showNotification(e + \" left the game\");\r\n                                    });\r\n                                });\r\n                                P.onGameRunning(function (_a) {\r\n                                    var e = _a.lobbyRoom, t = _a.minGames;\r\n                                    void 0;\r\n                                    C(U, { lobbyRoom: P.getLobbyRoom(), trackSeed: e.state.trackSeed, minGames: t, alreadyStarted: 1 });\r\n                                    P.getLobbyRoom().onMessage(\"PLAYER_LEFT\", function (_a) {\r\n                                        var e = _a.displayName;\r\n                                        void 0;\r\n                                        y.showNotification(e + \" left the game\");\r\n                                    });\r\n                                });\r\n                                P.onChangeState(function (e, t) { void 0; });\r\n                                P.onCreate(function (e, _a) {\r\n                                    var t = _a.minGames;\r\n                                    void 0;\r\n                                    e.onMessage(\"GAME_FULL\", function (_a) {\r\n                                        var n = _a.trackSeed;\r\n                                        return $(e, { trackSeed: n, player: 1, minGames: t });\r\n                                    });\r\n                                });\r\n                                P.onJoin(function (e, _a) {\r\n                                    var t = _a.minGames;\r\n                                    void 0;\r\n                                    e.onMessage(\"GAME_FULL\", function (_a) {\r\n                                        var n = _a.trackSeed;\r\n                                        return $(e, { trackSeed: n, player: 2, minGames: t });\r\n                                    });\r\n                                });\r\n                                B = \"\" + (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\");\r\n                                if (I) {\r\n                                    e_23 = new Entity, t_18 = new GLTFShape(B + \"models/joinVoice.glb\");\r\n                                    e_23.addComponent(new Transform({ position: new Vector3(0, n.y - 1.5, -13), scale: new Vector3(1.5, 2, 2) }));\r\n                                    e_23.addComponent(t_18);\r\n                                    e_23.addComponent(new OnPointerDown(function () { openExternalURL(\"https://meet.jit.si/\" + O + \"#config.startWithAudioMuted=true&config.startWithVideoMuted=true\"); }));\r\n                                    e_23.setParent(U);\r\n                                }\r\n                                if (R) {\r\n                                    e_24 = new Entity, t_19 = new GLTFShape(B + \"models/sammich-scene.glb\"), r_13 = 0 === i.y ? 0 : 90 === i.y ? -6 : 180 === i.y ? 0 : 6, s_2 = 0 === i.y ? -6 : 90 === i.y ? 0 : 180 === i.y ? 6 : 0;\r\n                                    e_24.addComponent(new Transform({ position: new Vector3(n.x + r_13, 0, n.z + s_2), rotation: Quaternion.Euler(i.x, i.y - 180, i.z), scale: new Vector3(1, 1, 1) }));\r\n                                    e_24.addComponent(t_19);\r\n                                    engine.addEntity(e_24);\r\n                                }\r\n                                return [2 /*return*/];\r\n                        }\r\n                    }); })); })();\r\n                }\r\n                E.prototype.update = function (e) { this.state.countToCheckCamera += e; if (this.state.countToCheckCamera >= 1) {\r\n                    var _a = v.getHostData(), e_25 = _a.position, t_20 = _a.soundDistance, n_15 = t_20 ? { x1: e_25.x - t_20, x2: e_25.x + t_20, z1: e_25.z - t_20, z2: e_25.z + t_20 } : { x1: 0, x2: 16, z1: 0, z2: 16 }, _b = Camera.instance.position, i_9 = _b.x, r_14 = _b.y, s_3 = _b.z;\r\n                    Camera.instance.position.x >= n_15.x1 && Camera.instance.position.x <= n_15.x2 && Camera.instance.position.z >= n_15.z1 && Camera.instance.position.z <= n_15.z2 ? d.setTotalMute(0) : d.setTotalMute(1);\r\n                    this.state.countToCheckCamera = 0;\r\n                } };\r\n                E.prototype.refreshHost = function (e) { if (!this.rootTransform)\r\n                    return; var _a = JSON.parse(e.host_data).sammichgame, t = _a.position, n = _a.rotation, i = _a.scale, r = _a.gameID; this.rootTransform.position.set(t.x, t.y, t.z); this.rootTransform.rotation.setEuler(n.x, n.y, n.z); this.rootTransform.scale.set(i.x, i.y, i.z); };\r\n                return E;\r\n            }());  t.default = E; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createFrame = void 0; var i = function (e) { var t = \"\" + (engine[\"RESOURCE_BASE\"] || globalThis[\"RESOURCE_BASE\"] || \"\"), n = new GLTFShape(t + \"models/frame.glb\"), i = new Material; n.withCollisions = 0; i.albedoColor = Color3.FromHexString(\"#333333\"); i.specularIntensity = .1; i.roughness = .9; i.metallic = .1; var r = new Transform({ position: new Vector3(0, -.76, 0) }), s = new Entity; s.addComponent(n); s.addComponent(i); s.addComponent(r); s.setParent(e); }; t.createFrame = i; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createLobbyControl = void 0; var i = n(54), r = n(55), s = n(56), o = n(6), a = n(5), c = n(2), u = n(18), l = n(0), h = n(16), d = n(17); var p = null; var f = { onCreate: null, onJoin: null, onPlayersFull: null, onChangeState: null, onMessage: null, onSpectatorMessage: null, onGameRunning: null }; var m = 1; var g = function (e, _a) {\r\n            var t = _a.gameID, n = _a.user, g = _a.client, y = _a.hideBoard;\r\n            var v = i.createStartButtonPanel(e);\r\n            y || s.createBoard(e);\r\n            v.showJoinButtonOn(function () { var e, t, i; void 0; return p && p.state && p.state.initialized ? (null === (e = p.state.player1) || void 0 === e ? void 0 : e.userId) === n.userId ? 0 : (null === (t = p.state.player1) || void 0 === t ? void 0 : t.userId) && !(null === (i = p.state.player2) || void 0 === i ? void 0 : i.userId) ? 1 : 0 : 0; });\r\n            v.showCreateButtonOn(function () { var e, t; void 0; return p && p.state && p.state.initialized ? (null === (e = p.state.player1) || void 0 === e ? void 0 : e.userId) ? 0 : (null === (t = p.state.player1) || void 0 === t ? void 0 : t.userId) ? void 0 : 1 : 0; });\r\n            v.showCancelButtonOn(function () { var e, t, i, r, s; void 0; return (null === (t = null === (e = null == p ? void 0 : p.state) || void 0 === e ? void 0 : e.player1) || void 0 === t ? void 0 : t.userId) && (null === (i = p.state.player2) || void 0 === i ? void 0 : i.userId) ? 0 : p && p.state && p.state.initialized && (null === (r = p.state.player1) || void 0 === r ? void 0 : r.userId) ? (null === (s = p.state.player1) || void 0 === s ? void 0 : s.userId) && p.state.player1.userId === n.userId ? 1 : void 0 : 0; });\r\n            v.update();\r\n            r.joinOrCreateGameLobby(g, { gameID: t, user: n }).then(function (i) { o.updateTextPanel({ value: \"\", color: Color3.FromHexString(\"#ffffff\") }); void 0; p = i.room; var r = null; p.onMessage(\"GAME_FULL\", function (_a) {\r\n                var e = _a.trackSeed, t = _a.minGames;\r\n                f.onPlayersFull({ lobbyRoom: p, trackSeed: e, minGames: t });\r\n            }); p.state.onChange = function (t) { var i, r, y, S, b, w, T; v.update(); void 0; s.updateBoard(p); void 0; if ((null === (i = p.state.player1) || void 0 === i ? void 0 : i.userId) && !(null === (r = p.state.player2) || void 0 === r ? void 0 : r.userId)) {\r\n                c.stopAllSounds();\r\n                var t_21 = d.getHostData().serverHttp;\r\n                if (C()) {\r\n                    u.reproduceVideo(e, (t_21 || h.HTTP_HOST) + \"/public/output.mp4\");\r\n                    a.hideSpritePanel();\r\n                }\r\n                else {\r\n                    c.playLoop(\"music2\");\r\n                    a.updateSpritePanel({ uvs: l.getSpriteUv(1, 0, 192, 128) });\r\n                    a.showSpritePanel();\r\n                }\r\n                o.updateTextPanel({ value: p.state.player1.displayName + \" as player 1\\nwaiting for someone to join\", bottom: 1, color: Color3.White(), hTextAlign: \"left\" });\r\n            } if (!(null === (y = p.state.player1) || void 0 === y ? void 0 : y.userId) && !(null === (S = p.state.player2) || void 0 === S ? void 0 : S.userId) && engine[\"PRODI\"]) {\r\n                u.removeVideoPanel();\r\n                a.updateSpritePanel({ uvs: l.getSpriteUv(1, 0, 192, 128) });\r\n                a.showSpritePanel();\r\n                (null === (b = p.state.lastPlayer1) || void 0 === b ? void 0 : b.displayName) ? o.updateTextPanel({ value: p.state.lastPlayer1.displayName + \" \" + p.state.lastPlayer1.score + \" - \" + p.state.lastPlayer2.score + \" \" + p.state.lastPlayer2.displayName }) : o.updateTextPanel({ value: \"\" });\r\n                c.stopAllSounds();\r\n            } if ((null === (w = p.state.player1) || void 0 === w ? void 0 : w.userId) && (null === (T = p.state.player2) || void 0 === T ? void 0 : T.userId) && !_() && (P() || m)) {\r\n                void 0;\r\n                c.stopAllSounds();\r\n                o.updateTextPanel({ value: p.state.player1.displayName + \" and \" + p.state.player2.displayName + \"\\nare playing\" });\r\n                a.updateSpritePanel({ uvs: l.getSpriteUv(9, 0, 192, 128) });\r\n                a.showSpritePanel();\r\n                m && f.onGameRunning({ lobbyRoom: p, minGames: g });\r\n            } m = 0; function C() { var e; return (null === (e = p.state.player1) || void 0 === e ? void 0 : e.userId) && p.state.player1.userId === n.userId; } function _() { var e, t, i, r; return (null === (e = p.state.player1) || void 0 === e ? void 0 : e.userId) && (null === (t = p.state.player2) || void 0 === t ? void 0 : t.userId) && ((null === (i = p.state.player1) || void 0 === i ? void 0 : i.userId) === n.userId || (null === (r = p.state.player2) || void 0 === r ? void 0 : r.userId) === n.userId); } function P() { var e = t.find(function (e) { return \"player2\" === e.field; }) || {}; return e.value && !e.previousValue; } function E(e) { var t = I(e, \"trackSeed\"); return t.value != t.value; } function I(e, t) { return e.find(function (e) { return e.field === t; }); } }; p.state.onAdd = function (e, t) { void 0; }; p.state.onRemove = function (e, t) { void 0; }; var g = 3; v.onRequestCreate(function () { var e; (null === (e = p.state.player1) || void 0 === e ? void 0 : e.userId) || i.requestCreate({ gameID: t, user: n, minGames: g, lobbySessionId: p.sessionId }).then(function (_a) {\r\n                var e = _a.sessionId, t = _a.gameRoom;\r\n                r = t;\r\n                f.onCreate(t, { minGames: g });\r\n            }, function () { void 0; }); }); v.onRequestCancel(function () { r && r.leave(); }); v.onRequestJoin(function () { var e; void 0; (null === (e = p.state.player2) || void 0 === e ? void 0 : e.userId) || i.requestJoin({ roomID: p.state.gameRoomID, gameID: t, user: n, lobbySessionId: p.sessionId }).then(function (_a) {\r\n                var e = _a.gameRoom;\r\n                r = e;\r\n                f.onJoin(e, { minGames: g });\r\n            }, function () { void 0; }); }); }, function (e) { o.updateTextPanel({ value: \"Unable to connect to server.\\nServer could be down.\\n\\nAlso some adblockers can\\nblock websocket connection.\\n\\nTry to refresh when problem solved.\", color: Color3.FromHexString(\"#ff0000\") }); log(\"ERR__\", e); });\r\n            return { onCreate: function (e) { f.onCreate = e; return function () { return f.onCreate = null; }; }, onJoin: function (e) { f.onJoin = e; return function () { return f.onJoin = null; }; }, onPlayersFull: function (e) { f.onPlayersFull = e; return function () { return f.onPlayersFull = null; }; }, onGameRunning: function (e) { f.onGameRunning = e; return function () { return f.onGameRunning = null; }; }, onChangeState: function (e) { f.onChangeState = e; return function () { return f.onChangeState = null; }; }, onMessage: function (e) { f.onMessage = e; return function () { return f.onMessage; }; }, update: function () { }, getLobbyRoom: function () { return p; }, hide: function () { } };\r\n        }; t.createLobbyControl = g; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.updateStartButtonPanel = t.onRequestCancel = t.onRequestJoin = t.onRequestCreate = t.showJoinButtonOn = t.showCreateButtonOn = t.showCancelButtonOn = t.createStartButtonPanel = void 0; var i = n(1), r = n(0), s = { showCreateButtonOn: null, showJoinButtonOn: null, showCancelButtonOn: null }; var o = null, a = null, c = null; var u = { onRequestCreate: null, onRequestJoin: null, onRequestCancel: null }, l = function (e, t, n) { var s = { onClick: null }; var o = new Entity, a = new Transform({ position: n }); o.addComponent(a); var c = new Entity, u = new PlaneShape; u.withCollisions = 0; u.uvs = r.getSpriteUv(\"create\" === t ? 1 : \"join\" === t ? 2 : 9, 256, 48, 32); c.addComponent(i.spriteMaterial); c.addComponent(u); u.visible = 0; c.addComponent(new Transform({ scale: new Vector3(1.5, 1, 1), position: new Vector3(0, 0, 0) })); c.addComponent(new OnClick(function () { s.onClick(); })); c.setParent(o); o.setParent(e); var l = function () { u.visible = 0; }; l(); return { onClick: function (e) { s.onClick = e; return function () { return s.onClick = null; }; }, show: function () { u.visible = 1; }, hide: l }; }, h = .03125, d = function (e) { var n = new Entity, i = 25 * h / 2 + 2 * h; o = l(n, \"create\", new Vector3(-(3 - 48 * h / 2 - 2 * h), i, -.01)); o.onClick(function () { return u.onRequestCreate(); }); a = l(n, \"join\", new Vector3(3 - 48 * h / 2 - 2 * h, i, -.01)); a.onClick(function () { return u.onRequestJoin(); }); c = l(n, \"cancel\", new Vector3(3 - 48 * h / 2 - 2 * h, i, -.01)); c.onClick(function () { return u.onRequestCancel(); }); engine[\"PRODI\"] && n.setParent(e); return { onRequestCreate: t.onRequestCreate, onRequestJoin: t.onRequestJoin, onRequestCancel: t.onRequestCancel, showCreateButtonOn: t.showCreateButtonOn, showJoinButtonOn: t.showJoinButtonOn, showCancelButtonOn: t.showCancelButtonOn, update: t.updateStartButtonPanel }; }; t.createStartButtonPanel = d; var p = function (e) { s.showCancelButtonOn = e; return function () { return s.showCancelButtonOn = null; }; }; t.showCancelButtonOn = p; var f = function (e) { s.showCreateButtonOn = e; return function () { return s.showCreateButtonOn = null; }; }; t.showCreateButtonOn = f; var m = function (e) { s.showJoinButtonOn = e; return function () { return s.showJoinButtonOn = null; }; }; t.showJoinButtonOn = m; var g = function (e) { u.onRequestCreate = e; return function () { return u.onRequestCreate = null; }; }; t.onRequestCreate = g; var y = function (e) { u.onRequestJoin = e; return function () { return u.onRequestJoin = null; }; }; t.onRequestJoin = y; var v = function (e) { u.onRequestCancel = e; return function () { return u.onRequestCancel = null; }; }; t.onRequestCancel = v; var S = function () { s.showCreateButtonOn() ? o.show() : o.hide(); s.showJoinButtonOn() ? a.show() : a.hide(); s.showCancelButtonOn() ? c.show() : c.hide(); }; t.updateStartButtonPanel = S; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.joinOrCreateGameLobby = void 0; var r = n(16), s = n(17), o = globalThis && globalThis.navigator || {}, a = function (e, _a) {\r\n            var t = _a.gameID, n = _a.user;\r\n            return i(void 0, void 0, void 0, (function () { var a; return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        a = s.getHostData().serverHttp;\r\n                        return [4 /*yield*/, fetch((a || r.HTTP_HOST) + \"/game?id=\" + t)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new Promise(function (r, a) { return i(void 0, void 0, void 0, (function () { var _a, c, u; return __generator(this, function (_b) {\r\n                                _a = s.getHostData(), c = _a.land, u = _a.realm;\r\n                                e.joinOrCreate(\"gameLobby_\" + t, { land: c, gameID: t, user: n, clientInfo: { language: o.language || null } }).then(function (n) { void 0; r({ requestCreate: function (_a) {\r\n                                        var t = _a.gameID, n = _a.user, r = _a.minGames, s = _a.lobbySessionId;\r\n                                        return i(void 0, void 0, void 0, (function () { return __generator(this, function (_a) {\r\n                                            log(\"requestCreate\", t, n);\r\n                                            return [2 /*return*/, e.create(\"game_\" + t, { gameID: t, user: Object.assign(Object.assign({}, n), { address: n.address || \"empty\" }), minGames: r, lobbySessionId: s, land: c, realm: u }).then(function (e) { return ({ sessionId: e.sessionId, gameRoomID: e.id, gameRoom: e }); }, function () { void 0; })];\r\n                                        }); }));\r\n                                    }, requestJoin: function (_a) {\r\n                                        var n = _a.roomID, r = _a.user, s = _a.lobbySessionId;\r\n                                        return i(void 0, void 0, void 0, (function () { return __generator(this, function (_a) {\r\n                                            log(\"requestJoin\", n);\r\n                                            return [2 /*return*/, e.joinById(n, { gameID: t, user: Object.assign(Object.assign({}, r), { address: r.address || \"empty\" }), lobbySessionId: s, land: c }).then(function (e) { return ({ sessionId: e.sessionId, gameRoomID: e.id, gameRoom: e }); }, function () { void 0; })];\r\n                                        }); }));\r\n                                    }, room: n }); }).catch(function (e) { a({ message: \"_join error\", error: e }); });\r\n                                return [2 /*return*/];\r\n                            }); })); })];\r\n                }\r\n            }); }));\r\n        }; t.joinOrCreateGameLobby = a; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.updateBoard = t.createBoard = void 0; var i = n(0), r = n(2), s = { player1: new Entity, player2: new Entity }, o = function (e) { var t = new TextShape, n = new TextShape, o = new Entity; o.addComponent(new Transform({ position: new Vector3(0, 4, -.15) })); o.setParent(e); t.color = Color3.FromHexString(\"#6666ff\"); n.color = Color3.FromHexString(\"#ffff00\"); t.hTextAlign = \"left\"; t.vTextAlign = n.vTextAlign = \"top\"; n.hTextAlign = \"right\"; t.fontSize = n.fontSize = 2; s.player1.addComponent(t); s.player2.addComponent(n); s.player1.addComponent(new Transform({ position: new Vector3(-2.99, .5, -.001) })); s.player2.addComponent(new Transform({ position: new Vector3(2.99, .5, -.001) })); s.player1.setParent(o); s.player2.setParent(o); var a = new Entity, c = new Material; a.addComponent(c); c.transparencyMode = 1; c.specularIntensity = 0; c.roughness = 1; c.metallic = 0; c.alphaTest = .5; c.albedoColor = new Color4(0, 0, 0, .7); a.addComponent(new PlaneShape); a.addComponent(new Transform({ scale: new Vector3(6, .5, 1), position: new Vector3(0, .25, 0) })); a.setParent(o); var u = 1; var l = i.createSpriteEntity(o, { uvs: i.getSpriteUv(10, 2048, 16, 16), position: new Vector3(0, .25, -.001), scale: new Vector3(.5, .5, 1) }); l.getEntity().addComponent(new OnClick(function () { r.toggleMusic(); u = !u; l.getShape().uvs = u ? i.getSpriteUv(10, 2048, 16, 16) : i.getSpriteUv(11, 2048, 16, 16); })); }; t.createBoard = o; var a = function (e) { var t, n, i, r; (null === (t = e.state.player1) || void 0 === t ? void 0 : t.userId) && (s.player1.getComponent(TextShape).value = (e.state.player1.score || 0) + \" points\\n\" + e.state.player1.displayName); (null === (n = e.state.player2) || void 0 === n ? void 0 : n.userId) && (s.player2.getComponent(TextShape).value = (e.state.player2.score || 0) + \" points\\n\" + e.state.player2.displayName); (null === (i = e.state.player1) || void 0 === i ? void 0 : i.userId) || (s.player1.getComponent(TextShape).value = \"<free>\"); (null === (r = e.state.player2) || void 0 === r ? void 0 : r.userId) || (s.player2.getComponent(TextShape).value = \"<free>\"); }; t.updateBoard = a; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createTrack = void 0; var r = n(6), s = n(2), o = n(5), a = n(18), c = n(0), u = n(24); var l = 0; var h = function (e, _a) {\r\n            var t = _a.gameRoom, n = _a.lobbyRoom, h = _a.user, f = _a.trackSeed, m = _a.minGames;\r\n            return i(void 0, void 0, void 0, (function () { function w(e) { g.onScore = e; return function () { return g.onScore = null; }; } function T(e) { g.onFinish = e; return function () { return g.onFinish = null; }; } function C() { g.onFinish = g.onScore = null; } function _(t) {\r\n                var _this = this;\r\n                t.onMessage(\"SHARE_STATE\", function (e) { S && S.shareState(e || {}); });\r\n                t.onLeave(function (e) { void 0; S && S.destroy(); S = null; a.removeVideoPanel(); o.updateSpritePanel({ uvs: c.getSpriteUv(1, 0, 192, 128) }); o.showSpritePanel(); });\r\n                t.onMessage(\"FINSIH_AGREE\", function (_a) {\r\n                    var s = _a.winner, o = _a.nextSeed, c = _a.nextIndex;\r\n                    return i(_this, void 0, void 0, (function () { var i, n_16, i_10; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                void 0;\r\n                                S.finish && S.finish({ winner: s });\r\n                                g.onScore({ score1: v.score1, score2: v.score2 });\r\n                                i = n.state[\"player\" + s].displayName;\r\n                                r.updateTextPanel({ value: \"(\" + s + \") \" + i + \" wins\" });\r\n                                return [4 /*yield*/, p(2e3)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                S.destroy();\r\n                                S = null;\r\n                                if (v.currentIndex + 1 >= y.length && v.score1 === v.score2) {\r\n                                    y.push(u.generateTrack(o, 1)[0]);\r\n                                    void 0;\r\n                                }\r\n                                if (v.currentIndex < y.length) {\r\n                                    v.currentIndex = c;\r\n                                    E({ nextSeed: o });\r\n                                    P(S, t);\r\n                                    n_16 = y[c].Game.instructions || \"ERROR: MISSING_INSTRUCTIONS\";\r\n                                    a.reproduceVideo(e, y[c].Game.id);\r\n                                    r.updateTextPanel({ value: n_16 + \"\\n\\nClick when ready to play\\n or waiting 20 seconds\" });\r\n                                    i_10 = function () { Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, i_10); r.updateTextPanel({ value: \"waiting for other user\" }); t.send(\"READY_NEXT\", { senderPlayer: v.currentPlayer, games: y.map(function (e) { return e.Game.id; }) }); };\r\n                                    Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, i_10);\r\n                                }\r\n                                return [2 /*return*/];\r\n                        }\r\n                    }); }));\r\n                });\r\n                t.onMessage(\"NEXT_GAME\", function (_a) {\r\n                    var e = _a.serverTime, t = _a.startTime;\r\n                    v.currentRoundIndex = 0;\r\n                    Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, b);\r\n                    void 0;\r\n                    r.updateTextPanel({ value: \"\" });\r\n                    s.stopAllSounds();\r\n                    S && S.init();\r\n                    a.removeVideoPanel();\r\n                    l = e - Date.now();\r\n                    S.setStartTime(d(t));\r\n                });\r\n                t.onMessage(\"NEXT_ROUND\", function (_a) {\r\n                    var e = _a.winner, t = _a.serverTime, n = _a.startTime, i = _a.roundIndex;\r\n                    v.currentRoundIndex++;\r\n                    void 0;\r\n                    l = t - Date.now();\r\n                    S.finishRound && S.finishRound({ winner: e });\r\n                    var r = d(n);\r\n                    void 0;\r\n                    void 0;\r\n                    S.setRoundStartTime && S.setRoundStartTime(r);\r\n                });\r\n                t.onMessage(\"FINISH_TRACK\", function (_a) {\r\n                    var e = _a.score;\r\n                    return i(_this, void 0, void 0, (function () { var n, i; return __generator(this, function (_a) {\r\n                        void 0;\r\n                        S.destroy();\r\n                        S = null;\r\n                        s.playOnce(\"pwned\");\r\n                        n = (e.player1 || 0) > (e.player2 || 0) ? 1 : 2;\r\n                        o.updateSpritePanel({ uvs: c.getSpriteUv(8, 0, 192, 128), scale: new Vector3(1 === n ? 6 : -6, 4, 1) });\r\n                        o.showSpritePanel();\r\n                        g.onFinish({ score: e });\r\n                        i = function () { t.send(\"SKIP_END\", { senderPlayer: v.currentPlayer }); };\r\n                        Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, i);\r\n                        t.onLeave(function () { return Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, i); });\r\n                        return [2 /*return*/];\r\n                    }); }));\r\n                });\r\n            } function P(e, t) { e.onFinish(function (_a) {\r\n                var n = _a.time, i = _a.isWinner, r = _a.score, s = _a.gameIndex, o = _a.roundIndex;\r\n                void 0;\r\n                e.block();\r\n                var a = 1 === v.currentPlayer ? 2 : 1, c = i ? v.currentPlayer : a;\r\n                void 0;\r\n                t.send(\"FINISH_GAME\", { winner: c, time: n, score: r, senderPlayer: v.currentPlayer, userId: h.userId, currentGameIndex: s, currentRoundIndex: o, gameName: e.id });\r\n            }); e.onFinishRound && e.onFinishRound(function (_a) {\r\n                var n = _a.player, i = _a.time, r = _a.score, s = _a.isWinner, o = _a.roundIndex, a = _a.gameIndex;\r\n                var c = 1 === v.currentPlayer ? 2 : 1, u = s ? v.currentPlayer : c;\r\n                t.send(\"READY_ROUND\", { player: n, time: i, score: r, winner: u, currentGameIndex: a, currentRoundIndex: o, gameName: e.id });\r\n            }); e.onShareState(function (e) { t.send(\"SHARE_STATE\", { sharedState: e, userId: h.userId, senderPlayer: v.currentPlayer, currentGameIndex: v.currentIndex, currentRoundIndex: v.currentRoundIndex }); }); } function E(_a) {\r\n                var t = _a.nextSeed;\r\n                void 0;\r\n                if (S) {\r\n                    S.destroy();\r\n                    S = null;\r\n                }\r\n                var n = y[v.currentIndex].Game;\r\n                S = new n(e, { seed: t, currentPlayer: v.currentPlayer, level: 1, gameIndex: v.currentIndex });\r\n            } function I() { var e, t, i; return (null === (e = n.state.player1) || void 0 === e ? void 0 : e.userId) && (null === (t = n.state.player2) || void 0 === t ? void 0 : t.userId) && (n.state.player1.userId === h.userId || (null === (i = n.state.player2) || void 0 === i ? void 0 : i.userId) === h.userId); } var g, y, v, S, b; return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        g = { onScore: null, onFinish: null }, y = u.generateTrack(f, m);\r\n                        void 0;\r\n                        v = { currentIndex: 0, currentPlayer: 0, currentRoundIndex: 0, score1: 0, score2: 0 };\r\n                        n.state.player1.userId === h.userId && (v.currentPlayer = 1);\r\n                        n.state.player2.userId === h.userId && (v.currentPlayer = 2);\r\n                        s.stopSound(\"music2\");\r\n                        return [4 /*yield*/, p(100)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        s.playOnce(\"vs\", { volume: 1 });\r\n                        a.removeVideoPanel();\r\n                        o.showSpritePanel();\r\n                        o.updateSpritePanel({ uvs: c.getSpriteUv(10, 0, 192, 128) });\r\n                        r.updateTextPanel({ value: n.state.player1.displayName + \" (left)\\nVS\\n\" + n.state.player2.displayName + \" (right)\", bottom: 0, color: Color3.White() });\r\n                        return [4 /*yield*/, p(3e3)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        a.reproduceVideo(e, y[0].Game.id);\r\n                        o.hideSpritePanel();\r\n                        r.updateTextPanel({ value: y[0].Game.instructions + \"\\n\\nClick when ready to play\\nor waiting 20 seconds\" });\r\n                        S = new y[v.currentIndex].Game(e, { seed: f, currentPlayer: v.currentPlayer, level: 1, gameIndex: 0 });\r\n                        P(S, t);\r\n                        _(t);\r\n                        b = function () { t.send(\"READY_NEXT\", { senderPlayer: v.currentPlayer, games: (y || []).map(function (e) { return e.Game.id; }) }); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, b); r.updateTextPanel({ value: \"waiting for other user\" }); };\r\n                        Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, b);\r\n                        return [2 /*return*/, { onScore: w, onFinish: T, dispose: function () { void 0; } }];\r\n                }\r\n            }); }));\r\n        }; t.createTrack = h; function d(e) { return e - l; } function p(e) { return new Promise(function (t) { return setTimeout(t, e); }); } }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = n(19), r = n(27), s = n(28), o = n(29), a = n(30), c = n(9), u = n(13), l = n(59), h = n(31), d = n(33), p = n(32), f = n(60), m = n(61); t.default = { TransformSystem: c.TransformSystem, MoveTransformComponent: i.MoveTransformComponent, RotateTransformComponent: r.RotateTransformComponent, ScaleTransformComponent: s.ScaleTransformComponent, FollowPathComponent: o.FollowPathComponent, KeepRotatingComponent: a.KeepRotatingComponent, Interpolate: u.Interpolate, InterpolationType: u.InterpolationType, ToggleComponent: l.ToggleComponent, ToggleState: l.ToggleState, Delay: h.Delay, ExpireIn: d.ExpireIn, Interval: p.Interval, TriggerComponent: f.TriggerComponent, TriggerSystem: f.TriggerSystem, TriggerSphereShape: f.TriggerSphereShape, TriggerBoxShape: f.TriggerBoxShape, ActionsSequenceSystem: m.ActionsSequenceSystem }; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }, r; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ToggleComponent = t.ToggleState = void 0; (function (e) { e[e[\"Off\"] = 0] = \"Off\"; e[e[\"On\"] = 1] = \"On\"; })(r = t.ToggleState || (t.ToggleState = {})); var s = /** @class */ (function () {\r\n            function e(e, t) {\r\n                if (e === void 0) { e = r.On; }\r\n                this.enabled = 1;\r\n                this.state = r.Off;\r\n                this.set(e);\r\n                t && this.setCallback(t);\r\n            }\r\n            e.prototype.set = function (e) { this.state = e; this.onValueChangedCallback && this.onValueChangedCallback(e); };\r\n            e.prototype.toggle = function () { this.enabled && this.set(1 - this.state); };\r\n            e.prototype.isOn = function () { return this.state == r.On; };\r\n            e.prototype.setCallback = function (e) { this.onValueChangedCallback = e; };\r\n            return e;\r\n        }()); s = i([Component(\"toggle\")], s); t.ToggleComponent = s; t.default = { ToggleComponent: s, ToggleState: r }; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.TriggerSphereShape = t.TriggerBoxShape = t.TriggerComponent = t.TriggerSystem = void 0;\r\n            var r = /** @class */ (function () {\r\n                function r() {\r\n                    this._triggers = {};\r\n                    r._instance = this;\r\n                    this._cameraTriggerWrapper = new o(new c(new Vector3(.5, 1.8, .5), new Vector3(0, .91, 0)));\r\n                }\r\n                Object.defineProperty(r, \"instance\", {\r\n                    get: function () { return this.createAndAddToEngine(); },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                r.createAndAddToEngine = function () { if (null == this._instance) {\r\n                    this._instance = new r;\r\n                    engine.addSystem(this._instance);\r\n                } return this._instance; };\r\n                r.prototype.setCameraTriggerShape = function (e) { this._cameraTriggerWrapper.setShape(e); };\r\n                r.prototype.update = function () {\r\n                    var _this = this;\r\n                    var e;\r\n                    engine.getComponentGroup(a).entities.forEach(function (e) { _this.shouldWrapTriggerEntity(e) && _this.wrapTriggerEntity(e); });\r\n                    for (var e_26 in this._triggers)\r\n                        if (this._triggers.hasOwnProperty(e_26)) {\r\n                            var t_22 = this._triggers[e_26];\r\n                            t_22.isDebugging() && t_22.updateDebugEntity();\r\n                            if (t_22.isInEngine()) {\r\n                                if (null != t_22.trigger && t_22.trigger.enabled) {\r\n                                    t_22.wasEnabled || t_22.isDebugging() && t_22.addDebugEntity();\r\n                                    t_22.wasEnabled = 1;\r\n                                    (t_22.trigger.onCameraEnter || t_22.trigger.onCameraExit) && this.checkCollisionAgainstCamera(t_22);\r\n                                    (t_22.trigger.onTriggerEnter || t_22.trigger.onTriggerExit) && this.checkCollisionAgainstOtherTriggers(t_22);\r\n                                }\r\n                                else if (t_22.wasEnabled) {\r\n                                    t_22.wasEnabled = 0;\r\n                                    t_22.isDebugging() && t_22.removeDebugEntity();\r\n                                    r.removeTriggerFromSystem(t_22);\r\n                                }\r\n                            }\r\n                            else {\r\n                                t_22.isDebugging() && t_22.removeDebugEntity();\r\n                                r.removeTriggerFromSystem(t_22);\r\n                                delete this._triggers[e_26];\r\n                            }\r\n                        }\r\n                };\r\n                r.prototype.shouldWrapTriggerEntity = function (e) { return null == this._triggers[e.uuid] || null == this._triggers[e.uuid]; };\r\n                r.prototype.wrapTriggerEntity = function (e) { this._triggers[e.uuid] = new s(e); };\r\n                r.removeTriggerFromSystem = function (e) { var t = e.getActiveCollisions(); for (var n_17 = 0; n_17 < t.length; n_17++) {\r\n                    t[n_17].trigger.onTriggerExit && e.entity && t[n_17].trigger.onTriggerExit(e.entity);\r\n                    t[n_17].disengageActiveCollision(e);\r\n                    e.disengageActiveCollision(t[n_17]);\r\n                } };\r\n                r.disengageCollision = function (e, t) { e.disengageActiveCollision(t); t.disengageActiveCollision(e); e.trigger.onTriggerExit && t.entity && e.trigger.onTriggerExit(t.entity); t.trigger.onTriggerExit && e.entity && t.trigger.onTriggerExit(e.entity); };\r\n                r.engageCollision = function (e, t) { e.engageCollision(t); t.engageCollision(e); e.trigger.onTriggerEnter && t.entity && e.trigger.onTriggerEnter(t.entity); t.trigger.onTriggerEnter && e.entity && t.trigger.onTriggerEnter(e.entity); };\r\n                r.prototype.checkCollisionAgainstCamera = function (e) { var t = e.hasActiveCollision(this._cameraTriggerWrapper), n = r.areColliding(e, this._cameraTriggerWrapper); if (t && !n) {\r\n                    e.disengageActiveCollision(this._cameraTriggerWrapper);\r\n                    e.trigger.onCameraExit && e.trigger.onCameraExit();\r\n                }\r\n                else if (!t && n) {\r\n                    e.engageCollision(this._cameraTriggerWrapper);\r\n                    e.trigger.onCameraEnter && e.trigger.onCameraEnter();\r\n                } };\r\n                r.prototype.checkCollisionAgainstOtherTriggers = function (e) { for (var t_23 in this._triggers)\r\n                    if (this._triggers.hasOwnProperty(t_23) && t_23 != e.uuid && this._triggers[t_23].trigger.enabled && r.canTriggersCollide(e, this._triggers[t_23])) {\r\n                        var n_18 = e.hasActiveCollision(this._triggers[t_23]), i_11 = r.areColliding(e, this._triggers[t_23]);\r\n                        n_18 && !i_11 ? r.disengageCollision(e, this._triggers[t_23]) : !n_18 && i_11 && r.engageCollision(e, this._triggers[t_23]);\r\n                    } };\r\n                r.canTriggersCollide = function (e, t) { return 0 == e.trigger.triggeredByLayer ? 1 : 0 != (t.trigger.layer & e.trigger.triggeredByLayer); };\r\n                r.areColliding = function (e, t) { return e.getShape() instanceof c && t.getShape() instanceof c ? r.areCollidingAABB(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape()) : e.getShape() instanceof u && t.getShape() instanceof u ? r.areCollidingSphere(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape()) : e.getShape() instanceof c && t.getShape() instanceof u ? r.areCollidingAABBSphere(e.getGlobalPosition(), e.getShape(), t.getGlobalPosition(), t.getShape()) : e.getShape() instanceof u && t.getShape() instanceof c ? r.areCollidingAABBSphere(t.getGlobalPosition(), t.getShape(), e.getGlobalPosition(), e.getShape()) : 0; };\r\n                r.areCollidingAABB = function (e, t, n, i) { var s = r.getBoxShapeValues(e, t), o = r.getBoxShapeValues(n, i); return s.min.x <= o.max.x && s.max.x >= o.min.x && s.min.y <= o.max.y && s.max.y >= o.min.y && s.min.z <= o.max.z && s.max.z >= o.min.z; };\r\n                r.areCollidingSphere = function (e, t, n, i) { var r; return Vector3.DistanceSquared(e.add(t.position), n.add(i.position)) < t.radius * t.radius + i.radius * i.radius; };\r\n                r.areCollidingAABBSphere = function (e, t, n, i) { var s = r.getBoxShapeValues(e, t), o = { center: n.add(i.position), radius: i.radius }, a = 0; o.center.x < s.min.x && (a += (s.min.x - o.center.x) * (s.min.x - o.center.x)); o.center.x > s.max.x && (a += (o.center.x - s.max.x) * (o.center.x - s.max.x)); o.center.y < s.min.y && (a += (s.min.y - o.center.y) * (s.min.y - o.center.y)); o.center.y > s.max.y && (a += (o.center.y - s.max.y) * (o.center.y - s.max.y)); o.center.z < s.min.z && (a += (s.min.z - o.center.z) * (s.min.z - o.center.z)); o.center.z > s.max.z && (a += (o.center.z - s.max.z) * (o.center.z - s.max.z)); return a < o.radius * o.radius; };\r\n                r.getBoxShapeValues = function (e, t) { var n = e.add(t.position); return { center: n, min: n.subtract(t.size.scale(.5)), max: n.add(t.size.scale(.5)) }; };\r\n                return r;\r\n            }());  t.TriggerSystem = r; r._instance = null;\r\n            var s = /** @class */ (function () {\r\n                function s(e) {\r\n                    this.wasEnabled = 1;\r\n                    this._uuid = \"\";\r\n                    this._collidingWith = {};\r\n                    this._isDebug = 0;\r\n                    this._debugEntity = null;\r\n                    this._entity = e;\r\n                    if (e) {\r\n                        this._trigger = e.getComponent(a);\r\n                        this._uuid = e.uuid;\r\n                        this._isDebug = this._trigger.debugEnabled;\r\n                        this._isDebug && this.addDebugEntity();\r\n                    }\r\n                }\r\n                Object.defineProperty(s.prototype, \"entity\", {\r\n                    get: function () { return this._entity; },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(s.prototype, \"trigger\", {\r\n                    get: function () { return this._trigger; },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(s.prototype, \"uuid\", {\r\n                    get: function () { return this._uuid; },\r\n                    enumerable: false,\r\n                    configurable: true\r\n                });\r\n                s.prototype.getGlobalPosition = function () { return this._entity ? s.getEntityWorldPosition(this._entity) : Vector3.Zero(); };\r\n                s.prototype.getShape = function () { return this._trigger.shape; };\r\n                s.prototype.isInEngine = function () { return null != this._entity && this._entity.isAddedToEngine(); };\r\n                s.prototype.getActiveCollisions = function () { var e = []; for (var t_24 in this._collidingWith)\r\n                    this._collidingWith.hasOwnProperty(t_24) && e.push(this._collidingWith[t_24]); return e; };\r\n                s.prototype.hasActiveCollision = function (e) { return null != this._collidingWith[e.uuid] && null != this._collidingWith[e.uuid]; };\r\n                s.prototype.disengageActiveCollision = function (e) { delete this._collidingWith[e.uuid]; };\r\n                s.prototype.engageCollision = function (e) { this._collidingWith[e.uuid] = e; };\r\n                s.prototype.isDebugging = function () { return this._isDebug; };\r\n                s.prototype.addDebugEntity = function () { if (!s._debugMaterial) {\r\n                    s._debugMaterial = new Material;\r\n                    s._debugMaterial.alphaTest = .5;\r\n                } if (null == this._debugEntity) {\r\n                    this._debugEntity = new Entity;\r\n                    var e_27 = new Transform;\r\n                    this._debugEntity.addComponent(e_27);\r\n                    this._debugEntity.addComponent(s._debugMaterial);\r\n                    if (this.getShape() instanceof c) {\r\n                        var t_25 = new BoxShape;\r\n                        t_25.withCollisions = 0;\r\n                        this._debugEntity.addComponent(t_25);\r\n                        e_27.scale = this.getShape().size;\r\n                    }\r\n                    if (this.getShape() instanceof u) {\r\n                        var t_26 = new SphereShape;\r\n                        t_26.withCollisions = 0;\r\n                        this._debugEntity.addComponent(t_26);\r\n                        var n_19 = this.getShape().radius;\r\n                        e_27.scale = new Vector3(n_19, n_19, n_19);\r\n                    }\r\n                } engine.addEntity(this._debugEntity); };\r\n                s.prototype.removeDebugEntity = function () { null != this._debugEntity && engine.removeEntity(this._debugEntity); };\r\n                s.prototype.updateDebugEntity = function () { this._debugEntity && (this._debugEntity.getComponent(Transform).position = this.getGlobalPosition().add(this.getShape().position)); };\r\n                s.getEntityWorldPosition = function (e) { var t = e.hasComponent(Transform) ? e.getComponent(Transform).position : Vector3.Zero(), n = e.getParent(); if (null != n) {\r\n                    var e_28 = n.hasComponent(Transform) ? n.getComponent(Transform).rotation : Quaternion.Identity;\r\n                    return this.getEntityWorldPosition(n).add(t.rotate(e_28));\r\n                } return t; };\r\n                return s;\r\n            }());  s._debugMaterial = null;\r\n            var o = /** @class */ (function (_super) {\r\n                __extends(o, _super);\r\n                function o(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this._shape = e;\r\n                    _this._uuid = \"cameraTrigger\";\r\n                    return _this;\r\n                }\r\n                o.prototype.getGlobalPosition = function () { return Camera.instance.position; };\r\n                o.prototype.getShape = function () { return this._shape; };\r\n                o.prototype.setShape = function (e) { this._shape = e; };\r\n                o.prototype.isInEngine = function () { return 0; };\r\n                o.prototype.hasActiveCollision = function (e) { return 0; };\r\n                o.prototype.disengageActiveCollision = function (e) { };\r\n                o.prototype.engageCollision = function (e) { };\r\n                o.prototype.isDebugging = function () { return 0; };\r\n                return o;\r\n            }(s));  var a = /** @class */ (function () {\r\n            function e(e, t, n, i, s, o, a, c) {\r\n                if (t === void 0) { t = 0; }\r\n                if (n === void 0) { n = 0; }\r\n                if (c === void 0) { c = 0; }\r\n                this.enabled = 1;\r\n                this.layer = 0;\r\n                this.triggeredByLayer = 0;\r\n                r.createAndAddToEngine();\r\n                this.shape = e;\r\n                this.layer = t;\r\n                this.triggeredByLayer = n;\r\n                this.onTriggerEnter = i;\r\n                this.onTriggerExit = s;\r\n                this.onCameraEnter = o;\r\n                this.onCameraExit = a;\r\n                this._debugEnabled = c;\r\n            }\r\n            Object.defineProperty(e.prototype, \"debugEnabled\", {\r\n                get: function () { return this._debugEnabled; },\r\n                enumerable: false,\r\n                configurable: true\r\n            });\r\n            return e;\r\n        }()); a = i([Component(\"triggerComponent\")], a); t.TriggerComponent = a;\r\n            var c = /** @class */ (function () {\r\n                function c(e, t) {\r\n                    this.size = e;\r\n                    this.position = t;\r\n                }\r\n                return c;\r\n            }());  t.TriggerBoxShape = c;\r\n            var u = /** @class */ (function () {\r\n                function u(e, t) {\r\n                    this.radius = e;\r\n                    this.position = t;\r\n                }\r\n                return u;\r\n            }());  t.TriggerSphereShape = u; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ActionsSequenceSystem = void 0;\r\n            var i = /** @class */ (function () {\r\n                function i(e) {\r\n                    this.beginSequenceNode = null;\r\n                    this.currentSequenceNode = null;\r\n                    this.running = 0;\r\n                    this.started = 0;\r\n                    e && this.startSequence(e);\r\n                }\r\n                i.prototype.startSequence = function (e) { this.beginSequenceNode = e.beginSequenceNode; this.currentSequenceNode = this.beginSequenceNode; this.running = 1; this.started = 0; };\r\n                i.prototype.setOnFinishCallback = function (e) { this.onFinishCallback = e; };\r\n                i.prototype.isRunning = function () { return this.running; };\r\n                i.prototype.stop = function () { this.running = 0; };\r\n                i.prototype.resume = function () { null != this.beginSequenceNode && (this.running = 1); };\r\n                i.prototype.reset = function () { this.currentSequenceNode = this.beginSequenceNode; this.running = 1; this.started = 0; };\r\n                i.prototype.getRunningAction = function () { var e = this.currentSequenceNode; if (this.currentSequenceNode instanceof s)\r\n                    do {\r\n                        e = e.currentInnerSequence;\r\n                    } while (e instanceof s); return e.action; };\r\n                i.prototype.update = function (e) { if (this.running)\r\n                    if (this.started)\r\n                        if (this.currentSequenceNode.hasFinish()) {\r\n                            this.currentSequenceNode.onFinish();\r\n                            this.currentSequenceNode = this.currentSequenceNode.next;\r\n                            if (this.currentSequenceNode)\r\n                                this.currentSequenceNode.onStart();\r\n                            else {\r\n                                this.running = 0;\r\n                                this.onFinishCallback && this.onFinishCallback();\r\n                            }\r\n                        }\r\n                        else\r\n                            this.currentSequenceNode.update(e);\r\n                    else {\r\n                        this.currentSequenceNode.onStart();\r\n                        this.started = 1;\r\n                    } };\r\n                return i;\r\n            }());  t.ActionsSequenceSystem = i; (function (e) { var t = /** @class */ (function () {\r\n            function t() {\r\n                this.currentSequenceNode = null;\r\n                this.beginSequenceNode = null;\r\n                this.whileNodeStack = [];\r\n            }\r\n            t.prototype.then = function (e) { if (null == this.currentSequenceNode) {\r\n                this.currentSequenceNode = new r;\r\n                this.currentSequenceNode.action = e;\r\n                this.beginSequenceNode = this.currentSequenceNode;\r\n            }\r\n            else {\r\n                var t_27 = new r;\r\n                t_27.action = e;\r\n                this.currentSequenceNode = this.currentSequenceNode.then(t_27);\r\n            } return this; };\r\n            t.prototype.if = function (e) { var t = new o(e); if (null == this.currentSequenceNode) {\r\n                this.currentSequenceNode = t;\r\n                this.beginSequenceNode = t;\r\n            }\r\n            else\r\n                this.currentSequenceNode = this.currentSequenceNode.then(t); return this; };\r\n            t.prototype.else = function () { var e = this.currentSequenceNode.getSequence(); if (!(e instanceof o))\r\n                throw new Error(\"IF statement is needed to be called before ELSE statement.\"); {\r\n                e.closed = 1;\r\n                var t_28 = new a(e);\r\n                this.currentSequenceNode = this.currentSequenceNode.then(t_28);\r\n            } return this; };\r\n            t.prototype.endIf = function () { var e = this.currentSequenceNode.getSequence(); if (!(e instanceof o || e instanceof a))\r\n                throw new Error(\"IF statement is needed to be called before ENDIF statement.\"); e.closed = 1; return this; };\r\n            t.prototype.while = function (e) { var t = new c(e); if (null == this.currentSequenceNode) {\r\n                this.currentSequenceNode = t;\r\n                this.beginSequenceNode = t;\r\n            }\r\n            else\r\n                this.currentSequenceNode = this.currentSequenceNode.then(t); this.whileNodeStack.push(t); return this; };\r\n            t.prototype.endWhile = function () { var e = this.currentSequenceNode.getSequence(); if (!(e instanceof c))\r\n                throw new Error(\"WHILE statement is needed to be called before ENDWHILE statement.\"); e.closed = 1; this.whileNodeStack.length > 0 && this.whileNodeStack.splice(this.whileNodeStack.length - 1, 1); return this; };\r\n            t.prototype.breakWhile = function () { if (!(this.whileNodeStack.length > 0))\r\n                throw new Error(\"WHILE statement is needed to be called before BREAKWHILE statement.\"); this.currentSequenceNode = this.currentSequenceNode.then(new u(this.whileNodeStack[this.whileNodeStack.length - 1])); return this; };\r\n            return t;\r\n        }());  e.SequenceBuilder = t; })(i = t.ActionsSequenceSystem || (t.ActionsSequenceSystem = {}));\r\n            var r = /** @class */ (function () {\r\n                function r() {\r\n                    this.action = null;\r\n                    this.next = null;\r\n                }\r\n                r.prototype.then = function (e) { this.next = e; return e; };\r\n                r.prototype.onStart = function () { this.action && this.action.onStart(); };\r\n                r.prototype.update = function (e) { this.action && this.action.update(e); };\r\n                r.prototype.onFinish = function () { this.action && this.action.onFinish(); };\r\n                r.prototype.hasFinish = function () { return this.action ? this.action.hasFinished : 1; };\r\n                r.prototype.getSequence = function () { return this; };\r\n                return r;\r\n            }()); \r\n            var s = /** @class */ (function (_super) {\r\n                __extends(s, _super);\r\n                function s() {\r\n                    var _this = _super.apply(this, __spread(arguments)) || this;\r\n                    _this.currentInnerSequence = null;\r\n                    _this.startingInnerSequence = null;\r\n                    _this.closed = 0;\r\n                    return _this;\r\n                }\r\n                s.prototype.then = function (e) { if (null == this.currentInnerSequence) {\r\n                    this.currentInnerSequence = e;\r\n                    this.startingInnerSequence = e;\r\n                }\r\n                else {\r\n                    if (this.closed) {\r\n                        this.next = e;\r\n                        return e;\r\n                    }\r\n                    this.currentInnerSequence = this.currentInnerSequence.then(e);\r\n                } return this; };\r\n                s.prototype.onStart = function () { this.currentInnerSequence = this.startingInnerSequence; this.currentInnerSequence && this.currentInnerSequence.onStart(); };\r\n                s.prototype.update = function (e) { if (this.currentInnerSequence)\r\n                    if (this.currentInnerSequence.hasFinish()) {\r\n                        this.currentInnerSequence.onFinish();\r\n                        this.currentInnerSequence = this.currentInnerSequence.next;\r\n                        this.currentInnerSequence && this.currentInnerSequence.onStart();\r\n                    }\r\n                    else\r\n                        this.currentInnerSequence.update(e); };\r\n                s.prototype.onFinish = function () { this.currentInnerSequence && this.currentInnerSequence.onFinish(); };\r\n                s.prototype.hasFinish = function () { return null == this.currentInnerSequence; };\r\n                s.prototype.getSequence = function () { if (this.currentInnerSequence) {\r\n                    var e_29 = this.currentInnerSequence.getSequence();\r\n                    if (e_29 instanceof s && !e_29.closed)\r\n                        return e_29;\r\n                } return this; };\r\n                return s;\r\n            }(r)); \r\n            var o = /** @class */ (function (_super) {\r\n                __extends(o, _super);\r\n                function o(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.result = 0;\r\n                    _this.condition = e;\r\n                    return _this;\r\n                }\r\n                o.prototype.onStart = function () { this.result = this.condition(); this.result ? _super.prototype.onStart.call(this) : this.currentInnerSequence = null; };\r\n                return o;\r\n            }(s)); \r\n            var a = /** @class */ (function (_super) {\r\n                __extends(a, _super);\r\n                function a(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.ifSequence = null;\r\n                    _this.ifSequence = e;\r\n                    return _this;\r\n                }\r\n                a.prototype.onStart = function () { this.ifSequence && !this.ifSequence.result ? _super.prototype.onStart.call(this) : this.currentInnerSequence = null; };\r\n                return a;\r\n            }(s)); \r\n            var c = /** @class */ (function (_super) {\r\n                __extends(c, _super);\r\n                function c(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.breakWhile = 0;\r\n                    _this.condition = e;\r\n                    return _this;\r\n                }\r\n                c.prototype.onStart = function () { this.breakWhile = 0; this.condition() ? _super.prototype.onStart.call(this) : this.currentInnerSequence = null; };\r\n                c.prototype.update = function (e) { if (this.currentInnerSequence)\r\n                    if (this.currentInnerSequence.hasFinish()) {\r\n                        this.currentInnerSequence.onFinish();\r\n                        this.currentInnerSequence = this.currentInnerSequence.next;\r\n                        null == this.currentInnerSequence && (this.currentInnerSequence = this.startingInnerSequence);\r\n                        this.currentInnerSequence && this.currentInnerSequence.onStart();\r\n                    }\r\n                    else\r\n                        this.currentInnerSequence.update(e); };\r\n                c.prototype.hasFinish = function () { return this.breakWhile || !this.condition(); };\r\n                return c;\r\n            }(s)); \r\n            var u = /** @class */ (function (_super) {\r\n                __extends(u, _super);\r\n                function u(e) {\r\n                    var _this = _super.call(this) || this;\r\n                    _this.whileNode = e;\r\n                    return _this;\r\n                }\r\n                u.prototype.onStart = function () { this.whileNode.breakWhile = 1; };\r\n                return u;\r\n            }(r));  }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.CostumeGame = void 0; var i = n(3), r = n(21), s = n(63), o = n(68), a = n(69), c = n(10), u = n(5), l = n(2), h = n(4), d = n(0), p = 3;\r\n            var f = /** @class */ (function () {\r\n                function f(e, _a) {\r\n                    var t = _a.seed, n = _a.currentPlayer, c = _a.level, u = _a.gameIndex;\r\n                    this.state = { startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, round: 0, score1: 0, score2: 0, started: 0, finished: 0, blocked: 0, idle: 1 };\r\n                    this.entity = {};\r\n                    this.completion = { hair: 0, glasses: 0, shirt: 0, pants: 0 };\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: n, seed: t, level: c, gameIndex: u };\r\n                    this.randomizer = i.seedGen.create(t.toString());\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new r.GameScene);\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 0, -.002) }));\r\n                    this.ui = h.createUI(this.scene);\r\n                    var l = this.modelDefinition = { hair: this.getRandomInt(1, 10), shirt: this.getRandomInt(1, 5), pants: this.getRandomInt(1, 5), glasses: this.getRandomInt(1, 5) }, d = -.05;\r\n                    this.entity.model = s.createModel(this.scene, { modelDefinition: l, position: new Vector3(0 + d, 2, 0), scale: new Vector3(1.5, 1.5, 1), showLabel: \"model\" });\r\n                    this.dollModel1 = s.createModel(this.scene, { modelDefinition: { hair: 0, shirt: 0, pants: 0, glasses: 0 }, position: new Vector3(-1.5 + d, 2, 0), scale: new Vector3(1.5, 1.5, 1) });\r\n                    this.dollModel2 = s.createModel(this.scene, { modelDefinition: { hair: 0, shirt: 0, pants: 0, glasses: 0 }, position: new Vector3(1.5 + d, 2, 0), scale: new Vector3(1.5, 1.5, 1) });\r\n                    this.collection = o.createCollection(this.getRandomInt.bind(this), l);\r\n                    void 0;\r\n                    void 0;\r\n                    this.collection.forEach(function (e) { if (!e)\r\n                        debugger; });\r\n                    try {\r\n                        void 0;\r\n                        n && (this.collectionControl = a.createCollectionControl(this.scene, { collection: this.collection, side: n }));\r\n                    }\r\n                    catch (e) {\r\n                        debugger;\r\n                    }\r\n                    this.roundResult1 = h.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = h.createRoundResult(this.scene, { player: 2 });\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.primaryButtonCallback = this.primaryButtonCallback.bind(this);\r\n                    this.secondaryButtonCallback = this.secondaryButtonCallback.bind(this);\r\n                    this.clickCallback = this.clickCallback.bind(this);\r\n                    engine.addSystem(this);\r\n                }\r\n                f.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                f.prototype.init = function () { l.playLoop(\"money\", { volume: .5 }); u.updateSpritePanel({ uvs: d.getSpriteUv(5, 0, 192, 128) }); u.showSpritePanel(); this.state.initialized = 1; };\r\n                f.prototype.start = function () { this.scene.setParent(this.root); this.state.started = 1; if (this.gameSetup.currentPlayer) {\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, 0, this.primaryButtonCallback);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, 0, this.secondaryButtonCallback);\r\n                    Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.POINTER, 0, this.clickCallback);\r\n                } };\r\n                f.prototype.startRound = function () {\r\n                    var _this = this;\r\n                    this.state.round++;\r\n                    void 0;\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                    this.ui.hideTime();\r\n                    this.state.blocked = 0;\r\n                    this.state.lastRoundStartTime = this.state.roundStartTime;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.state.waitingRound = 0;\r\n                    var e = this.modelDefinition = { hair: this.getRandomInt(1, 10), shirt: this.getRandomInt(1, 5), pants: this.getRandomInt(1, 5), glasses: this.getRandomInt(1, 5) };\r\n                    Object.keys(e).forEach(function (t) { _this.entity.model.update({ type: t, index: e[t] }); _this.dollModel1.update({ type: t, index: 0 }); _this.dollModel2.update({ type: t, index: 0 }); _this.completion[t] = 0; });\r\n                    this.collection = o.createCollection(this.getRandomInt.bind(this), e);\r\n                    this.gameSetup.currentPlayer && (this.collectionControl = a.createCollectionControl(this.scene, { collection: this.collection, side: this.gameSetup.currentPlayer }));\r\n                };\r\n                f.prototype.block = function () { this.state.blocked = 1; };\r\n                f.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                f.prototype.finishRound = function (_a) {\r\n                    var _this = this;\r\n                    var e = _a.winner;\r\n                    void 0;\r\n                    this.state.blocked = 1;\r\n                    this.state[\"score\" + e] += 1;\r\n                    this.ui.updateScore({ player: e, score: this.state[\"score\" + e] });\r\n                    e === this.gameSetup.currentPlayer ? l.playOnce(\"wow\") : l.playOnce(\"fail\");\r\n                    this.state.waitingRound = 1;\r\n                    this.collectionControl && this.collectionControl.dispose();\r\n                    Object.keys(this.modelDefinition).forEach(function (e) { _this.entity.model.update({ type: e, index: 0 }); });\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                f.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                f.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return _this.callbacks.onFinishRound = null; };\r\n                };\r\n                f.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                f.prototype.setRoundStartTime = function (e) { this.state.roundStartTime = e; };\r\n                f.prototype.shareState = function (_a) {\r\n                    var _this = this;\r\n                    var e = _a.player, t = _a.completion, n = _a.timeSinceStart;\r\n                    Object.keys(t).forEach(function (n) { t[n] && _this[\"dollModel\" + e].update({ type: n, index: _this.modelDefinition[n] }); });\r\n                    n && this.ui.updateTime({ player: e, time: n });\r\n                };\r\n                f.prototype.clickCallback = function () {\r\n                    var _this = this;\r\n                    if (this.state.blocked)\r\n                        return;\r\n                    void 0;\r\n                    var e = this.collectionControl.getCurrent();\r\n                    if (!e)\r\n                        debugger;\r\n                    if (this.modelDefinition[e.type] === e.index) {\r\n                        void 0;\r\n                        l.playOnce(\"ok\");\r\n                        this[\"dollModel\" + this.gameSetup.currentPlayer].update(e);\r\n                        this.completion[e.type] = 1;\r\n                        if (Object.values(this.completion).every(function (e) { return e; })) {\r\n                            void 0;\r\n                            var e_30 = c.getTimeSinceStart(0 === this.state.round ? this.state.startTime : this.state.lastRoundStartTime);\r\n                            this.ui.updateTime({ player: this.gameSetup.currentPlayer, time: e_30 });\r\n                            this.callbacks.onShareState({ player: this.gameSetup.currentPlayer, completion: this.completion, timeSinceStart: e_30 });\r\n                            this.state.round < p - 1 ? this.callbacks.onFinishRound({ time: e_30, player: this.gameSetup.currentPlayer, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round }) : this.callbacks.onFinish({ time: e_30, isWinner: this.gameSetup.currentPlayer, gameIndex: this.gameSetup.gameIndex, roundIndex: this.state.round });\r\n                        }\r\n                        else\r\n                            this.callbacks.onShareState({ player: this.gameSetup.currentPlayer, completion: this.completion });\r\n                    }\r\n                    else {\r\n                        void 0;\r\n                        l.playOnce(\"fail\");\r\n                        this.state.blocked = 1;\r\n                        this.collectionControl.showError();\r\n                        setTimeout(function () { _this.collectionControl.hideError(); _this.state.blocked = 0; }, 500);\r\n                    }\r\n                };\r\n                f.prototype.primaryButtonCallback = function () { this.state.blocked || this.collectionControl.previous(); };\r\n                f.prototype.secondaryButtonCallback = function () { this.state.blocked || this.collectionControl.next(); };\r\n                f.prototype.destroy = function () { l.stopSound(\"money\"); u.hideSpritePanel(); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, this.primaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, this.secondaryButtonCallback); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.POINTER, this.clickCallback); };\r\n                f.prototype.update = function (e) { if (this.state.initialized) {\r\n                    !this.state.waitingRound && !this.state.started && Date.now() >= this.state.startTime && this.start();\r\n                    this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime && this.startRound();\r\n                } };\r\n                f.prototype.getRandomInt = function (e, t, n) { var i = e + Math.floor(this.randomizer.random() * (t - e + 1)); return i === n ? this.getRandomInt(e, t, n) : i; };\r\n                return f;\r\n            }());  t.CostumeGame = f; f.id = \"Costume\"; f.instructions = \"You have to complete the costume\\n    before your opponent\\n    E,F to roll parts\\n    CLICK to select\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createModel = void 0; var i = n(64), r = n(65), s = n(66), o = n(67), a = n(1), c = n(0), u = function (e, _a) {\r\n            var t = _a.modelDefinition, n = _a.position, u = _a.scale, _b = _a.showLabel, l = _b === void 0 ? \"\" : _b;\r\n            var h = new Entity;\r\n            h.addComponent(new Transform({ position: n, scale: u }));\r\n            var d = new Entity, p = new PlaneShape;\r\n            p.withCollisions = 0;\r\n            p.isPointerBlocker = 0;\r\n            p.uvs = c.getSpriteUv(16, 112, 64, 128);\r\n            var f = undefined;\r\n            (new Material).albedoColor = new Color3(1, 0, 0);\r\n            var m = new Transform({ scale: new Vector3(-1, 2, -1), position: new Vector3(0, 0, 0) });\r\n            m.rotation.setEuler(0, 180, 0);\r\n            d.addComponent(m);\r\n            d.addComponent(a.spriteMaterial);\r\n            d.addComponent(p);\r\n            d.setParent(h);\r\n            h.setParent(e);\r\n            var g = { glasses: null, hair: null, shirt: null, pants: null };\r\n            g.glasses = r.createGlasses(h, { partDefinition: { type: \"glasses\", index: t.glasses } });\r\n            g.hair = i.createHair(h, { partDefinition: { type: \"hair\", index: t.hair } });\r\n            g.pants = o.createPants(h, { partDefinition: { type: \"pants\", index: t.pants } });\r\n            g.shirt = s.createShirt(h, { partDefinition: { type: \"shirt\", index: t.shirt } });\r\n            if (l) {\r\n                var e_31 = new Entity;\r\n                e_31.setParent(h);\r\n                var t_29 = new TextShape(\"model\");\r\n                t_29.fontSize = 2;\r\n                t_29.font = new Font(Fonts.SanFrancisco_Heavy);\r\n                e_31.addComponent(t_29);\r\n                e_31.addComponent(new Transform({ position: new Vector3(0, 1.3, 0) }));\r\n            }\r\n            var y = function (_a) {\r\n                var e = _a.partDefinition;\r\n            };\r\n            return { entity: h, update: function (e) { if (!e)\r\n                    debugger; g[e.type].updateIndex(e.index); }, dispose: function () { } };\r\n        }; t.createModel = u; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createHair = void 0; var i = n(11), r = n(1), s = n(0), o = function (e, _a) {\r\n            var t = _a.partDefinition;\r\n            var n = 4 / 128 / 2, o = new Entity, a = new PlaneShape;\r\n            a.withCollisions = 0;\r\n            var c = new Transform({ position: new Vector3(.25 - 15 * n, .375 + 23 * n, -3e-4), scale: new Vector3(1, 1, 1) });\r\n            o.addComponent(a);\r\n            o.addComponent(c);\r\n            o.addComponent(r.spriteMaterial);\r\n            o.setParent(e);\r\n            a.uvs = s.getSpriteUv(t.index, i.PART_OFFSET_INDEX[\"hair\"], i.PART_SIZE_WIDTH[\"hair\"]);\r\n            return { dispose: function () { e.setParent(null); engine.removeEntity(o); }, updateIndex: function (e) { a.uvs = s.getSpriteUv(e, i.PART_OFFSET_INDEX[\"hair\"], i.PART_SIZE_WIDTH[\"hair\"]); } };\r\n        }; t.createHair = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createGlasses = void 0; var i = n(11), r = n(1), s = n(0), o = function (e, _a) {\r\n            var t = _a.partDefinition;\r\n            var n = 4 / 128 / 2, o = new Entity, a = new PlaneShape;\r\n            a.withCollisions = 0;\r\n            var c = new Transform({ position: new Vector3(.25 - 15 * n, .375 + 8 * n, -5e-4), scale: new Vector3(1, 1, 1) });\r\n            o.addComponent(a);\r\n            o.addComponent(c);\r\n            o.addComponent(r.spriteMaterial);\r\n            o.setParent(e);\r\n            a.uvs = s.getSpriteUv(t.index, i.PART_OFFSET_INDEX[\"glasses\"], i.PART_SIZE_WIDTH[\"glasses\"], i.PART_SIZE_HEIGHT[\"glasses\"]);\r\n            return { dispose: function () { e.setParent(null); engine.removeEntity(o); }, updateIndex: function (e) { a.uvs = s.getSpriteUv(e, i.PART_OFFSET_INDEX[\"glasses\"], i.PART_SIZE_WIDTH[\"glasses\"], i.PART_SIZE_HEIGHT[\"glasses\"]); } };\r\n        }; t.createGlasses = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createShirt = void 0; var i = n(11), r = n(1), s = n(0), o = function (e, _a) {\r\n            var t = _a.partDefinition;\r\n            var n = 4 / 128 / 2, o = new Entity, a = new PlaneShape;\r\n            a.withCollisions = 0;\r\n            var c = new Transform({ position: new Vector3(4 * n, .5 - 15 * n, -.002), scale: new Vector3(1, 1, 1) });\r\n            o.addComponent(a);\r\n            o.addComponent(c);\r\n            o.addComponent(r.spriteMaterial);\r\n            o.setParent(e);\r\n            a.uvs = s.getSpriteUv(t.index, i.PART_OFFSET_INDEX[\"shirt\"], i.PART_SIZE_WIDTH[\"shirt\"]);\r\n            return { dispose: function () { e.setParent(null); engine.removeEntity(o); }, updateIndex: function (e) { a.uvs = s.getSpriteUv(e, i.PART_OFFSET_INDEX[\"shirt\"], i.PART_SIZE_WIDTH[\"shirt\"]); } };\r\n        }; t.createShirt = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createPants = void 0; var i = n(11), r = n(1), s = n(0), o = function (e, _a) {\r\n            var t = _a.partDefinition;\r\n            var n = 4 / 128 / 2, o = new Entity, a = new PlaneShape;\r\n            a.withCollisions = 0;\r\n            var c = new Transform({ position: new Vector3(5 * n, 2 * n - .5, -.001), scale: new Vector3(1, 1, 1) });\r\n            o.addComponent(a);\r\n            o.addComponent(c);\r\n            o.addComponent(r.spriteMaterial);\r\n            o.setParent(e);\r\n            a.uvs = s.getSpriteUv(t.index, i.PART_OFFSET_INDEX[\"pants\"], i.PART_SIZE_WIDTH[\"pants\"]);\r\n            return { dispose: function () { e.setParent(null); engine.removeEntity(o); }, updateIndex: function (e) { a.uvs = s.getSpriteUv(e, i.PART_OFFSET_INDEX[\"pants\"], i.PART_SIZE_WIDTH[\"pants\"]); } };\r\n        }; t.createPants = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createCollection = t.MAX_INDEX = void 0; t.MAX_INDEX = { hair: 10, glasses: 5, shirt: 5, pants: 5 }; var i = [\"hair\", \"glasses\", \"shirt\", \"pants\"], r = function (e, n) { void 0; var r = Object.keys(n).map(function (e) { return ({ type: e, index: n[e] }); }), s = __spread(r); i.forEach(function (n) { var i = 3; var _loop_1 = function () {\r\n            var i_12 = e(1, t.MAX_INDEX[n]);\r\n            var o_10 = r.find(function (e) { return e.type === n; });\r\n            for (; i_12 === o_10.index || s.find(function (e) { return e.type === n && e.index === i_12; });)\r\n                i_12 = e(1, t.MAX_INDEX[n]);\r\n            s.push({ type: n, index: i_12 });\r\n        }; for (; i--;) {\r\n            _loop_1();\r\n        } }); return o(s); function o(t) { for (var n = t.length, i, r; 0 !== n;) {\r\n            r = Math.floor(e(1, 100) / 100 * n);\r\n            i = t[n -= 1];\r\n            t[n] = t[r];\r\n            t[r] = i;\r\n        } return t; } }; t.createCollection = r; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createCollectionControl = void 0; var i = n(11), r = n(35), s = n(1), o = n(0), a = n(2), c = .7, u = 0, l = -.7, h = function (e, _a) {\r\n            var t = _a.collection, n = _a.side, _b = _a.avoidAdd, h = _b === void 0 ? 0 : _b;\r\n            var d = new Entity, p = new Entity, f = new Entity, m = new Entity, g = new Entity, y = new TextShape(\"E\");\r\n            y.fontSize = 2;\r\n            g.addComponent(y);\r\n            g.addComponent(new Transform({ position: new Vector3(1 === n ? -.3 : .3, .8, -.002) }));\r\n            g.setParent(d);\r\n            var v = new Entity, S = new TextShape(\"F\");\r\n            S.fontSize = 2;\r\n            v.addComponent(S);\r\n            v.addComponent(new Transform({ position: new Vector3(1 === n ? -.3 : .3, -.75, -.002) }));\r\n            v.setParent(d);\r\n            p.setParent(d);\r\n            f.setParent(d);\r\n            m.setParent(d);\r\n            var b = t[0], w = t[1], T = t[2];\r\n            var C = 1;\r\n            var _ = new PlaneShape, P = new PlaneShape, E = new PlaneShape, I = new Vector3(.5, .5, .5);\r\n            p.addComponent(new Transform({ position: new Vector3(0, c, 0), scale: I }));\r\n            m.addComponent(new Transform({ position: new Vector3(0, u, 0), scale: new Vector3(1, 1, 1) }));\r\n            f.addComponent(new Transform({ position: new Vector3(0, l, 0), scale: I }));\r\n            p.addComponent(_);\r\n            m.addComponent(E);\r\n            f.addComponent(P);\r\n            if (!b || !w || !T)\r\n                debugger;\r\n            _.uvs = o.getSpriteUv(b.index, i.PART_OFFSET_INDEX[b.type], i.PART_SIZE_WIDTH[b.type], i.PART_SIZE_HEIGHT[b.type]);\r\n            E.uvs = o.getSpriteUv(w.index, i.PART_OFFSET_INDEX[w.type], i.PART_SIZE_WIDTH[w.type], i.PART_SIZE_HEIGHT[w.type]);\r\n            P.uvs = o.getSpriteUv(T.index, i.PART_OFFSET_INDEX[T.type], i.PART_SIZE_WIDTH[T.type], i.PART_SIZE_HEIGHT[T.type]);\r\n            p.addComponent(s.spriteMaterial);\r\n            m.addComponent(s.spriteMaterial);\r\n            f.addComponent(s.spriteMaterial);\r\n            d.addComponent(new Transform({ position: new Vector3(1 === n ? -2.5 : 2.5, 2, -.001) }));\r\n            h || d.setParent(e);\r\n            var O = r.createCross(d, { position: new Vector3(0, 0, -.003), scale: I });\r\n            O.hide();\r\n            x(C);\r\n            return { entity: d, hide: function () { d.setParent(null); engine.removeEntity(d); }, show: function () { d.setParent(e); }, dispose: function () { d.setParent(null); engine.removeEntity(d); d.children; }, getCurrent: function () { return t[C]; }, next: function () { a.playOnce(\"swing\"); C = A(C); x(C); }, previous: function () { a.playOnce(\"swing\"); C = R(C); x(C); }, showError: function () { O.show(); }, hideError: function () { O.hide(); } };\r\n            function R(e) { return e - 1 < 0 ? t.length - 1 : e - 1; }\r\n            function A(e) { return e + 1 > t.length - 1 ? 0 : e + 1; }\r\n            function x(e) { var n = R(e), r = A(e), s = t[n], a = t[e], h = t[r], d = m.getComponent(Transform), g = d.position; if (!s || !a || !h)\r\n                debugger; g.set(g.x, u - i.PART_TYPE_OFFSET_Y[a.type] * d.scale.y, g.z); var y = p.getComponent(Transform), v = y.position; v.set(v.x, c - i.PART_TYPE_OFFSET_Y[s.type] * y.scale.y, v.z); var S = f.getComponent(Transform), b = S.position; b.set(b.x, l - i.PART_TYPE_OFFSET_Y[h.type] * S.scale.y, b.z); _.uvs = o.getSpriteUv(s.index, i.PART_OFFSET_INDEX[s.type], i.PART_SIZE_WIDTH[s.type], i.PART_SIZE_HEIGHT[s.type]); E.uvs = o.getSpriteUv(a.index, i.PART_OFFSET_INDEX[a.type], i.PART_SIZE_WIDTH[a.type], i.PART_SIZE_HEIGHT[a.type]); P.uvs = o.getSpriteUv(h.index, i.PART_OFFSET_INDEX[h.type], i.PART_SIZE_WIDTH[h.type], i.PART_SIZE_HEIGHT[h.type]); }\r\n        }; t.createCollectionControl = h; }, function (e, t, n) { var i = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createScreen = void 0; var r = n(1), s = n(0), o = n(35), a = .3; var c = /** @class */ (function () {\r\n            function e(e, t) {\r\n                this.index = e;\r\n                this.isObstacle = t;\r\n            }\r\n            return e;\r\n        }()); c = i([Component(\"ObstacleGame-step\")], c); var u = /** @class */ (function () {\r\n            function e() {\r\n            }\r\n            return e;\r\n        }()); u = i([Component(\"ObstacleGame-player\")], u); var l = function (e, _a) {\r\n            var t = _a.player, n = _a.track;\r\n            var i = new TextShape(\"E\");\r\n            i.withCollisions = 0;\r\n            i.fontSize = 4;\r\n            i.font = new Font(Fonts.SanFrancisco_Heavy);\r\n            i.shadowOffsetX = 1;\r\n            i.shadowOffsetY = 1;\r\n            i.shadowColor = Color3.FromHexString(\"#000000\");\r\n            var u = { onMove: null, onFinish: null }, l = { moving: 0, jumping: 0, moveCount: 0, currentStep: 0, jumps: 0 };\r\n            var h;\r\n            h = new Entity;\r\n            h.setParent(e);\r\n            var d = o.createCross(h, { position: new Vector3(1.5, 3, -.001), scale: new Vector3(1, 1, 1) });\r\n            d.hide();\r\n            h.addComponent(new Transform({ position: new Vector3(2 === t ? 0 : -3, 0, 0) }));\r\n            var p = new Entity, f = new PlaneShape;\r\n            f.withCollisions = 0;\r\n            f.uvs = s.getSpriteUv(2, 11, 96, 128);\r\n            p.addComponent(r.spriteMaterial);\r\n            p.addComponent(f);\r\n            p.addComponent(new Transform({ position: new Vector3(1.5, 2, 0), scale: new Vector3(3, 4, 1) }));\r\n            p.setParent(h);\r\n            var m = 2060, g = new s.SpriteAnimationSystem(h, { frames: [{ uvs: s.getSpriteUv(8, m, 16, 16) }, { uvs: s.getSpriteUv(1, m, 16, 16) }, { uvs: s.getSpriteUv(2, m, 16, 16) }, { uvs: s.getSpriteUv(3, m, 16, 16) }, { uvs: s.getSpriteUv(4, m, 16, 16) }, { uvs: s.getSpriteUv(4, m, 16, 16) }, { uvs: s.getSpriteUv(5, m, 16, 16) }, { uvs: s.getSpriteUv(6, m, 16, 16) }, { uvs: s.getSpriteUv(7, m, 16, 16) }, { uvs: s.getSpriteUv(8, m, 16, 16) }, { uvs: s.getSpriteUv(8, m + 64, 16, 16) }], scale: new Vector3(.5, .5, 1), position: new Vector3(.3 * 3 + .15, 1.9, -.002), time: .1 });\r\n            g.init();\r\n            var y = [];\r\n            n.forEach(function (e, i) { var r = new Entity; r.addComponent(new c(i, e)); var s = new PlaneShape; s.withCollisions = 0; var o = new Material; o.transparencyMode = TransparencyMode.ALPHA_BLEND; o.albedoColor = e ? new Color4(1, 0, 0, 0) : 1 === t ? new Color4(0, 0, 1, 0) : new Color4(1, 1, 0, 0); o.emissiveColor = e ? new Color3(1, 0, 0) : 1 === t ? Color3.FromHexString(\"#0000ff\") : Color3.FromHexString(\"#ffff00\"); o.emissiveIntensity = 3; if (i === n.length - 1) {\r\n                o.albedoColor = new Color4(0, 1, 0, 0);\r\n                o.emissiveColor = new Color3(0, 1, 0);\r\n            } r.addComponent(s); r.addComponent(o); e ? r.addComponent(new Transform({ position: new Vector3(.3 * i + .15 - .1, 1.75, -.001), scale: new Vector3(.1, .1, 1) })) : r.addComponent(new Transform({ position: new Vector3(.3 * i + .15, 1.95, -.001), scale: new Vector3(.02, .02, 1) })); y.push(r); r.setParent(h); });\r\n            var v = new Entity;\r\n            v.addComponent(i);\r\n            v.addComponent(new Transform({ position: new Vector3(1, 1.3, -.002) }));\r\n            v.setParent(h);\r\n            var S = function (e) { return e > a ? Math.max(0, .4 - l.moveCount / a * .4 / 2) : Math.min(.4, l.moveCount / a * .4); }, b = function () { Object.values(y).forEach(function (e, t) { e.visible = 0; }); }, w = undefined, T = undefined, C = undefined, _ = undefined, P = undefined, E = function () { y.forEach(function (e, i) { var r = e.getComponent(Transform), s = e.getComponent(PlaneShape), o = e.getComponent(Material), a = e.getComponent(c).isObstacle; if (r.position.x < .2 || r.position.x >= 2.999)\r\n                o.albedoColor = a ? new Color4(1, 0, 0, 0) : 1 === t ? new Color4(0, 0, 1, 0) : new Color4(1, 1, 0, 0);\r\n            else {\r\n                o.albedoColor = a ? new Color4(1, 0, 0, 1) : 1 === t ? new Color4(0, 0, 1, 1) : new Color4(1, 1, 0, 1);\r\n                if (i === n.length - 1) {\r\n                    o.albedoColor = new Color4(0, 1, 0, 1);\r\n                    o.emissiveColor = new Color3(0, 1, 0);\r\n                }\r\n            } }); n[l.currentStep + 4] ? i.value = \"CLICK\" : l.currentStep % 2 == 0 ? i.value = \"E\" : i.value = \"F\"; }, I = function (e) { if (l.moving) {\r\n                l.moveCount += e;\r\n                y.forEach(function (e, t) { var n = undefined, i = e.getComponent(Transform).position, r = .3 * t + .15, s = .3 * l.currentStep, o = l.moveCount / a * .3; i.set(r - s - o, i.y, i.z); });\r\n                if (l.jumping) {\r\n                    var e_32 = g.globalOptions.position, t_30 = S(l.moveCount);\r\n                    e_32.set(e_32.x, t_30 + 1.9, e_32.z);\r\n                }\r\n            } if (l.moveCount >= (l.jumping ? 2 * a : a)) {\r\n                l.jumping && l.jumps++;\r\n                l.currentStep += l.jumping ? 2 : 1;\r\n                l.moving = l.jumping = 0;\r\n                l.moveCount = 0;\r\n                u.onMove && u.onMove(l.currentStep);\r\n                u.onFinish && l.currentStep + 3 === n.length - 1 && u.onFinish();\r\n                E();\r\n            } }, O = undefined;\r\n            return { getNextStepValue: function () { return n[l.currentStep + 1 + 3]; }, moveScreen: function (e) { l.moving = 1; l.jumping = !!e; g.state.playing || (e ? g.play([9, 0, 1], { loop: 0, time: .2 }) : l.currentStep % 2 == 0 ? g.play([1, 2, 3], { loop: 0, time: .1 }) : g.play([5, 6, 7], { loop: 0, time: .1 })); }, getScreenState: function () { return l; }, onMove: function (e) { u.onMove = e; return function () { return u.onMove = null; }; }, onFinishScreen: function (e) { u.onFinish = e; return function () { return u.onFinish = null; }; }, handleVisibility: E, updateScreen: I, destroy: function () { h.setParent(null); engine.removeEntity(h); u.onFinish = null; u.onMove = null; }, getTotalSteps: function () { return n.length; }, showCross: function () { return d.show(); }, hideCross: function () { return d.hide(); } };\r\n        }; t.createScreen = l; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.SammichGame = void 0; var i = n(72), r = n(2), s = n(4), o = 5;\r\n            var a = /** @class */ (function () {\r\n                function a(e, _a) {\r\n                    var _this = this;\r\n                    var t = _a.currentPlayer, n = _a.seed, r = _a.level, o = _a.gameIndex;\r\n                    this.gameSetup = { level: 1, currentPlayer: 0, seed: null };\r\n                    this.callbacks = { onFinish: null, onShareState: null, onFinishRound: null };\r\n                    this.state = { started: 0, initialized: 0, blocked: 0, startTime: Number.MAX_VALUE, roundStartTime: Number.MAX_VALUE, lastRoundStartTime: Number.MAX_VALUE, waitingRound: 0, round: 0, score: 0, score1: 0, score2: 0 };\r\n                    this.scene = new Entity;\r\n                    this.scene.addComponent(new Transform({ position: new Vector3(0, 2, -.001) }));\r\n                    this.ui = s.createUI(this.scene, { position: new Vector3(0, -2, 0) });\r\n                    this.root = e;\r\n                    this.gameSetup = { currentPlayer: t, seed: n, level: r, gameIndex: o };\r\n                    this.screen1 = i.createScreen(this.scene, { player: 1, seed: n, owner: 1 === t });\r\n                    this.screen2 = i.createScreen(this.scene, { player: 2, seed: n, owner: 2 === t });\r\n                    t && this[\"screen\" + t].onStateChange(function (e) { void 0; void 0; _this.ui.updateScore({ player: _this.gameSetup.currentPlayer, score: e.score + _this.state.score }); _this.callbacks.onShareState({ player: t, state: e, score: e.score + _this.state.score }); });\r\n                    engine.addSystem(this);\r\n                    this.roundResult1 = s.createRoundResult(this.scene, { player: 1 });\r\n                    this.roundResult2 = s.createRoundResult(this.scene, { player: 2 });\r\n                    var a = this.roundResult1.getTransform().position, c = this.roundResult2.getTransform().position;\r\n                    a.set(a.x, a.y - 2, a.z);\r\n                    c.set(c.x, c.y - 2, c.z);\r\n                    this.roundResult1.hide();\r\n                    this.roundResult2.hide();\r\n                }\r\n                a.prototype.startRound = function () { this.state.round++; this.state.lastRoundStartTime = this.state.roundStartTime; this.state.roundStartTime = Number.MAX_VALUE; this.state.waitingRound = 0; this.gameSetup.currentPlayer && this[\"screen\" + this.gameSetup.currentPlayer].start({ level: this.state.round }); };\r\n                a.prototype.setRoundStartTime = function (e) { this.state.roundStartTime = e; };\r\n                a.prototype.setStartTime = function (e) { this.state.startTime = e; };\r\n                a.prototype.block = function () { this.state.blocked = 1; };\r\n                a.prototype.init = function () { this.scene.setParent(this.root); this.state.initialized = 1; r.playLoop(\"music2\", { volume: .5 }); };\r\n                a.prototype.start = function () {\r\n                    var _this = this;\r\n                    void 0;\r\n                    this.state.started = 1;\r\n                    this.state.startTime = Number.MAX_VALUE;\r\n                    this.state.roundStartTime = Number.MAX_VALUE;\r\n                    this.screen1.start({ level: this.state.round + 1 });\r\n                    this.screen2.start({ level: this.state.round + 1 });\r\n                    this.gameSetup.currentPlayer && this[\"screen\" + this.gameSetup.currentPlayer].onComplete(function (e) { e >= 6 ? r.playOnce(\"wow\") : e >= 4; _this.state.score += e; _this.state[\"score\" + _this.gameSetup.currentPlayer] = _this.state.score; var t = _this.state[\"score\" + _this.gameSetup.currentPlayer]; _this.ui.updateScore({ player: _this.gameSetup.currentPlayer, score: t }); void 0; setTimeout(function () { void 0; if (_this.state.round < o - 1 || _this.state.score1 === _this.state.score2)\r\n                        _this.callbacks.onFinishRound({ player: _this.gameSetup.currentPlayer, score: t, gameIndex: _this.gameSetup.gameIndex, roundIndex: _this.state.round });\r\n                    else {\r\n                        void 0;\r\n                        r.stopSound(\"music2\");\r\n                        _this.callbacks.onFinish({ isWinner: 1, time: -1 * t, score: t, gameIndex: _this.gameSetup.gameIndex, roundIndex: _this.state.round });\r\n                    } }, 1e3); });\r\n                };\r\n                a.prototype.finish = function (_a) {\r\n                    var e = _a.winner;\r\n                    var t = 1 === e ? 2 : 1;\r\n                    this.roundResult1.show();\r\n                    this.roundResult2.show();\r\n                    this[\"roundResult\" + e].update(1);\r\n                    this[\"roundResult\" + t].update(0);\r\n                };\r\n                a.prototype.finishRound = function (_a) {\r\n                    var e = _a.winner;\r\n                    this.state.waitingRound = 1;\r\n                    this.screen1.reset();\r\n                    this.screen2.reset();\r\n                };\r\n                a.prototype.destroy = function () { this.screen1.dispose(); this.screen2.dispose(); this.scene.setParent(null); engine.removeEntity(this.scene); engine.removeSystem(this); this.callbacks.onShareState = null; this.callbacks.onFinish = null; this.callbacks.onFinishRound = null; };\r\n                a.prototype.shareState = function (e) { var t = e.state, n = e.player; void 0; this.ui.updateScore({ player: n, score: e.score }); this[\"screen\" + n].setState(t); this.state[\"score\" + n] = e.score; };\r\n                a.prototype.onShareState = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onShareState = e;\r\n                    return function () { return _this.callbacks.onShareState = null; };\r\n                };\r\n                a.prototype.onFinish = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinish = e;\r\n                    return function () { return _this.callbacks.onFinish = null; };\r\n                };\r\n                a.prototype.onFinishRound = function (e) {\r\n                    var _this = this;\r\n                    this.callbacks.onFinishRound = e;\r\n                    return function () { return _this.callbacks.onFinishRound = null; };\r\n                };\r\n                a.prototype.update = function (e) { if (this.state.initialized)\r\n                    if (!this.state.waitingRound && !this.state.started && Date.now() >= this.state.startTime)\r\n                        this.start();\r\n                    else {\r\n                        this.state.started && this.state.waitingRound && Date.now() >= this.state.roundStartTime && this.startRound();\r\n                        if (!this.state.waitingRound && this.state.started) {\r\n                            this.getPlayerScreen(1).getScreenState().idle || this.getPlayerScreen(1).updateScreen(e);\r\n                            this.getPlayerScreen(2).getScreenState().idle || this.getPlayerScreen(2).updateScreen(e);\r\n                        }\r\n                    } };\r\n                a.prototype.getPlayerScreen = function (e) { return this[\"screen\" + e]; };\r\n                return a;\r\n            }());  t.SammichGame = a; a.id = \"Sammich\"; a.instructions = \"Move to sides with E and F\\nto build the perfect sammich\"; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createScreen = void 0; var i = n(1), r = n(0), s = n(2), o = n(3), a = [1, 2, 3, 4, 6, 7, 8], c = function (e, _a) {\r\n            var t = _a.spriteIndex, n = _a.position;\r\n            var s = new Entity;\r\n            s.setParent(e);\r\n            var o = new PlaneShape;\r\n            o.withCollisions = 0;\r\n            s.addComponent(i.spriteMaterial);\r\n            s.addComponent(o);\r\n            var a = new Transform({ scale: new Vector3(.5, .5, .5), position: n });\r\n            s.addComponent(a);\r\n            o.uvs = r.getSpriteUv(t, 2048, 16, 16);\r\n            var c = { onBase: 0, baseX: 0, currentRound: 1 };\r\n            return { setX: function (e) { a.position.set(e, a.position.y, a.position.z); }, setY: function (e) { a.position.set(a.position.x, e, a.position.z); }, getX: function () { return a.position.x; }, getY: function () { return a.position.y; }, isOnBase: function () { return c.onBase; }, getBaseX: function () { return c.baseX; }, setOnBase: function (e, t) { c.onBase = e; c.baseX = t; }, dispose: function () { s.setParent(null); s.removeComponent(Transform); s.removeComponent(i.spriteMaterial); s.removeComponent(PlaneShape); engine.removeEntity(s); } };\r\n        }, u = function (e, _a) {\r\n            var t = _a.seed, n = _a.player, u = _a.owner;\r\n            var l = new Entity, h = { dtCount: 0, idle: 1, level: 1, basePosition: 0, layers: [], score: 0 }, d = o.seedGen.create(t.toString()), p = new PlaneShape;\r\n            p.withCollisions = 0;\r\n            p.uvs = r.getSpriteUv(1, 11, 96, 128);\r\n            l.setParent(e);\r\n            l.addComponent(new Transform({ position: new Vector3(1 === n ? -1.5 : 1.5, 0, -0) }));\r\n            var f = new Entity, m = new Transform({ scale: new Vector3(3, 4, 1) });\r\n            f.addComponent(p);\r\n            f.addComponent(i.spriteMaterial);\r\n            f.addComponent(m);\r\n            f.setParent(l);\r\n            var g = c(l, { spriteIndex: 9, position: new Vector3(0, -1.125, -.002) }), y = .25, v = function (e) { Object.assign(h, e); g.setX(h.basePosition); h.layers.forEach(function (e, t) { I[t].setX(g.getX() + e); var n = g.getY() + t * C + _; I[t].setY(n); }); }, S = function (e) { Object.assign(h, e); x.onStateChange && x.onStateChange(h); }, b = function (e) { x.onStateChange = e; return function () { return x.onStateChange = null; }; }, w = function () { if (h.idle && !u)\r\n                return; var e = g.getX() === +y ? +y : g.getX() + y; g.setX(e); I.forEach(function (e) { e.isOnBase() && e.setX(g.getX() - e.getBaseX()); }); S({ basePosition: g.getX() }); }, T = function () { if (h.idle && !u)\r\n                return; var e = g.getX() === -y ? -y : g.getX() - y; g.setX(e); I.forEach(function (e, t) { e.isOnBase() && e.setX(g.getX() - e.getBaseX()); }); S({ basePosition: g.getX() }); };\r\n            if (u) {\r\n                Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, 0, T);\r\n                Input.instance.subscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, 0, w);\r\n            }\r\n            var C = .05, _ = .1, P = 7, E = function (e) { if (h.idle)\r\n                return; var t = .7 * Math.min(h.level, P) + .2, n = 1.75; h.dtCount += e; I.forEach(function (e, i) { var r = i / t + .03 * i * t; if (h.dtCount >= r) {\r\n                var o_11 = g.getY() + i * C + _;\r\n                if (e.getY() <= o_11) {\r\n                    if (!u)\r\n                        return;\r\n                    if (!e.isOnBase()) {\r\n                        e.setOnBase(1, g.getX() - e.getX());\r\n                        if (0 !== e.getBaseX())\r\n                            s.playOnce(\"fail\");\r\n                        else {\r\n                            s.playOnce(\"ok\");\r\n                            h.score++;\r\n                        }\r\n                        S({ score: h.score, layers: __spread(h.layers, [e.getX() - g.getX()]) });\r\n                    }\r\n                }\r\n                else\r\n                    e.setY(Math.max(o_11, n - (h.dtCount - r) * t));\r\n            } }); if (u && I.every(function (e, t) { return e.isOnBase(); })) {\r\n                h.idle = 1;\r\n                var e_33 = 0;\r\n                I.forEach(function (t, n) { 0 === t.getBaseX() && e_33++; });\r\n                x.onComplete && x.onComplete(e_33);\r\n                h.score = 0;\r\n            } };\r\n            var I = [];\r\n            var O = function () { I = Array(5).fill(null).map(function (e, t) { var n = d.random(); var i = Math.floor(3 * n - 1) * y; var r = a[Math.floor(n * a.length)], s = new Vector3(i, 1.75, -.001 * t - .004), o = undefined; return c(l, { spriteIndex: r, position: s }); }); var e = d.random(); var t = Math.floor(3 * e - 1) * y; I.push(c(l, { spriteIndex: 5, position: new Vector3(t, 1.75, -.005 - .004) })); };\r\n            O();\r\n            var R = undefined, A = undefined, x = { onComplete: null, onStateChange: null }, k = undefined, M = undefined, N = undefined;\r\n            return { getScreenState: function () { return h; }, start: function (_a) {\r\n                    var e = _a.level;\r\n                    h.idle = 0;\r\n                    h.level = e;\r\n                }, updateScreen: E, onComplete: function (e) { x.onComplete = e; return function () { return x.onComplete = null; }; }, reset: function () { h.idle = 1; h.dtCount = 0; h.layers = []; h.basePosition = 0; h.score = 0; I.forEach(function (e, t) { e.dispose(); }); O(); }, setState: v, onStateChange: b, dispose: function () { Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.PRIMARY, T); Input.instance.unsubscribe(\"BUTTON_DOWN\", ActionButton.SECONDARY, w); I.forEach(function (e) { return e.dispose(); }); I = []; x.onComplete = null; x.onStateChange = null; } };\r\n        }; t.createScreen = u; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createScreen = void 0; var i = n(0), r = n(1), s = n(19), o = n(3), a = n(2), c = n(74), u = 4 / 128, l = 36 * -u, h = { UP: ActionButton.POINTER, LEFT: ActionButton.PRIMARY, RIGHT: ActionButton.SECONDARY }, d = [12 * u - 1.5 + 8 * u / 2, 28 * u - 1.5 + 8 * u / 2, 44 * u - 1.5 + 8 * u / 2, 60 * u - 1.5 + 8 * u / 2, 76 * u - 1.5 + 8 * u / 2], p = function (e, _a) {\r\n            var t = _a.x, n = _a.index;\r\n            var r = 0;\r\n            var s = { onTake: null }, o = i.createSpriteEntity(e, { position: new Vector3(t, 2 - 15 * u + 8 * u / 2, -.001), scale: new Vector3(8 * u, 8 * u, 1), uvs: i.getSpriteUv(2, 8448, 8, 8) }), c = function () { r = 1; o.getShape().visible = 0; }, l = function (e) { if (r)\r\n                return 0; if (e.y < 2 - 15 * u)\r\n                return 0; if (e.x === t) {\r\n                c();\r\n                a.playOnce(\"ok\");\r\n                return 1;\r\n            } }, h = undefined, d = undefined;\r\n            return { spriteEntity: o, take: c, checkFrog: l, onTake: function (e) { s.onTake = e; return function () { return s.onTake = null; }; }, isTaken: function () { return r; }, index: n };\r\n        }, f = 5, m = function (e, _a) {\r\n            var t = _a.player, n = _a.seed;\r\n            var m = { blocked: 0, lastKey: h.UP, movingFrog: 0, countDt: 0, frogPosition: new Vector3(0, 0 + l, -.009), score: 0, takenSammiches: [0, 0, 0, 0, 0] }, g = new Entity, y = new Entity;\r\n            y.setParent(g);\r\n            g.setParent(e);\r\n            var v = o.seedGen.create(n), S = Array(9).fill(null).map(function (e, t) { return c.createCarPool(g, { track: t, randomizer: v }); }), b = [0, 1, 2, 3, 4], w = Array(f).fill(null).map(function (e, t) { return p(g, { x: d[b[t]], index: t }); });\r\n            g.addComponent(new Transform({ position: new Vector3(1 === t ? -1.5 : 1.5, 2, -0) }));\r\n            y.addComponent(new Transform({ scale: new Vector3(3, 4, 1) }));\r\n            var T = new PlaneShape;\r\n            T.uvs = i.getSpriteUv(9, 11, 96, 128);\r\n            y.addComponent(T);\r\n            y.addComponent(r.spriteMaterial);\r\n            var C = new i.SpriteAnimationSystem(g, { frames: [{ uvs: i.getSpriteUv(1, 8448, 8, 8) }, { uvs: i.getSpriteUv(1, 8576, 8, 8) }], scale: new Vector3(8 * u, 8 * u, 1), position: m.frogPosition, time: .1 });\r\n            C.init();\r\n            var _ = function (e, t) { m.countDt += e; S.forEach(function (t) { return t.update(e); }); if (t) {\r\n                var e_34 = C.getPosition(), t_31 = w.find(function (t, n) { if (t.checkFrog(e_34))\r\n                    return { index: n }; });\r\n                if (t_31) {\r\n                    m.takenSammiches[t_31.index] = 1;\r\n                    m.score++;\r\n                    void 0;\r\n                    x.onStateChange && x.onStateChange(m);\r\n                    return;\r\n                }\r\n                S.forEach(function (t) { if (t.isCollidingFrog(e_34)) {\r\n                    a.playOnce(\"fail\");\r\n                    m.blocked = 1;\r\n                    setTimeout(function () { m.blocked = 0; e_34.set(0, l, e_34.z); x.onStateChange && x.onStateChange(m); }, 200);\r\n                } });\r\n            } }, P = undefined, E = function (e) { if (m.movingFrog || m.blocked)\r\n                return; a.playOnce(\"swing\"); m.movingFrog = 1; C.setRotation(e === h.UP ? 0 : e === h.LEFT ? 90 : 270); C.play([0, 1, 0], { loop: 0, time: .1 }); var t = C.getPosition(); C.addComponentOrReplace(new s.MoveTransformComponent(t, new Vector3(e === h.LEFT ? t.x - 8 * u : e === h.RIGHT ? t.x + 8 * u : t.x, e === h.UP ? t.y + 8 * u : t.y, t.z), .1, function () { m.movingFrog = 0; var e = C.getPosition(); if (e.y >= 1.625)\r\n                if ((e.x + 1.5) / (8 * u) % 2)\r\n                    e.y = l + 8 * u * 10;\r\n                else {\r\n                    m.blocked = 1;\r\n                    setTimeout(function () { m.blocked = 0; e.set(e.x, l, e.z); m.frogPosition = e; x.onStateChange && x.onStateChange(m); }, 300);\r\n                } e.x <= 8 * u - 1.5 ? e.x = 8 * u - 1.5 : e.x >= 1.5 - 8 * u && (e.x = 1.5 - 8 * u); m.frogPosition = e; x.onStateChange && x.onStateChange(m); })); }, I = undefined, O = undefined, R = undefined, A = undefined, x = { onStateChange: null }, k = undefined, M = undefined;\r\n            return { updateScreen: _, getScreenState: function () { return m; }, up: function () { return E(h.UP); }, left: function () { return E(h.LEFT); }, right: function () { return E(h.RIGHT); }, onStateChange: function (e) { x.onStateChange = e; return function () { return x.onStateChange = null; }; }, setFrogPosition: function (e, t, n) { C.getPosition().set(e, t, n); }, setTakenSammiches: function (e) { void 0; e.forEach(function (e, t) { return m.takenSammiches[t] = e; }); w.forEach(function (t, n) { e[n] && t.spriteEntity.hide(); }); }, block: function () { return m.blocked = 1; } };\r\n            function N(e, t, n, i) { var r = Math.floor(e.random() * (n - t + 1)) + t; return i && i.find(function (e) { return e === r; }) ? N(e, t, n, i) : r; }\r\n        }; t.createScreen = m; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createCarPool = void 0; var i = 4 / 128, r = 36 * -i, s = 8 * i, o = new Material; o.albedoColor = Color3.Blue(); var a = new PlaneShape, c = function (e, _a) {\r\n            var t = _a.track, n = _a.randomizer;\r\n            var r = 3, c = { countDt: 0, nextCarAt: Number.MAX_VALUE, currentPoolIndex: 0 }, u = function (e) { return e + 1.5; };\r\n            var l, h = 0;\r\n            var d = Array(r).fill(null).reduce(function (e, t) { var r = 3 * n.random() - 1.5; for (; !l && e.find(function (e) { return u(e) - u(r) < s + i; });) {\r\n                r = 3 * n.random() - 1.5;\r\n                h++;\r\n                if (h > 1e4) {\r\n                    void 0;\r\n                    l = 1;\r\n                }\r\n            } e.push(r); return e; }, []), p = new Array(r).fill(null).map(function (n, r) { var c = new Entity, u = new Transform({ position: new Vector3(d[r], 28 * -i + t * i * 8 + (t >= 4 ? 8 * i : 0), -.001), scale: new Vector3(s, 4 * i, .1) }); c.addComponent(o); c.addComponent(a); c.addComponent(u); c.setParent(e); return { entity: c, transform: u, spawned: 1 }; }), f = function (e) { return Math.floor(1e3 * e) / 1e3; }, m = function () { p.filter(function (e) { return e.spawned; }).forEach(function (e) { var t = e.transform.position.x; t > 1.5 - s / 2 || t < s / 2 - 1.5 ? e.transform.scale.set(.01, e.transform.scale.y, e.transform.scale.z) : e.transform.scale.set(s, e.transform.scale.y, e.transform.scale.z); }); }, g = function (e) { p.filter(function (e) { return e.spawned; }).forEach(function (n, i) { var r = n.transform.position.x; t % 2 == 0 ? r <= -1.5 ? n.transform.position.set(1.5, n.transform.position.y, n.transform.position.z) : n.transform.position.set(f(r - .5 * e), n.transform.position.y, n.transform.position.z) : r >= 1.5 ? n.transform.position.set(-1.5, n.transform.position.y, n.transform.position.z) : n.transform.position.set(f(r + .5 * e), n.transform.position.y, n.transform.position.z); }); }, y = undefined, v = undefined;\r\n            return { update: function (e) { c.countDt += e; g(e); }, isCollidingFrog: function (e) { var t = 6 * i, n = 4 * i, r = 8 * i; var s = p.length; for (; s--;) {\r\n                    var i_13 = p[s].transform.position, o_12 = i_13.x - r / 2, a_2 = i_13.x + r / 2, c_1 = i_13.y + n / 2, u_2 = i_13.y - n / 2, l_2 = e.x - t / 2, h_2 = e.x + t / 2, d_1 = e.y - t / 2, f_1 = e.y + t / 2;\r\n                    if (o_12 <= h_2 && a_2 >= l_2 && c_1 <= f_1 && u_2 >= d_1) {\r\n                        void 0;\r\n                        return 1;\r\n                    }\r\n                } } };\r\n        }; t.createCarPool = c; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createScreen = void 0; var i = n(0), r = n(3), s = n(2), o = 4 / 128, a = 36 * -o, c = { CLICK: ActionButton.POINTER, LEFT: ActionButton.PRIMARY, RIGHT: ActionButton.SECONDARY }, u = function (e, _a) {\r\n            var t = _a.id;\r\n            var n = t;\r\n            var i = { alive: 0 }, r = new Entity, s = new PlaneShape, a = new Material;\r\n            a.albedoColor = new Color3(0, 0, 0);\r\n            var c = new Transform({ position: new Vector3(0, 0, -.001), scale: new Vector3(1 * o, 2 * o, 1) });\r\n            r.addComponent(s);\r\n            r.addComponent(a);\r\n            r.addComponent(c);\r\n            r.setParent(e);\r\n            var u = function () { a.albedoColor = new Color3(0, 0, 0); i.alive = 0; }, l = function (e) { if (i.alive) {\r\n                c.position.y += 1.5 * e;\r\n                c.position.y > 4 && u();\r\n            } }, h = function (_a) {\r\n                var e = _a.position;\r\n                a.albedoColor = new Color3(1, 1, 1);\r\n                c.position.copyFrom(e);\r\n                c.position.z = -.001;\r\n                i.alive = 1;\r\n            };\r\n            return { entity: r, transform: c, mat: a, update: l, reset: u, shoot: h, getState: function () { return i; }, getId: function () { return n; } };\r\n        }, l = function (e, _a) {\r\n            var t = _a.id, n = _a.y, r = _a.left, s = _a.radians, a = _a.amplitude, c = _a.velocity;\r\n            var u = { id: t, y: n, left: r, radians: 1e-7, amplitude: a, velocity: c || 1 }, l = { alive: 0, normalY: n, normalX: r ? 0 : 3 }, h = new Entity, d = i.createSpriteEntity(h, { position: new Vector3(0, 0, 0), scale: new Vector3(8 * o, 8 * o, 1), uvs: i.getSpriteUv(4, 8448, 8, 8) });\r\n            d.hide();\r\n            h.setParent(e);\r\n            var f = new Transform({ position: new Vector3(r ? 0 : 3, n, -.001) });\r\n            h.addComponent(f);\r\n            var m = function () { d.hide(); l.alive = 0; }, g = function () { d.show(); l.alive = 1; f.position.x = l.normalX = r ? 0 : 3; f.position.y = l.normalY = u.y; }, y = function (e) { if (!l.alive)\r\n                return; var t = u.left ? 1 : -1; l.normalX += t * e * c; r && f.position.x > 3 && m(); !r && f.position.x < 0 && m(); var n = f.position; l.normalY = u.y + Math.cos(p(-360 * l.normalX / 3 * 3)) * a * o * 8; n.y = l.normalY; n.x = l.normalX; };\r\n            return { entity: h, transform: f, show: d.show(), hide: d.hide(), reset: m, start: g, definition: u, getState: function () { return l; }, update: y };\r\n        }, h = function (e, _a) {\r\n            var t = _a.player, n = _a.seed;\r\n            var a = new Entity, c = r.seedGen.create(n), h = new Array(5).fill(null).map(function (e, t) { return u(a, { id: t }); }), d = new Array(10).fill(null).map(function (e, t) { return l(a, { id: t, y: 8 * o * 3.5 + c.random() * (4 - 8 * o * 3.5), left: Math.floor(2 * c.random()), radians: 0, amplitude: 1, velocity: 1 }); });\r\n            a.setParent(e);\r\n            var p = { onStateChange: null }, f = function (e) { p.onStateChange = e; return function () { return p.onStateChange = null; }; }, m = { blocked: 0, countDt: 0, nextMonsterCT: 0, score: 0, keyPressed: { e: 0, f: 0, click: 0 }, bulletIndex: 0, monsterIndex: 0, lastShootTime: 0 }, g = new Entity, y = new Entity;\r\n            y.setParent(g);\r\n            g.setParent(a);\r\n            a.addComponent(new Transform({ position: new Vector3(1 === t ? -3 : 0, 0, 0) }));\r\n            y.addComponent(new Transform({ scale: new Vector3(2.95, 4, 1), position: new Vector3(1.5, 2, 0) }));\r\n            var v = new PlaneShape, S = new Material;\r\n            S.albedoColor = Color3.Black();\r\n            y.addComponent(S);\r\n            y.addComponent(v);\r\n            var b = i.createSpriteEntity(a, { position: new Vector3(1.5, 20 * o, -.002), scale: new Vector3(8 * o, 8 * o), uvs: i.getSpriteUv(3, 8448, 8, 8) }), w = undefined, T = undefined, C = undefined, _ = undefined;\r\n            return { getScreenState: function () { return m; }, shoot: function () { if (!(h[m.bulletIndex].getState().alive || Date.now() - m.lastShootTime < 100)) {\r\n                    s.playOnce(\"jump\");\r\n                    h[m.bulletIndex].shoot({ position: b.getTransform().position });\r\n                    m.lastShootTime = Date.now();\r\n                    m.bulletIndex = m.bulletIndex + 1 === h.length ? 0 : m.bulletIndex + 1;\r\n                } }, onStateChange: f, updateScreen: function (e, t) { m.countDt += e; if (t) {\r\n                    m.keyPressed.e ? b.getTransform().position.x -= e : m.keyPressed.f && (b.getTransform().position.x += e);\r\n                    b.getTransform().position.x < 0 + 8 * o && (b.getTransform().position.x = 0 + 8 * o);\r\n                    b.getTransform().position.x > 3 - 8 * o && (b.getTransform().position.x = 3 - 8 * o);\r\n                    h.forEach(function (t) { return t.getState().alive && t.update(e); });\r\n                    d.forEach(function (t) { return t.getState().alive && t.update(e); });\r\n                    if (m.nextMonsterCT <= 0 && !d[m.monsterIndex].getState().alive) {\r\n                        d[m.monsterIndex].start();\r\n                        m.nextMonsterCT = .3;\r\n                        m.monsterIndex += 1;\r\n                        m.monsterIndex > d.length - 1 && (m.monsterIndex = 0);\r\n                    }\r\n                    m.nextMonsterCT -= e;\r\n                    var t_32 = null;\r\n                    h.filter(function (e) { return e.getState().alive; }).forEach(function (e) { d.filter(function (e) { return e.getState().alive; }).forEach(function (n) { var i = e.transform.position, r = n.transform.position; i.x >= r.x - 4 * o && i.x <= r.x + 4 * o && i.y <= r.y + 4 * o && i.y >= r.y - 4 * o && (t_32 = { monster: n, bullet: e }); }); });\r\n                    if (t_32) {\r\n                        t_32.monster.reset();\r\n                        t_32.bullet.reset();\r\n                        s.playOnce(\"swing\");\r\n                        m.score++;\r\n                        p.onStateChange && p.onStateChange(Object.assign(Object.assign({}, m), { position: b.getTransform().position }));\r\n                    }\r\n                } }, setPosition: function (e, t, n) { b.getTransform().position.set(e, t, n); }, block: function () { } };\r\n        }; t.createScreen = h; function d(e, t, n) { var i = Math.round(Math.cos(n) * (t[0] - e[0]) - Math.sin(n) * (t[1] - e[1]) + e[0]), r; return { x: Math.round(Math.sin(n) * (t[0] - e[0]) + Math.cos(n) * (t[1] - e[1]) + e[1]), y: i }; } function p(e) { var t = undefined; return -e * (Math.PI / 180); } }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createSpectatorTrack = void 0; var r = n(6), s = n(2), o = n(5), a = n(18), c = n(0), u = n(24); var l = 0; var h = function (e, _a) {\r\n            var t = _a.lobbyRoom, n = _a.trackSeed, h = _a.minGames, f = _a.alreadyStarted;\r\n            return i(void 0, void 0, void 0, (function () { function v(t) {\r\n                var _this = this;\r\n                var n = [];\r\n                n.push(t.onMessage(\"NEXT_GAME\", function (_a) {\r\n                    var e = _a.serverTime, t = _a.startTime, n = _a.gameIndex;\r\n                    void 0;\r\n                    l = e - Date.now();\r\n                    r.updateTextPanel({ value: \"\" });\r\n                    a.removeVideoPanel();\r\n                    s.stopAllSounds();\r\n                    y && y.init();\r\n                    y && y.block();\r\n                    y && y.setStartTime(d(t));\r\n                }));\r\n                n.push(t.onMessage(\"SHARE_STATE\", function (e) { y && y.shareState(e || {}); }));\r\n                n.push(t.onMessage(\"NEXT_ROUND\", function (_a) {\r\n                    var e = _a.winner, t = _a.startTime, n = _a.serverTime;\r\n                    l = n - Date.now();\r\n                    y && y.finishRound && y.finishRound({ winner: e });\r\n                    var i = d(t);\r\n                    y && y.setRoundStartTime && y.setRoundStartTime(i);\r\n                }));\r\n                n.push(t.onMessage(\"FINSIH_AGREE\", function (_a) {\r\n                    var n = _a.winner, s = _a.nextSeed, c = _a.nextIndex;\r\n                    return i(_this, void 0, void 0, (function () { var i, t_33; return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                void 0;\r\n                                y && y.finish && y.finish({ winner: n });\r\n                                i = t.state[\"player\" + n].displayName;\r\n                                r.updateTextPanel({ value: \"(\" + n + \") \" + i + \" wins\" });\r\n                                return [4 /*yield*/, p(2e3)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                y && y.destroy();\r\n                                y = null;\r\n                                if (g.currentIndex + 1 >= m.length && g.score1 === g.score2) {\r\n                                    m.push(u.generateTrack(s, 1)[0]);\r\n                                    void 0;\r\n                                }\r\n                                if (!(g.currentIndex < m.length)) return [3 /*break*/, 3];\r\n                                g.currentIndex = c;\r\n                                t_33 = m[c].Game.instructions || \"ERROR: MISSING_INSTRUCTIONS\";\r\n                                o.hideSpritePanel();\r\n                                a.reproduceVideo(e, m[c].Game.id);\r\n                                r.updateTextPanel({ value: t_33 + \"\\n\" });\r\n                                return [4 /*yield*/, p(1500)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                y && y.destroy();\r\n                                y = null;\r\n                                S({ nextSeed: s });\r\n                                _a.label = 3;\r\n                            case 3: return [2 /*return*/];\r\n                        }\r\n                    }); }));\r\n                }));\r\n                n.push(t.onMessage(\"FINISH_TRACK\", function (_a) {\r\n                    var e = _a.score;\r\n                    void 0;\r\n                    y && y.destroy();\r\n                    y = null;\r\n                    s.stopAllSounds();\r\n                    s.playOnce(\"pwned\");\r\n                    var t = (e.player1 || 0) > (e.player2 || 0) ? 1 : 2;\r\n                    o.updateSpritePanel({ uvs: c.getSpriteUv(8, 0, 192, 128), scale: new Vector3(1 === t ? 6 : -6, 4, 1) });\r\n                    o.showSpritePanel();\r\n                }));\r\n                n.push(t.onMessage(\"PLAYER_LEFT\", function () { if (y) {\r\n                    y.destroy();\r\n                    y = null;\r\n                } }));\r\n                n.push(t.onMessage(\"GAME_DISPOSE\", function () { void 0; n.forEach(function (e) { e(); }); n = []; }));\r\n            } function S(_a) {\r\n                var t = _a.nextSeed;\r\n                void 0;\r\n                var n = m[g.currentIndex].Game;\r\n                if (y) {\r\n                    y.destroy();\r\n                    y = null;\r\n                }\r\n                y = new n(e, { seed: t, currentPlayer: 0, level: 1 });\r\n            } var m, g, y; return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        void 0;\r\n                        void 0;\r\n                        m = u.generateTrack(n, h);\r\n                        g = { currentIndex: 0, currentPlayer: 0, score1: 0, score2: 0 };\r\n                        y = null;\r\n                        if (!!f) return [3 /*break*/, 3];\r\n                        void 0;\r\n                        s.stopSound(\"music2\");\r\n                        return [4 /*yield*/, p(100)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        s.playOnce(\"vs\", { volume: 1 });\r\n                        r.updateTextPanel({ value: t.state.player1.displayName + \"\\nVS\\n\" + t.state.player2.displayName, bottom: 1, color: Color3.Black() });\r\n                        return [4 /*yield*/, p(1e3)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        a.reproduceVideo(e, m[0].Game.id);\r\n                        o.hideSpritePanel();\r\n                        r.updateTextPanel({ value: m[0].Game.instructions });\r\n                        if (y) {\r\n                            y.destroy();\r\n                            y = null;\r\n                        }\r\n                        y = new m[g.currentIndex].Game(e, { seed: n, currentPlayer: 0, level: 1 });\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        v(t);\r\n                        return [2 /*return*/];\r\n                }\r\n            }); }));\r\n        }; t.createSpectatorTrack = h; function d(e) { return e - l; } function p(e) { return new Promise(function (t) { return setTimeout(t, e); }); } }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.SchemaSerializer = t.FossilDeltaSerializer = t.registerSerializer = void 0; n(78); var i = n(79); Object.defineProperty(t, \"Client\", { enumerable: 1, get: function () { return i.Client; } }); var r = n(45); Object.defineProperty(t, \"Protocol\", { enumerable: 1, get: function () { return r.Protocol; } }); Object.defineProperty(t, \"ErrorCode\", { enumerable: 1, get: function () { return r.ErrorCode; } }); var s = n(42); Object.defineProperty(t, \"Room\", { enumerable: 1, get: function () { return s.Room; } }); var o = n(48); Object.defineProperty(t, \"Auth\", { enumerable: 1, get: function () { return o.Auth; } }); Object.defineProperty(t, \"Platform\", { enumerable: 1, get: function () { return o.Platform; } }); var a = n(91); Object.defineProperty(t, \"FossilDeltaSerializer\", { enumerable: 1, get: function () { return a.FossilDeltaSerializer; } }); var c = n(96); Object.defineProperty(t, \"SchemaSerializer\", { enumerable: 1, get: function () { return c.SchemaSerializer; } }); var u = n(102), l = n(44); Object.defineProperty(t, \"registerSerializer\", { enumerable: 1, get: function () { return l.registerSerializer; } }); l.registerSerializer(\"fossil-delta\", a.FossilDeltaSerializer); l.registerSerializer(\"schema\", c.SchemaSerializer); l.registerSerializer(\"none\", u.NoneSerializer); }, function (e, t) { ArrayBuffer.isView || (ArrayBuffer.isView = function (e) { return null !== e && \"object\" == typeof e && e.buffer instanceof ArrayBuffer; }); }, function (e, t, n) { var i = this && this.__extends || function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (var n in t)\r\n            t.hasOwnProperty(n) && (e[n] = t[n]); })(t, n); }; return function (t, n) { e(t, n); function i() { this.constructor = t; } t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i); }; }(), r = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }, s = this && this.__generator || function (e, t) { var n = { label: 0, sent: function () { if (1 & s[0])\r\n                throw s[1]; return s[1]; }, trys: [], ops: [] }, i, r, s, o; return o = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () { return this; }), o; function a(e) { return function (t) { return c([e, t]); }; } function c(o) { if (i)\r\n            throw new TypeError(\"Generator is already executing.\"); for (; n;)\r\n            try {\r\n                if (i = 1, r && (s = 2 & o[0] ? r[\"return\"] : o[0] ? r[\"throw\"] || ((s = r[\"return\"]) && s.call(r), 0) : r.next) && !(s = s.call(r, o[1])).done)\r\n                    return s;\r\n                (r = 0, s) && (o = [2 & o[0], s.value]);\r\n                switch (o[0]) {\r\n                    case 0:\r\n                    case 1:\r\n                        s = o;\r\n                        break;\r\n                    case 4:\r\n                        n.label++;\r\n                        return { value: o[1], done: 0 };\r\n                    case 5:\r\n                        n.label++;\r\n                        r = o[1];\r\n                        o = [0];\r\n                        continue;\r\n                    case 7:\r\n                        o = n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                    default:\r\n                        if (!(s = n.trys, s = s.length > 0 && s[s.length - 1]) && (6 === o[0] || 2 === o[0])) {\r\n                            n = 0;\r\n                            continue;\r\n                        }\r\n                        if (3 === o[0] && (!s || o[1] > s[0] && o[1] < s[3])) {\r\n                            n.label = o[1];\r\n                            break;\r\n                        }\r\n                        if (6 === o[0] && n.label < s[1]) {\r\n                            n.label = s[1];\r\n                            s = o;\r\n                            break;\r\n                        }\r\n                        if (s && n.label < s[2]) {\r\n                            n.label = s[2];\r\n                            n.ops.push(o);\r\n                            break;\r\n                        }\r\n                        s[2] && n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                }\r\n                o = t.call(e, n);\r\n            }\r\n            catch (e) {\r\n                o = [6, e];\r\n                r = 0;\r\n            }\r\n            finally {\r\n                i = s = 0;\r\n            } if (5 & o[0])\r\n            throw o[1]; return { value: o[0] ? o[1] : void 0, done: 1 }; } }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Client = t.MatchMakeError = void 0; var o = n(41), a = n(80), c = n(42), u = n(48), l = n(90), h = function (e) { i(t, e); function t(n, i) { var r = e.call(this, n) || this; r.code = i; Object.setPrototypeOf(r, t.prototype); return r; } return t; }(Error); t.MatchMakeError = h; var d = function () { function e(e) { void 0 === e && (e = location.protocol.replace(\"http\", \"ws\") + \"//\" + location.hostname + (location.port && \":\" + location.port)); this.endpoint = e; this.auth = new u.Auth(this.endpoint); this.push = new l.Push(this.endpoint); } e.prototype.joinOrCreate = function (e, t, n) { void 0 === t && (t = {}); return r(this, void 0, void 0, (function () { return s(this, (function (i) { switch (i.label) {\r\n            case 0: return [4, this.createMatchMakeRequest(\"joinOrCreate\", e, t, n)];\r\n            case 1: return [2, i.sent()];\r\n        } })); })); }; e.prototype.create = function (e, t, n) { void 0 === t && (t = {}); return r(this, void 0, void 0, (function () { return s(this, (function (i) { switch (i.label) {\r\n            case 0: return [4, this.createMatchMakeRequest(\"create\", e, t, n)];\r\n            case 1: return [2, i.sent()];\r\n        } })); })); }; e.prototype.join = function (e, t, n) { void 0 === t && (t = {}); return r(this, void 0, void 0, (function () { return s(this, (function (i) { switch (i.label) {\r\n            case 0: return [4, this.createMatchMakeRequest(\"join\", e, t, n)];\r\n            case 1: return [2, i.sent()];\r\n        } })); })); }; e.prototype.joinById = function (e, t, n) { void 0 === t && (t = {}); return r(this, void 0, void 0, (function () { return s(this, (function (i) { switch (i.label) {\r\n            case 0: return [4, this.createMatchMakeRequest(\"joinById\", e, t, n)];\r\n            case 1: return [2, i.sent()];\r\n        } })); })); }; e.prototype.reconnect = function (e, t, n) { return r(this, void 0, void 0, (function () { return s(this, (function (i) { switch (i.label) {\r\n            case 0: return [4, this.createMatchMakeRequest(\"joinById\", e, { sessionId: t }, n)];\r\n            case 1: return [2, i.sent()];\r\n        } })); })); }; e.prototype.getAvailableRooms = function (e) { void 0 === e && (e = \"\"); return r(this, void 0, void 0, (function () { var t; return s(this, (function (n) { switch (n.label) {\r\n            case 0:\r\n                t = this.endpoint.replace(\"ws\", \"http\") + \"/matchmake/\" + e;\r\n                return [4, o.get(t, { headers: { Accept: \"application/json\" } })];\r\n            case 1: return [2, n.sent().data];\r\n        } })); })); }; e.prototype.consumeSeatReservation = function (e, t) { return r(this, void 0, void 0, (function () { var n; return s(this, (function (i) { (n = this.createRoom(e.room.name, t)).id = e.room.roomId; n.sessionId = e.sessionId; n.connect(this.buildEndpoint(e.room, { sessionId: n.sessionId })); return [2, new Promise((function (e, t) { var i = function (e, n) { return t(new a.ServerError(e, n)); }; n.onError.once(i); n[\"onJoin\"].once((function () { n.onError.remove(i); e(n); })); }))]; })); })); }; e.prototype.createMatchMakeRequest = function (e, t, n, i) { void 0 === n && (n = {}); return r(this, void 0, void 0, (function () { var r, a; return s(this, (function (s) { switch (s.label) {\r\n            case 0:\r\n                r = this.endpoint.replace(\"ws\", \"http\") + \"/matchmake/\" + e + \"/\" + t;\r\n                this.auth.hasToken && (n.token = this.auth.token);\r\n                return [4, o.post(r, { headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, body: JSON.stringify(n) })];\r\n            case 1:\r\n                if ((a = s.sent().data).error)\r\n                    throw new h(a.error, a.code);\r\n                return [2, this.consumeSeatReservation(a, i)];\r\n        } })); })); }; e.prototype.createRoom = function (e, t) { return new c.Room(e, t); }; e.prototype.buildEndpoint = function (e, t) { void 0 === t && (t = {}); var n = []; for (var i in t)\r\n            t.hasOwnProperty(i) && n.push(i + \"=\" + t[i]); return this.endpoint + \"/\" + e.processId + \"/\" + e.roomId + \"?\" + n.join(\"&\"); }; return e; }(); t.Client = d; }, function (e, t, n) { var i = this && this.__extends || function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (var n in t)\r\n            t.hasOwnProperty(n) && (e[n] = t[n]); })(t, n); }; return function (t, n) { e(t, n); function i() { this.constructor = t; } t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i); }; }(); Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ServerError = void 0; var r = function (e) { i(t, e); function t(t, n) { var i = e.call(this, n) || this; i.name = \"ServerError\"; i.code = t; return i; } return t; }(Error); t.ServerError = r; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); function i(e, t) { this._offset = t; if (e instanceof ArrayBuffer) {\r\n            this._buffer = e;\r\n            this._view = new DataView(this._buffer);\r\n        }\r\n        else {\r\n            if (!ArrayBuffer.isView(e))\r\n                throw new Error(\"Invalid argument\");\r\n            this._buffer = e.buffer;\r\n            this._view = new DataView(this._buffer, e.byteOffset, e.byteLength);\r\n        } } function r(e, t, n) { for (var i = \"\", r = 0, s = t, o = t + n; s < o; s++) {\r\n            var a = e.getUint8(s);\r\n            if (0 != (128 & a))\r\n                if (192 != (224 & a))\r\n                    if (224 != (240 & a)) {\r\n                        if (240 != (248 & a))\r\n                            throw new Error(\"Invalid byte \" + a.toString(16));\r\n                        if ((r = (7 & a) << 18 | (63 & e.getUint8(++s)) << 12 | (63 & e.getUint8(++s)) << 6 | (63 & e.getUint8(++s)) << 0) >= 65536) {\r\n                            r -= 65536;\r\n                            i += String.fromCharCode(55296 + (r >>> 10), 56320 + (1023 & r));\r\n                        }\r\n                        else\r\n                            i += String.fromCharCode(r);\r\n                    }\r\n                    else\r\n                        i += String.fromCharCode((15 & a) << 12 | (63 & e.getUint8(++s)) << 6 | (63 & e.getUint8(++s)) << 0);\r\n                else\r\n                    i += String.fromCharCode((31 & a) << 6 | 63 & e.getUint8(++s));\r\n            else\r\n                i += String.fromCharCode(a);\r\n        } return i; } i.prototype._array = function (e) { for (var t = new Array(e), n = 0; n < e; n++)\r\n            t[n] = this._parse(); return t; }; i.prototype._map = function (e) { for (var t = \"\", n = {}, i = 0; i < e; i++)\r\n            n[t = this._parse()] = this._parse(); return n; }; i.prototype._str = function (e) { var t = r(this._view, this._offset, e); this._offset += e; return t; }; i.prototype._bin = function (e) { var t = this._buffer.slice(this._offset, this._offset + e); this._offset += e; return t; }; i.prototype._parse = function () { var e = this._view.getUint8(this._offset++), t, n = 0, i = 0, r = 0, s = 0; if (e < 192)\r\n            return e < 128 ? e : e < 144 ? this._map(15 & e) : e < 160 ? this._array(15 & e) : this._str(31 & e); if (e > 223)\r\n            return -1 * (255 - e + 1); switch (e) {\r\n            case 192: return null;\r\n            case 194: return 0;\r\n            case 195: return 1;\r\n            case 196:\r\n                n = this._view.getUint8(this._offset);\r\n                this._offset += 1;\r\n                return this._bin(n);\r\n            case 197:\r\n                n = this._view.getUint16(this._offset);\r\n                this._offset += 2;\r\n                return this._bin(n);\r\n            case 198:\r\n                n = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return this._bin(n);\r\n            case 199:\r\n                n = this._view.getUint8(this._offset);\r\n                i = this._view.getInt8(this._offset + 1);\r\n                this._offset += 2;\r\n                return [i, this._bin(n)];\r\n            case 200:\r\n                n = this._view.getUint16(this._offset);\r\n                i = this._view.getInt8(this._offset + 2);\r\n                this._offset += 3;\r\n                return [i, this._bin(n)];\r\n            case 201:\r\n                n = this._view.getUint32(this._offset);\r\n                i = this._view.getInt8(this._offset + 4);\r\n                this._offset += 5;\r\n                return [i, this._bin(n)];\r\n            case 202:\r\n                t = this._view.getFloat32(this._offset);\r\n                this._offset += 4;\r\n                return t;\r\n            case 203:\r\n                t = this._view.getFloat64(this._offset);\r\n                this._offset += 8;\r\n                return t;\r\n            case 204:\r\n                t = this._view.getUint8(this._offset);\r\n                this._offset += 1;\r\n                return t;\r\n            case 205:\r\n                t = this._view.getUint16(this._offset);\r\n                this._offset += 2;\r\n                return t;\r\n            case 206:\r\n                t = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return t;\r\n            case 207:\r\n                r = this._view.getUint32(this._offset) * Math.pow(2, 32);\r\n                s = this._view.getUint32(this._offset + 4);\r\n                this._offset += 8;\r\n                return r + s;\r\n            case 208:\r\n                t = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                return t;\r\n            case 209:\r\n                t = this._view.getInt16(this._offset);\r\n                this._offset += 2;\r\n                return t;\r\n            case 210:\r\n                t = this._view.getInt32(this._offset);\r\n                this._offset += 4;\r\n                return t;\r\n            case 211:\r\n                r = this._view.getInt32(this._offset) * Math.pow(2, 32);\r\n                s = this._view.getUint32(this._offset + 4);\r\n                this._offset += 8;\r\n                return r + s;\r\n            case 212:\r\n                i = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                if (0 === i) {\r\n                    this._offset += 1;\r\n                    return;\r\n                }\r\n                return [i, this._bin(1)];\r\n            case 213:\r\n                i = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                return [i, this._bin(2)];\r\n            case 214:\r\n                i = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                return [i, this._bin(4)];\r\n            case 215:\r\n                i = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                if (0 === i) {\r\n                    r = this._view.getInt32(this._offset) * Math.pow(2, 32);\r\n                    s = this._view.getUint32(this._offset + 4);\r\n                    this._offset += 8;\r\n                    return new Date(r + s);\r\n                }\r\n                return [i, this._bin(8)];\r\n            case 216:\r\n                i = this._view.getInt8(this._offset);\r\n                this._offset += 1;\r\n                return [i, this._bin(16)];\r\n            case 217:\r\n                n = this._view.getUint8(this._offset);\r\n                this._offset += 1;\r\n                return this._str(n);\r\n            case 218:\r\n                n = this._view.getUint16(this._offset);\r\n                this._offset += 2;\r\n                return this._str(n);\r\n            case 219:\r\n                n = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return this._str(n);\r\n            case 220:\r\n                n = this._view.getUint16(this._offset);\r\n                this._offset += 2;\r\n                return this._array(n);\r\n            case 221:\r\n                n = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return this._array(n);\r\n            case 222:\r\n                n = this._view.getUint16(this._offset);\r\n                this._offset += 2;\r\n                return this._map(n);\r\n            case 223:\r\n                n = this._view.getUint32(this._offset);\r\n                this._offset += 4;\r\n                return this._map(n);\r\n        } throw new Error(\"Could not parse\"); }; function s(e, t) { void 0 === t && (t = 0); var n = new i(e, t), r = n._parse(); if (n._offset !== e.byteLength)\r\n            throw new Error(e.byteLength - n._offset + \" trailing bytes\"); return r; } t.default = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); function i(e, t, n) { for (var i = 0, r = 0, s = n.length; r < s; r++)\r\n            if ((i = n.charCodeAt(r)) < 128)\r\n                e.setUint8(t++, i);\r\n            else if (i < 2048) {\r\n                e.setUint8(t++, 192 | i >> 6);\r\n                e.setUint8(t++, 128 | 63 & i);\r\n            }\r\n            else if (i < 55296 || i >= 57344) {\r\n                e.setUint8(t++, 224 | i >> 12);\r\n                e.setUint8(t++, 128 | i >> 6 & 63);\r\n                e.setUint8(t++, 128 | 63 & i);\r\n            }\r\n            else {\r\n                r++;\r\n                i = 65536 + ((1023 & i) << 10 | 1023 & n.charCodeAt(r));\r\n                e.setUint8(t++, 240 | i >> 18);\r\n                e.setUint8(t++, 128 | i >> 12 & 63);\r\n                e.setUint8(t++, 128 | i >> 6 & 63);\r\n                e.setUint8(t++, 128 | 63 & i);\r\n            } } function r(e) { for (var t = 0, n = 0, i = 0, r = e.length; i < r; i++)\r\n            if ((t = e.charCodeAt(i)) < 128)\r\n                n += 1;\r\n            else if (t < 2048)\r\n                n += 2;\r\n            else if (t < 55296 || t >= 57344)\r\n                n += 3;\r\n            else {\r\n                i++;\r\n                n += 4;\r\n            } return n; } function s(e, t, n) { var i = typeof n, o = 0, a = 0, c = 0, u = 0, l = 0, h = 0; if (\"string\" === i) {\r\n            if ((l = r(n)) < 32) {\r\n                e.push(160 | l);\r\n                h = 1;\r\n            }\r\n            else if (l < 256) {\r\n                e.push(217, l);\r\n                h = 2;\r\n            }\r\n            else if (l < 65536) {\r\n                e.push(218, l >> 8, l);\r\n                h = 3;\r\n            }\r\n            else {\r\n                if (!(l < 4294967296))\r\n                    throw new Error(\"String too long\");\r\n                e.push(219, l >> 24, l >> 16, l >> 8, l);\r\n                h = 5;\r\n            }\r\n            t.push({ _str: n, _length: l, _offset: e.length });\r\n            return h + l;\r\n        } if (\"number\" === i) {\r\n            if (Math.floor(n) !== n || !isFinite(n)) {\r\n                e.push(203);\r\n                t.push({ _float: n, _length: 8, _offset: e.length });\r\n                return 9;\r\n            }\r\n            if (n >= 0) {\r\n                if (n < 128) {\r\n                    e.push(n);\r\n                    return 1;\r\n                }\r\n                if (n < 256) {\r\n                    e.push(204, n);\r\n                    return 2;\r\n                }\r\n                if (n < 65536) {\r\n                    e.push(205, n >> 8, n);\r\n                    return 3;\r\n                }\r\n                if (n < 4294967296) {\r\n                    e.push(206, n >> 24, n >> 16, n >> 8, n);\r\n                    return 5;\r\n                }\r\n                c = n / Math.pow(2, 32) >> 0;\r\n                u = n >>> 0;\r\n                e.push(207, c >> 24, c >> 16, c >> 8, c, u >> 24, u >> 16, u >> 8, u);\r\n                return 9;\r\n            }\r\n            if (n >= -32) {\r\n                e.push(n);\r\n                return 1;\r\n            }\r\n            if (n >= -128) {\r\n                e.push(208, n);\r\n                return 2;\r\n            }\r\n            if (n >= -32768) {\r\n                e.push(209, n >> 8, n);\r\n                return 3;\r\n            }\r\n            if (n >= -2147483648) {\r\n                e.push(210, n >> 24, n >> 16, n >> 8, n);\r\n                return 5;\r\n            }\r\n            c = Math.floor(n / Math.pow(2, 32));\r\n            u = n >>> 0;\r\n            e.push(211, c >> 24, c >> 16, c >> 8, c, u >> 24, u >> 16, u >> 8, u);\r\n            return 9;\r\n        } if (\"object\" === i) {\r\n            if (null === n) {\r\n                e.push(192);\r\n                return 1;\r\n            }\r\n            if (Array.isArray(n)) {\r\n                if ((l = n.length) < 16) {\r\n                    e.push(144 | l);\r\n                    h = 1;\r\n                }\r\n                else if (l < 65536) {\r\n                    e.push(220, l >> 8, l);\r\n                    h = 3;\r\n                }\r\n                else {\r\n                    if (!(l < 4294967296))\r\n                        throw new Error(\"Array too large\");\r\n                    e.push(221, l >> 24, l >> 16, l >> 8, l);\r\n                    h = 5;\r\n                }\r\n                for (o = 0; o < l; o++)\r\n                    h += s(e, t, n[o]);\r\n                return h;\r\n            }\r\n            if (n instanceof Date) {\r\n                var d = n.getTime();\r\n                c = Math.floor(d / Math.pow(2, 32));\r\n                u = d >>> 0;\r\n                e.push(215, 0, c >> 24, c >> 16, c >> 8, c, u >> 24, u >> 16, u >> 8, u);\r\n                return 10;\r\n            }\r\n            if (n instanceof ArrayBuffer) {\r\n                if ((l = n.byteLength) < 256) {\r\n                    e.push(196, l);\r\n                    h = 2;\r\n                }\r\n                else if (l < 65536) {\r\n                    e.push(197, l >> 8, l);\r\n                    h = 3;\r\n                }\r\n                else {\r\n                    if (!(l < 4294967296))\r\n                        throw new Error(\"Buffer too large\");\r\n                    e.push(198, l >> 24, l >> 16, l >> 8, l);\r\n                    h = 5;\r\n                }\r\n                t.push({ _bin: n, _length: l, _offset: e.length });\r\n                return h + l;\r\n            }\r\n            if (\"function\" == typeof n.toJSON)\r\n                return s(e, t, n.toJSON());\r\n            var p = [], f = \"\", m = Object.keys(n);\r\n            for (o = 0, a = m.length; o < a; o++)\r\n                \"function\" != typeof n[f = m[o]] && p.push(f);\r\n            if ((l = p.length) < 16) {\r\n                e.push(128 | l);\r\n                h = 1;\r\n            }\r\n            else if (l < 65536) {\r\n                e.push(222, l >> 8, l);\r\n                h = 3;\r\n            }\r\n            else {\r\n                if (!(l < 4294967296))\r\n                    throw new Error(\"Object too large\");\r\n                e.push(223, l >> 24, l >> 16, l >> 8, l);\r\n                h = 5;\r\n            }\r\n            for (o = 0; o < l; o++) {\r\n                h += s(e, t, f = p[o]);\r\n                h += s(e, t, n[f]);\r\n            }\r\n            return h;\r\n        } if (\"boolean\" === i) {\r\n            e.push(n ? 195 : 194);\r\n            return 1;\r\n        } if (\"undefined\" === i) {\r\n            e.push(212, 0, 0);\r\n            return 3;\r\n        } throw new Error(\"Could not encode\"); } function o(e) { var t = [], n = [], r = s(t, n, e), o = new ArrayBuffer(r), a = new DataView(o), c = 0, u = 0, l = -1; n.length > 0 && (l = n[0]._offset); for (var h, d = 0, p = 0, f = 0, m = t.length; f < m; f++) {\r\n            a.setUint8(u + f, t[f]);\r\n            if (f + 1 === l) {\r\n                d = (h = n[c])._length;\r\n                p = u + l;\r\n                if (h._bin)\r\n                    for (var g = new Uint8Array(h._bin), y = 0; y < d; y++)\r\n                        a.setUint8(p + y, g[y]);\r\n                else\r\n                    h._str ? i(a, p, h._str) : void 0 !== h._float && a.setFloat64(p, h._float);\r\n                u += d;\r\n                n[++c] && (l = n[c]._offset);\r\n            }\r\n        } return o; } t.default = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = function () { function e() { this.handlers = []; } e.prototype.register = function (e, t) { void 0 === t && (t = 0); this.handlers.push(e); return this; }; e.prototype.invoke = function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; this.handlers.forEach((function (t) { return t.apply(void 0, e); })); }; e.prototype.invokeAsync = function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; return Promise.all(this.handlers.map((function (t) { return t.apply(void 0, e); }))); }; e.prototype.remove = function (e) { var t = this.handlers.indexOf(e); this.handlers[t] = this.handlers[this.handlers.length - 1]; this.handlers.pop(); }; e.prototype.clear = function () { this.handlers = []; }; return e; }(); t.EventEmitter = i; function r() { var e = new i; function t(t) { return e.register(t, null === this); } t.once = function (t) { var n = function () { for (var i = [], r = 0; r < arguments.length; r++)\r\n            i[r] = arguments[r]; t.apply(void 0, i); e.remove(n); }; e.register(n); }; t.remove = function (t) { return e.remove(t); }; t.invoke = function () { for (var t = [], n = 0; n < arguments.length; n++)\r\n            t[n] = arguments[n]; return e.invoke.apply(e, t); }; t.invokeAsync = function () { for (var t = [], n = 0; n < arguments.length; n++)\r\n            t[n] = arguments[n]; return e.invokeAsync.apply(e, t); }; t.clear = function () { return e.clear(); }; return t; } t.createSignal = r; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createNanoEvents = void 0; var i = function () { return ({ events: {}, emit: function (e) {\r\n                var e_35, _a;\r\n                var t = [];\r\n                for (var _i = 1; _i < arguments.length; _i++) {\r\n                    t[_i - 1] = arguments[_i];\r\n                }\r\n                try {\r\n                    for (var _b = __values(this.events[e] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var n_20 = _c.value;\r\n                        n_20.apply(void 0, __spread(t));\r\n                    }\r\n                }\r\n                catch (e_35_1) { e_35 = { error: e_35_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_35) throw e_35.error; }\r\n                }\r\n            }, on: function (e, t) {\r\n                var _this = this;\r\n                (this.events[e] = this.events[e] || []).push(t);\r\n                return function () { return _this.events[e] = _this.events[e].filter(function (e) { return e !== t; }); };\r\n            } }); }; t.createNanoEvents = i; }, function (e, t, n) { var i = this && this.__extends || function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (var n in t)\r\n            t.hasOwnProperty(n) && (e[n] = t[n]); })(t, n); }; return function (t, n) { e(t, n); function i() { this.constructor = t; } t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i); }; }(), r = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e }; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Connection = void 0; var s = r(n(86)), o = function (e) { i(t, e); function t(t, n) { void 0 === n && (n = 1); var i = e.call(this, t, void 0, { connect: n }) || this; i._enqueuedCalls = []; return i; } t.prototype.onOpenCallback = function (t) { e.prototype.onOpenCallback.call(this); this.binaryType = \"arraybuffer\"; if (this._enqueuedCalls.length > 0) {\r\n            for (var n = 0, i = this._enqueuedCalls; n < i.length; n++) {\r\n                var r = i[n], s = r[0], o = r[1];\r\n                this[s].apply(this, o);\r\n            }\r\n            this._enqueuedCalls = [];\r\n        } }; t.prototype.send = function (t) { if (this.ws.readyState === s.default.OPEN) {\r\n            if (t instanceof ArrayBuffer)\r\n                return e.prototype.send.call(this, t);\r\n            if (Array.isArray(t))\r\n                return e.prototype.send.call(this, new Uint8Array(t).buffer);\r\n        }\r\n        else\r\n            this._enqueuedCalls.push([\"send\", [t]]); }; return t; }(s.default); t.Connection = o; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = function () { function e(e, t) { for (var n = 0; n < t.length; n++) {\r\n            var i = t[n];\r\n            i.enumerable = i.enumerable || 0;\r\n            i.configurable = 1;\r\n            \"value\" in i && (i.writable = 1);\r\n            Object.defineProperty(e, i.key, i);\r\n        } } return function (t, n, i) { n && e(t.prototype, n); i && e(t, i); return t; }; }(); function r(e, t) { if (!(e instanceof t))\r\n            throw new TypeError(\"Cannot call a class as a function\"); } var s = n(87).createBackoff, o = \"undefined\" != typeof WebSocket ? WebSocket : n(88), a = function () { function e(t, n, i) { var o = arguments.length > 2 && void 0 !== i ? arguments[2] : {}; r(this, e); this.url = t; this.protocols = n; this.reconnectEnabled = 1; this.listeners = {}; this.backoff = s(o.backoff || \"exponential\", o); this.backoff.onReady = this.onBackoffReady.bind(this); (\"undefined\" == typeof o.connect || o.connect) && this.open(); } i(e, [{ key: \"open\", value: function e(t) { var n = arguments.length > 0 && void 0 !== t ? arguments[0] : 0; this.isReconnect = n; var i = this.ws && this.ws.binaryType; this.ws = new o(this.url, this.protocols); this.ws.onclose = this.onCloseCallback.bind(this); this.ws.onerror = this.onErrorCallback.bind(this); this.ws.onmessage = this.onMessageCallback.bind(this); this.ws.onopen = this.onOpenCallback.bind(this); i && (this.ws.binaryType = i); } }, { key: \"onBackoffReady\", value: function e(t, n) { this.open(1); } }, { key: \"onCloseCallback\", value: function e(t) { !this.isReconnect && this.listeners[\"onclose\"] && this.listeners[\"onclose\"].apply(null, arguments); this.reconnectEnabled && t.code < 3e3 && this.backoff.backoff(); } }, { key: \"onErrorCallback\", value: function e() { this.listeners[\"onerror\"] && this.listeners[\"onerror\"].apply(null, arguments); } }, { key: \"onMessageCallback\", value: function e() { this.listeners[\"onmessage\"] && this.listeners[\"onmessage\"].apply(null, arguments); } }, { key: \"onOpenCallback\", value: function e() { this.listeners[\"onopen\"] && this.listeners[\"onopen\"].apply(null, arguments); this.isReconnect && this.listeners[\"onreconnect\"] && this.listeners[\"onreconnect\"].apply(null, arguments); this.isReconnect = 0; } }, { key: \"close\", value: function e(t, n) { \"undefined\" == typeof t && (t = 1e3); this.reconnectEnabled = 0; this.ws.close(t, n); } }, { key: \"send\", value: function e(t) { this.ws.send(t); } }, { key: \"bufferedAmount\", get: function e() { return this.ws.bufferedAmount; } }, { key: \"readyState\", get: function e() { return this.ws.readyState; } }, { key: \"binaryType\", get: function e() { return this.ws.binaryType; }, set: function e(t) { this.ws.binaryType = t; } }, { key: \"extensions\", get: function e() { return this.ws.extensions; }, set: function e(t) { this.ws.extensions = t; } }, { key: \"protocol\", get: function e() { return this.ws.protocol; }, set: function e(t) { this.ws.protocol = t; } }, { key: \"onclose\", set: function e(t) { this.listeners[\"onclose\"] = t; }, get: function e() { return this.listeners[\"onclose\"]; } }, { key: \"onerror\", set: function e(t) { this.listeners[\"onerror\"] = t; }, get: function e() { return this.listeners[\"onerror\"]; } }, { key: \"onmessage\", set: function e(t) { this.listeners[\"onmessage\"] = t; }, get: function e() { return this.listeners[\"onmessage\"]; } }, { key: \"onopen\", set: function e(t) { this.listeners[\"onopen\"] = t; }, get: function e() { return this.listeners[\"onopen\"]; } }, { key: \"onreconnect\", set: function e(t) { this.listeners[\"onreconnect\"] = t; }, get: function e() { return this.listeners[\"onreconnect\"]; } }]); return e; }(); a.CONNECTING = o.CONNECTING; a.OPEN = o.OPEN; a.CLOSING = o.CLOSING; a.CLOSED = o.CLOSED; t.default = a; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.createBackoff = r; var i = { exponential: function e(t, n) { return Math.floor(Math.random() * Math.pow(2, t) * n); }, fibonacci: function e(t, n) { var i; if (t > (i = 1))\r\n                for (var r = 1, i = 2, s = 2; s < t; s++) {\r\n                    var o = r + i;\r\n                    r = i;\r\n                    i = o;\r\n                } return Math.floor(Math.random() * i * n); } }; function r(e, t) { return new s(i[e], t); } function s(e, t) { this.func = e; this.attempts = 0; this.delay = \"undefined\" != typeof t.initialDelay ? t.initialDelay : 100; } s.prototype.backoff = function () { setTimeout(this.onReady, this.func(++this.attempts, this.delay)); }; }, function (e, t) { }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getItem = t.removeItem = t.setItem = void 0; var i; function r() { i || (i = \"undefined\" != typeof cc && cc.sys && cc.sys.localStorage ? cc.sys.localStorage : \"undefined\" != typeof window && window.localStorage ? window.localStorage : { cache: {}, setItem: function (e, t) { this.cache[e] = t; }, getItem: function (e) { this.cache[e]; }, removeItem: function (e) { delete this.cache[e]; } }); return i; } function s(e, t) { r().setItem(e, t); } t.setItem = s; function o(e) { r().removeItem(e); } t.removeItem = o; function a(e, t) { var n = r().getItem(e); \"undefined\" != typeof Promise && n instanceof Promise ? n.then((function (e) { return t(e); })) : t(n); } t.getItem = a; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }, r = this && this.__generator || function (e, t) { var n = { label: 0, sent: function () { if (1 & s[0])\r\n                throw s[1]; return s[1]; }, trys: [], ops: [] }, i, r, s, o; return o = { next: a(0), throw: a(1), return: a(2) }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function () { return this; }), o; function a(e) { return function (t) { return c([e, t]); }; } function c(o) { if (i)\r\n            throw new TypeError(\"Generator is already executing.\"); for (; n;)\r\n            try {\r\n                if (i = 1, r && (s = 2 & o[0] ? r[\"return\"] : o[0] ? r[\"throw\"] || ((s = r[\"return\"]) && s.call(r), 0) : r.next) && !(s = s.call(r, o[1])).done)\r\n                    return s;\r\n                (r = 0, s) && (o = [2 & o[0], s.value]);\r\n                switch (o[0]) {\r\n                    case 0:\r\n                    case 1:\r\n                        s = o;\r\n                        break;\r\n                    case 4:\r\n                        n.label++;\r\n                        return { value: o[1], done: 0 };\r\n                    case 5:\r\n                        n.label++;\r\n                        r = o[1];\r\n                        o = [0];\r\n                        continue;\r\n                    case 7:\r\n                        o = n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                    default:\r\n                        if (!(s = n.trys, s = s.length > 0 && s[s.length - 1]) && (6 === o[0] || 2 === o[0])) {\r\n                            n = 0;\r\n                            continue;\r\n                        }\r\n                        if (3 === o[0] && (!s || o[1] > s[0] && o[1] < s[3])) {\r\n                            n.label = o[1];\r\n                            break;\r\n                        }\r\n                        if (6 === o[0] && n.label < s[1]) {\r\n                            n.label = s[1];\r\n                            s = o;\r\n                            break;\r\n                        }\r\n                        if (s && n.label < s[2]) {\r\n                            n.label = s[2];\r\n                            n.ops.push(o);\r\n                            break;\r\n                        }\r\n                        s[2] && n.ops.pop();\r\n                        n.trys.pop();\r\n                        continue;\r\n                }\r\n                o = t.call(e, n);\r\n            }\r\n            catch (e) {\r\n                o = [6, e];\r\n                r = 0;\r\n            }\r\n            finally {\r\n                i = s = 0;\r\n            } if (5 & o[0])\r\n            throw o[1]; return { value: o[0] ? o[1] : void 0, done: 1 }; } }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Push = void 0; var s = function () { function e(e) { this.endpoint = e.replace(\"ws\", \"http\"); } e.prototype.register = function () { return i(this, void 0, void 0, (function () { return r(this, (function (e) { switch (e.label) {\r\n            case 0:\r\n                this.check();\r\n                return [4, this.registerServiceWorker()];\r\n            case 1:\r\n                e.sent();\r\n                return [4, this.requestNotificationPermission()];\r\n            case 2:\r\n                e.sent();\r\n                return [2];\r\n        } })); })); }; e.prototype.registerServiceWorker = function () { return i(this, void 0, void 0, (function () { return r(this, (function (e) { switch (e.label) {\r\n            case 0: return [4, navigator.serviceWorker.register(this.endpoint + \"/push\")];\r\n            case 1: return [2, e.sent()];\r\n        } })); })); }; e.prototype.requestNotificationPermission = function () { return i(this, void 0, void 0, (function () { var e; return r(this, (function (t) { switch (t.label) {\r\n            case 0: return [4, window[\"Notification\"].requestPermission()];\r\n            case 1:\r\n                if (\"granted\" !== (e = t.sent()))\r\n                    throw new Error(\"Permission not granted for Notification\");\r\n                return [2];\r\n        } })); })); }; e.prototype.check = function () { if (!(\"serviceWorker\" in navigator))\r\n            throw new Error(\"No Service Worker support!\"); if (!(\"PushManager\" in window))\r\n            throw new Error(\"No Push API Support!\"); }; return e; }(); t.Push = s; }, function (e, t, n) { var i = this && this.__createBinding || (Object.create ? function (e, t, n, i) { void 0 === i && (i = n); Object.defineProperty(e, i, { enumerable: 1, get: function () { return t[n]; } }); } : function (e, t, n, i) { void 0 === i && (i = n); e[i] = t[n]; }), r = this && this.__setModuleDefault || (Object.create ? function (e, t) { Object.defineProperty(e, \"default\", { enumerable: 1, value: t }); } : function (e, t) { e[\"default\"] = t; }), s = this && this.__importStar || function (e) { if (e && e.__esModule)\r\n            return e; var t = {}; if (null != e)\r\n            for (var n in e)\r\n                \"default\" !== n && Object.hasOwnProperty.call(e, n) && i(t, e, n); r(t, e); return t; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.FossilDeltaSerializer = void 0; var o = n(92), a = s(n(95)), c = s(n(43)), u = function () { function e() { this.api = new o.StateContainer({}); } e.prototype.getState = function () { return this.api.state; }; e.prototype.setState = function (e) { this.previousState = new Uint8Array(e); this.api.set(c.decode(this.previousState)); }; e.prototype.patch = function (e) { this.previousState = new Uint8Array(a.apply(this.previousState, e)); this.api.set(c.decode(this.previousState)); }; e.prototype.teardown = function () { this.api.removeAllListeners(); }; return e; }(); t.FossilDeltaSerializer = u; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = n(93); t.StateContainer = i.StateContainer; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); var i = n(94), r = function () { function e(e) { this.listeners = []; this.matcherPlaceholders = { \":id\": /^([a-zA-Z0-9\\-_]+)$/, \":number\": /^([0-9]+)$/, \":string\": /^(\\w+)$/, \":axis\": /^([xyz])$/, \":*\": /(.*)/ }; this.state = e; this.reset(); } e.prototype.set = function (e) { var t = i.compare(this.state, e); this.state = e; this.checkPatches(t, this.listeners, this.defaultListener); return t; }; e.prototype.registerPlaceholder = function (e, t) { this.matcherPlaceholders[e] = t; }; e.prototype.listen = function (e, t, n) { var r = this, s; if (\"function\" == typeof e) {\r\n            s = [];\r\n            t = e;\r\n        }\r\n        else\r\n            s = e.split(\"/\"); t.length > 1, 0; var o = { callback: t, rawRules: s, rules: s.map((function (e) { return \"string\" == typeof e ? 0 === e.indexOf(\":\") ? r.matcherPlaceholders[e] || r.matcherPlaceholders[\":*\"] : new RegExp(\"^\" + e + \"$\") : e; })) }; 0 === s.length ? this.defaultListener = o : this.listeners.push(o); n && this.checkPatches(i.compare({}, this.state), [o]); return o; }; e.prototype.removeListener = function (e) { for (var t = this.listeners.length - 1; t >= 0; t--)\r\n            this.listeners[t] === e && this.listeners.splice(t, 1); }; e.prototype.removeAllListeners = function () { this.reset(); }; e.prototype.checkPatches = function (e, t, n) { for (var i = 0, r = t.length; i < r; i++)\r\n            for (var s = t[i], o = e.length - 1; o >= 0; o--) {\r\n                var a = s && this.getPathVariables(e[o], s);\r\n                if (a) {\r\n                    s.callback({ path: a, rawPath: e[o].path, operation: e[o].operation, value: e[o].value });\r\n                    e[o].matched = 1;\r\n                }\r\n            } if (n)\r\n            for (var o = e.length - 1; o >= 0; o--)\r\n                e[o].matched || n.callback(e[o]); }; e.prototype.getPathVariables = function (e, t) { if (e.path.length !== t.rules.length)\r\n            return 0; for (var n = {}, i = 0, r = t.rules.length; i < r; i++) {\r\n            var s = e.path[i].match(t.rules[i]);\r\n            if (!s || 0 === s.length || s.length > 2)\r\n                return 0;\r\n            \":\" === t.rawRules[i].substr(0, 1) && (n[t.rawRules[i].substr(1)] = s[1]);\r\n        } return n; }; e.prototype.reset = function () { this.listeners = []; }; return e; }(); t.StateContainer = r; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); function i(e, t) { var n = []; o(e, t, n, []); return n; } t.compare = i; function r(e, t) { var n = e.slice(); n.push(t); return n; } function s(e) { if (Array.isArray(e)) {\r\n            for (var t = new Array(e.length), n = 0; n < t.length; n++)\r\n                t[n] = \"\" + n;\r\n            return t;\r\n        } if (Object.keys)\r\n            return Object.keys(e); var i = []; for (var r in e)\r\n            e.hasOwnProperty(r) && i.push(r); return i; } function o(e, t, n, i) { for (var a = s(t), c = s(e), u = 0, l = c.length - 1; l >= 0; l--) {\r\n            var h, d = e[h = c[l]];\r\n            if (!t.hasOwnProperty(h) || void 0 === t[h] && void 0 !== d && 0 == Array.isArray(t)) {\r\n                n.push({ operation: \"remove\", path: r(i, h) });\r\n                u = 1;\r\n            }\r\n            else {\r\n                var p = t[h];\r\n                \"object\" == typeof d && null != d && \"object\" == typeof p && null != p ? o(d, p, n, r(i, h)) : d !== p && n.push({ operation: \"replace\", path: r(i, h), value: p, previousValue: d });\r\n            }\r\n        } if (u || a.length != c.length)\r\n            for (var l = a.length - 1; l >= 0; l--) {\r\n                var h = a[l];\r\n                if (!e.hasOwnProperty(h) && void 0 !== t[h]) {\r\n                    var p = t[h], f = r(i, h);\r\n                    \"object\" == typeof p && null != p && o({}, p, n, f);\r\n                    n.push({ operation: \"add\", path: f, value: p });\r\n                }\r\n            } } }, function (e, t, n) { (function (t, n) { 1, e.exports ? e.exports = n() : t.fossilDelta = n(); })(this, (function () { var e = {}, t = 16; function n() { this.a = 0; this.b = 0; this.i = 0; this.z = new Array(t); } n.prototype.init = function (e, n) { var i = 0, r = 0, s, o; for (s = 0; s < t; s++) {\r\n            i = i + (o = e[n + s]) & 65535;\r\n            r = r + (t - s) * o & 65535;\r\n            this.z[s] = o;\r\n        } this.a = 65535 & i; this.b = 65535 & r; this.i = 0; }; n.prototype.next = function (e) { var n = this.z[this.i]; this.z[this.i] = e; this.i = this.i + 1 & t - 1; this.a = this.a - n + e & 65535; this.b = this.b - t * n + this.a & 65535; }; n.prototype.value = function () { return (65535 & this.a | (65535 & this.b) << 16) >>> 0; }; var i = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~\".split(\"\").map((function (e) { return e.charCodeAt(0); })), r = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, 36, -1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, -1, -1, -1, 63, -1]; function s(e) { this.a = e; this.pos = 0; } s.prototype.haveBytes = function () { return this.pos < this.a.length; }; s.prototype.getByte = function () { var e = this.a[this.pos]; this.pos++; if (this.pos > this.a.length)\r\n            throw new RangeError(\"out of bounds\"); return e; }; s.prototype.getChar = function () { return String.fromCharCode(this.getByte()); }; s.prototype.getInt = function () { for (var e = 0, t; this.haveBytes() && (t = r[127 & this.getByte()]) >= 0;)\r\n            e = (e << 6) + t; this.pos--; return e >>> 0; }; function o() { this.a = []; } o.prototype.toArray = function () { return this.a; }; o.prototype.putByte = function (e) { this.a.push(255 & e); }; o.prototype.putChar = function (e) { this.putByte(e.charCodeAt(0)); }; o.prototype.putInt = function (e) { var t, n, r = []; if (0 !== e) {\r\n            for (t = 0; e > 0; t++, e >>>= 6)\r\n                r.push(i[63 & e]);\r\n            for (n = t - 1; n >= 0; n--)\r\n                this.putByte(r[n]);\r\n        }\r\n        else\r\n            this.putChar(\"0\"); }; o.prototype.putArray = function (e, t, n) { for (var i = t; i < n; i++)\r\n            this.a.push(e[i]); }; function a(e) { var t, n; for (t = 1, n = 64; e >= n; t++, n <<= 6)\r\n            ; return t; } function c(e) { for (var t = 0, n = 0, i = 0, r = 0, s = 0, o = e.length; o >= 16;) {\r\n            t = t + e[s + 0] | 0;\r\n            n = n + e[s + 1] | 0;\r\n            i = i + e[s + 2] | 0;\r\n            r = r + e[s + 3] | 0;\r\n            t = t + e[s + 4] | 0;\r\n            n = n + e[s + 5] | 0;\r\n            i = i + e[s + 6] | 0;\r\n            r = r + e[s + 7] | 0;\r\n            t = t + e[s + 8] | 0;\r\n            n = n + e[s + 9] | 0;\r\n            i = i + e[s + 10] | 0;\r\n            r = r + e[s + 11] | 0;\r\n            t = t + e[s + 12] | 0;\r\n            n = n + e[s + 13] | 0;\r\n            i = i + e[s + 14] | 0;\r\n            r = r + e[s + 15] | 0;\r\n            s += 16;\r\n            o -= 16;\r\n        } for (; o >= 4;) {\r\n            t = t + e[s + 0] | 0;\r\n            n = n + e[s + 1] | 0;\r\n            i = i + e[s + 2] | 0;\r\n            r = r + e[s + 3] | 0;\r\n            s += 4;\r\n            o -= 4;\r\n        } r = ((r + (i << 8) | 0) + (n << 16) | 0) + (t << 24) | 0; switch (o) {\r\n            case 3: r = r + (e[s + 2] << 8) | 0;\r\n            case 2: r = r + (e[s + 1] << 16) | 0;\r\n            case 1: r = r + (e[s + 0] << 24) | 0;\r\n        } return r >>> 0; } e.create = function (e, i) { var r = new o, s = i.length, u = e.length, l, h = -1; r.putInt(s); r.putChar(\"\\n\"); if (u <= t) {\r\n            r.putInt(s);\r\n            r.putChar(\":\");\r\n            r.putArray(i, 0, s);\r\n            r.putInt(c(i));\r\n            r.putChar(\";\");\r\n            return r.toArray();\r\n        } var d = Math.ceil(u / t), p = new Array(d), f = new Array(d); for (l = 0; l < p.length; l++)\r\n            p[l] = -1; for (l = 0; l < f.length; l++)\r\n            f[l] = -1; var m, g = new n; for (l = 0; l < u - t; l += t) {\r\n            g.init(e, l);\r\n            m = g.value() % d;\r\n            p[l / t] = f[m];\r\n            f[m] = l / t;\r\n        } for (var y = 0, v, S, b, w, T; y + t < s;) {\r\n            w = 0;\r\n            T = 0;\r\n            g.init(i, y);\r\n            l = 0;\r\n            b = 0;\r\n            for (;;) {\r\n                var C = 250;\r\n                S = f[m = g.value() % d];\r\n                for (; S >= 0 && C-- > 0;) {\r\n                    var _, P, E, I, O, R, A, x;\r\n                    for (I = 0, R = v = S * t, A = y + l; R < u && A < s && e[R] === i[A]; I++, R++, A++)\r\n                        ;\r\n                    I--;\r\n                    for (O = 1; O < v && O <= l && e[v - O] === i[y + l - O]; O++)\r\n                        ;\r\n                    P = v - --O;\r\n                    E = l - O;\r\n                    if ((_ = I + O + 1) >= (x = a(l - O) + a(_) + a(P) + 3) && _ > b) {\r\n                        b = _;\r\n                        w = v - O;\r\n                        T = E;\r\n                    }\r\n                    S = p[S];\r\n                }\r\n                if (b > 0) {\r\n                    if (T > 0) {\r\n                        r.putInt(T);\r\n                        r.putChar(\":\");\r\n                        r.putArray(i, y, y + T);\r\n                        y += T;\r\n                    }\r\n                    y += b;\r\n                    r.putInt(b);\r\n                    r.putChar(\"@\");\r\n                    r.putInt(w);\r\n                    r.putChar(\",\");\r\n                    w + b - 1 > h && (h = w + b - 1);\r\n                    b = 0;\r\n                    break;\r\n                }\r\n                if (y + l + t >= s) {\r\n                    r.putInt(s - y);\r\n                    r.putChar(\":\");\r\n                    r.putArray(i, y, y + s - y);\r\n                    y = s;\r\n                    break;\r\n                }\r\n                g.next(i[y + l + t]);\r\n                l++;\r\n            }\r\n        } if (y < s) {\r\n            r.putInt(s - y);\r\n            r.putChar(\":\");\r\n            r.putArray(i, y, y + s - y);\r\n        } r.putInt(c(i)); r.putChar(\";\"); return r.toArray(); }; e.outputSize = function (e) { var t = new s(e), n = t.getInt(); if (\"\\n\" !== t.getChar())\r\n            throw new Error(\"size integer not terminated by '\\\\n'\"); return n; }; e.apply = function (e, t, n) { var i, r = 0, a = new s(t), u = e.length, l = t.length; i = a.getInt(); if (\"\\n\" !== a.getChar())\r\n            throw new Error(\"size integer not terminated by '\\\\n'\"); for (var h = new o; a.haveBytes();) {\r\n            var d, p;\r\n            d = a.getInt();\r\n            switch (a.getChar()) {\r\n                case \"@\":\r\n                    p = a.getInt();\r\n                    if (a.haveBytes() && \",\" !== a.getChar())\r\n                        throw new Error(\"copy command not terminated by ','\");\r\n                    if ((r += d) > i)\r\n                        throw new Error(\"copy exceeds output file size\");\r\n                    if (p + d > u)\r\n                        throw new Error(\"copy extends past end of input\");\r\n                    h.putArray(e, p, p + d);\r\n                    break;\r\n                case \":\":\r\n                    if ((r += d) > i)\r\n                        throw new Error(\"insert command gives an output larger than predicted\");\r\n                    if (d > l)\r\n                        throw new Error(\"insert count exceeds size of delta\");\r\n                    h.putArray(a.a, a.pos, a.pos + d);\r\n                    a.pos += d;\r\n                    break;\r\n                case \";\":\r\n                    var f = h.toArray();\r\n                    if ((!n || 0 != n.verifyChecksum) && d !== c(f))\r\n                        throw new Error(\"bad checksum\");\r\n                    if (r !== i)\r\n                        throw new Error(\"generated size does not match predicted size\");\r\n                    return f;\r\n                default: throw new Error(\"unknown delta operator\");\r\n            }\r\n        } throw new Error(\"unterminated delta\"); }; return e; })); }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.SchemaSerializer = void 0; var i = n(97), r = function () { function e() { } e.prototype.setState = function (e) { this.state.decode(e); }; e.prototype.getState = function () { return this.state; }; e.prototype.patch = function (e) { this.state.decode(e); }; e.prototype.teardown = function () { var e, t; null === (t = null === (e = this.state) || void 0 === e ? void 0 : e[\"$changes\"]) || void 0 === t ? void 0 : t.root.clearRefs(); }; e.prototype.handshake = function (e, t) { if (this.state) {\r\n            var n;\r\n            (new i.Reflection).decode(e, t);\r\n        }\r\n        else\r\n            this.state = i.Reflection.decode(e, t); }; return e; }(); t.SchemaSerializer = r; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.registerType = t.SetSchema = t.CollectionSchema = t.ArraySchema = t.MapSchema = void 0; var i = n(8); Object.defineProperty(t, \"Schema\", { enumerable: 1, get: function () { return i.Schema; } }); var r = n(23); Object.defineProperty(t, \"MapSchema\", { enumerable: 1, get: function () { return r.MapSchema; } }); var s = n(14); Object.defineProperty(t, \"ArraySchema\", { enumerable: 1, get: function () { return s.ArraySchema; } }); var o = n(49); Object.defineProperty(t, \"CollectionSchema\", { enumerable: 1, get: function () { return o.CollectionSchema; } }); var a = n(50); Object.defineProperty(t, \"SetSchema\", { enumerable: 1, get: function () { return a.SetSchema; } }); var c = n(15); Object.defineProperty(t, \"registerType\", { enumerable: 1, get: function () { return c.registerType; } }); c.registerType(\"map\", { constructor: r.MapSchema, getProxy: r.getMapProxy }); c.registerType(\"array\", { constructor: s.ArraySchema, getProxy: s.getArrayProxy }); c.registerType(\"set\", { constructor: a.SetSchema }); c.registerType(\"collection\", { constructor: o.CollectionSchema }); var u = n(100); Object.defineProperty(t, \"dumpChanges\", { enumerable: 1, get: function () { return u.dumpChanges; } }); var l = n(101); Object.defineProperty(t, \"Reflection\", { enumerable: 1, get: function () { return l.Reflection; } }); Object.defineProperty(t, \"ReflectionType\", { enumerable: 1, get: function () { return l.ReflectionType; } }); Object.defineProperty(t, \"ReflectionField\", { enumerable: 1, get: function () { return l.ReflectionField; } }); var h = n(22); Object.defineProperty(t, \"type\", { enumerable: 1, get: function () { return h.type; } }); Object.defineProperty(t, \"deprecated\", { enumerable: 1, get: function () { return h.deprecated; } }); Object.defineProperty(t, \"filter\", { enumerable: 1, get: function () { return h.filter; } }); Object.defineProperty(t, \"filterChildren\", { enumerable: 1, get: function () { return h.filterChildren; } }); Object.defineProperty(t, \"defineTypes\", { enumerable: 1, get: function () { return h.defineTypes; } }); Object.defineProperty(t, \"hasFilter\", { enumerable: 1, get: function () { return h.hasFilter; } }); Object.defineProperty(t, \"SchemaDefinition\", { enumerable: 1, get: function () { return h.SchemaDefinition; } }); Object.defineProperty(t, \"Context\", { enumerable: 1, get: function () { return h.Context; } }); var d = n(7); Object.defineProperty(t, \"OPERATION\", { enumerable: 1, get: function () { return d.OPERATION; } }); }, function (e, t, n) { var i = this && this.__read || function (e, t) { var n = \"function\" == typeof Symbol && e[Symbol.iterator]; if (!n)\r\n            return e; var i = n.call(e), r, s = [], o; try {\r\n            for (; (void 0 === t || t-- > 0) && !(r = i.next()).done;)\r\n                s.push(r.value);\r\n        }\r\n        catch (e) {\r\n            o = { error: e };\r\n        }\r\n        finally {\r\n            try {\r\n                r && !r.done && (n = i[\"return\"]) && n.call(i);\r\n            }\r\n            finally {\r\n                if (o)\r\n                    throw o.error;\r\n            }\r\n        } return s; }, r = this && this.__spread || function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e = e.concat(i(arguments[t])); return e; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.EventEmitter = void 0; var s = function () { function e() { this.handlers = []; } e.prototype.register = function (e, t) { void 0 === t && (t = 0); this.handlers.push(e); return this; }; e.prototype.invoke = function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; this.handlers.forEach((function (t) { return t.apply(void 0, r(e)); })); }; e.prototype.invokeAsync = function () { for (var e = [], t = 0; t < arguments.length; t++)\r\n            e[t] = arguments[t]; return Promise.all(this.handlers.map((function (t) { return t.apply(void 0, r(e)); }))); }; e.prototype.remove = function (e) { var t = this.handlers.indexOf(e); this.handlers[t] = this.handlers[this.handlers.length - 1]; this.handlers.pop(); }; e.prototype.clear = function () { this.handlers = []; }; return e; }(); t.EventEmitter = s; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.ClientState = void 0; var i = function () { function e() { this.refIds = new WeakSet; this.containerIndexes = new WeakMap; } e.prototype.addRefId = function (e) { if (!this.refIds.has(e)) {\r\n            this.refIds.add(e);\r\n            this.containerIndexes.set(e, new Set);\r\n        } }; e.get = function (t) { void 0 === t.$filterState && (t.$filterState = new e); return t.$filterState; }; return e; }(); t.ClientState = i; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.dumpChanges = void 0; function i(e) { for (var t = [e[\"$changes\"]], n = 1, i = {}, r = i, s = function (e) { var n = t[e]; n.changes.forEach((function (e) { var t = n.ref, i = e.index, s = t[\"_definition\"] ? t[\"_definition\"].fieldsByIndex[i] : t[\"$indexes\"].get(i); r[s] = n.getValue(i); })); }, o = 0; o < n; o++)\r\n            s(o); return i; } t.dumpChanges = i; }, function (e, t, n) { var i = this && this.__extends || function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (var n in t)\r\n            t.hasOwnProperty(n) && (e[n] = t[n]); })(t, n); }; return function (t, n) { e(t, n); function i() { this.constructor = t; } t.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i); }; }(), r = this && this.__decorate || function (e, t, n, i) { var r = arguments.length, s = r < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i, o; if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate)\r\n            s = Reflect.decorate(e, t, n, i);\r\n        else\r\n            for (var a = e.length - 1; a >= 0; a--)\r\n                (o = e[a]) && (s = (r < 3 ? o(s) : r > 3 ? o(t, n, s) : o(t, n)) || s); return r > 3 && s && Object.defineProperty(t, n, s), s; }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.Reflection = t.ReflectionType = t.ReflectionField = void 0; var s = n(22), o = n(8), a = n(14), c = n(15), u = new s.Context, l = function (e) { i(t, e); function t() { return null !== e && e.apply(this, arguments) || this; } r([s.type(\"string\", u)], t.prototype, \"name\", void 0); r([s.type(\"string\", u)], t.prototype, \"type\", void 0); r([s.type(\"number\", u)], t.prototype, \"referencedType\", void 0); return t; }(o.Schema); t.ReflectionField = l; var h = function (e) { i(t, e); function t() { var t = null !== e && e.apply(this, arguments) || this; t.fields = new a.ArraySchema; return t; } r([s.type(\"number\", u)], t.prototype, \"id\", void 0); r([s.type([l], u)], t.prototype, \"fields\", void 0); return t; }(o.Schema); t.ReflectionType = h; var d = function (e) { i(t, e); function t() { var t = null !== e && e.apply(this, arguments) || this; t.types = new a.ArraySchema; return t; } t.encode = function (e) { var n = e.constructor, i = new t; i.rootType = n._typeid; var r = function (e, t) { for (var n in t) {\r\n            var r = new l;\r\n            r.name = n;\r\n            var s = void 0;\r\n            if (\"string\" == typeof t[n])\r\n                s = t[n];\r\n            else {\r\n                var a = t[n], c = void 0;\r\n                if (o.Schema.is(a)) {\r\n                    s = \"ref\";\r\n                    c = t[n];\r\n                }\r\n                else\r\n                    \"string\" == typeof a[s = Object.keys(a)[0]] ? s += \":\" + a[s] : c = a[s];\r\n                r.referencedType = c ? c._typeid : -1;\r\n            }\r\n            r.type = s;\r\n            e.fields.push(r);\r\n        } i.types.push(e); }, s = n._context.types; for (var a in s) {\r\n            var c = new h;\r\n            c.id = Number(a);\r\n            r(c, s[a]._definition.schema);\r\n        } return i.encodeAll(); }; t.decode = function (e, n) { var r = new s.Context, a = new t; a.decode(e, n); var u = a.types.reduce((function (e, t) { var n = function (e) { i(t, e); function t() { return null !== e && e.apply(this, arguments) || this; } return t; }(o.Schema), s = t.id; e[s] = n; r.add(n, s); return e; }), {}); a.types.forEach((function (e) { var t = u[e.id]; e.fields.forEach((function (e) { var n; if (void 0 !== e.referencedType) {\r\n            var i = e.type, o = u[e.referencedType];\r\n            if (!o) {\r\n                var a = e.type.split(\":\");\r\n                i = a[0];\r\n                o = a[1];\r\n            }\r\n            \"ref\" === i ? s.type(o, r)(t.prototype, e.name) : s.type(((n = {})[i] = o, n), r)(t.prototype, e.name);\r\n        }\r\n        else\r\n            s.type(e.type, r)(t.prototype, e.name); })); })); var l = u[a.rootType], h = new l; for (var d in l._definition.schema) {\r\n            var p = l._definition.schema[d];\r\n            \"string\" != typeof p && (h[d] = \"function\" == typeof p ? new p : new (c.getType(Object.keys(p)[0]).constructor));\r\n        } return h; }; r([s.type([h], u)], t.prototype, \"types\", void 0); r([s.type(\"number\", u)], t.prototype, \"rootType\", void 0); return t; }(o.Schema); t.Reflection = d; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.NoneSerializer = void 0; var i = function () { function e() { } e.prototype.setState = function (e) { }; e.prototype.getState = function () { return null; }; e.prototype.patch = function (e) { }; e.prototype.teardown = function () { }; e.prototype.handshake = function (e) { }; return e; }(); t.NoneSerializer = i; }, function (e, t, n) { Object.defineProperty(t, \"__esModule\", { value: 1 }); t.showNotification = void 0; var i = new UICanvas, r = new UIText(i); r.fontSize = 30; r.color = Color4.White(); r.hAlign = \"center\"; r.vAlign = \"center\"; r.width = \"100%\"; r.height = \"100%\"; r.value = \"\"; r.visible = 0; var s = function (e, _a) {\r\n            var _b = _a === void 0 ? {} : _a, _c = _b.error, t = _c === void 0 ? 0 : _c, _d = _b.info, n = _d === void 0 ? 0 : _d, _e = _b.warning, s = _e === void 0 ? 0 : _e;\r\n            i.visible = 1;\r\n            r.visible = 1;\r\n            void 0;\r\n            r.value = e;\r\n            r.width = 120;\r\n            r.height = 30;\r\n            setTimeout(function () { r.visible = 0; r.value = \"\"; }, 4e3);\r\n        }; t.showNotification = s; }, function (e, t, n) { var i = this && this.__awaiter || function (e, t, n, i) { function r(e) { return e instanceof n ? e : new n((function (t) { t(e); })); } return new (n || (n = Promise))((function (n, s) { function o(e) { try {\r\n            c(i.next(e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function a(e) { try {\r\n            c(i[\"throw\"](e));\r\n        }\r\n        catch (e) {\r\n            s(e);\r\n        } } function c(e) { e.done ? n(e.value) : r(e.value).then(o, a); } c((i = i.apply(e, t || [])).next()); })); }; Object.defineProperty(t, \"__esModule\", { value: 1 }); t.getLand = void 0; var r = function () { return i(void 0, void 0, void 0, (function () { var e, t, n, i; return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dcl.loadModule(\"ParcelIdentity\")];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, dcl.callRpc(\"ParcelIdentity\", \"getParcel\", [])];\r\n                case 2:\r\n                    i = _a.sent();\r\n                    void 0;\r\n                    return [2 /*return*/, null === (n = null === (t = null === (e = null == i ? void 0 : i.land) || void 0 === e ? void 0 : e.sceneJsonData) || void 0 === t ? void 0 : t.scene) || void 0 === n ? void 0 : n.base];\r\n            }\r\n        }); })); }; t.getLand = r; }]));\r\n});\r\ndefine(\"metas/sammichgame/sammichgame\", [\"require\", \"exports\", \"metas/sammichgame/meta\"], function (require, exports, meta_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.SammichGame = void 0;\r\n    engine[\"RESOURCE_BASE\"] = \"metas/sammichgame/\";\r\n    globalThis[\"RESOURCE_BASE\"] = \"metas/sammichgame/\";\r\n    exports.SammichGame = meta_1.default.default;\r\n});\r\ndefine(\"src/game\", [\"require\", \"exports\", \"@decentraland/Identity\", \"@decentraland/EnvironmentAPI\", \"metas/sammichgame/sammichgame\"], function (require, exports, Identity_1, EnvironmentAPI_1, sammichgame_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var _getUserData = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n        var userData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!!userData) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, Identity_1.getUserData()];\r\n                case 1:\r\n                    userData = _a.sent();\r\n                    if (!userData) {\r\n                        console.log(\"NO USER DATA, retry\", userData);\r\n                    }\r\n                    return [3 /*break*/, 0];\r\n                case 2: return [2 /*return*/, userData];\r\n            }\r\n        });\r\n    }); };\r\n    var _getCurrentRealm = function () { return __awaiter(void 0, void 0, void 0, function () {\r\n        var data;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!!data) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, EnvironmentAPI_1.getCurrentRealm()];\r\n                case 1:\r\n                    data = _a.sent();\r\n                    if (!data) {\r\n                        console.log(\"NO REALM DATA, retry\", data);\r\n                    }\r\n                    return [3 /*break*/, 0];\r\n                case 2:\r\n                    console.log(\"currentRealm\", data);\r\n                    return [2 /*return*/, data];\r\n            }\r\n        });\r\n    }); };\r\n    var landOwnerData = {\r\n        host_data: \"{\\n  \\\"sammichgame\\\": {\\n    \\\"position\\\": {\\n      \\\"x\\\": 8,\\n      \\\"y\\\": 0.8,\\n      \\\"z\\\": 14\\n    },\\n    \\\"rotation\\\": {\\n      \\\"x\\\": 0,\\n      \\\"y\\\": 0,\\n      \\\"z\\\": 0\\n    },\\n    \\\"scale\\\": {\\n      \\\"x\\\": 1.5,\\n      \\\"y\\\": 1.5,\\n      \\\"z\\\": 1\\n    },\\n    \\\"hideFrame\\\": true,\\n    \\\"hideBoard\\\": false,\\n    \\\"hideAd\\\": true,\\n    \\\"gameID\\\": \\\"0,0\\\",\\n    \\\"showScenario\\\": true,\\n    \\\"showJoinVoice\\\": true,\\n    \\\"soundDistance\\\": 100,\\n    \\\"voiceChannel\\\": \\\"dcl-sammich-game\\\",\\n    \\\"serverWs\\\": \\\"wss://mana-fever.com\\\",\\n    \\\"serverHttp\\\": \\\"https://mana-fever.com\\\"\\n  }\\n}\"\r\n    };\r\n    var meta;\r\n    try {\r\n        meta = new sammichgame_1.SammichGame(mzAPI, landOwnerData);\r\n    }\r\n    catch (err) {\r\n        meta = new sammichgame_1.SammichGame({ getUserData: _getUserData, getCurrentRealm: _getCurrentRealm }, landOwnerData);\r\n    }\r\n    engine.addSystem(meta);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,",
    "sha256": "ad55ee9bb27a4fbb3d384d07f22004024a0628b917e9974cfd4677969a2f901c"
  }
]